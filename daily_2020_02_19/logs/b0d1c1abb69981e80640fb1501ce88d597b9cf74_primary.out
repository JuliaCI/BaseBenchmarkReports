cset: moving following pidspec: 11249
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.430119107 seconds)
loading group "string"... done (took 0.617813344 seconds)
loading group "linalg"... done (took 7.985921229 seconds)
loading group "parallel"... done (took 0.186113977 seconds)
loading group "find"... done (took 1.224094477 seconds)
loading group "tuple"... done (took 2.000081384 seconds)
loading group "dates"... done (took 1.320673272 seconds)
loading group "micro"... done (took 0.252122574 seconds)
loading group "io"... done (took 0.976915128 seconds)
loading group "scalar"... done (took 40.353293901 seconds)
loading group "sparse"... done (took 12.879991304 seconds)
loading group "broadcast"... done (took 1.058256872 seconds)
loading group "union"... done (took 13.469938639 seconds)
loading group "simd"... done (took 5.055258666 seconds)
loading group "random"... done (took 9.443801751 seconds)
loading group "problem"... done (took 1.861797011 seconds)
loading group "array"... done (took 21.698165011 seconds)
loading group "misc"... done (took 1.762972182 seconds)
loading group "sort"... done (took 3.480803172 seconds)
loading group "collection"... done (took 19.049322285 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529762477 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133391485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136604489 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128963544 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157209603 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119444433 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131522003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09079623 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.845786588 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15430011 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125275825 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.451804858 seconds)
done (took 5.334771115 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177494303 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086840417 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087257254 seconds)
  done (took 1.311335389 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07127698 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129021233 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070743564 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071010827 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071218455 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071651811 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072537524 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072599881 seconds)
  done (took 1.696648108 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076805002 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072132471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070167714 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071744195 seconds)
  done (took 1.432886867 seconds)
done (took 5.846116873 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.827874135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223058458 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193568117 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.431697467 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136762101 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.167969983 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645441031 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315725052 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193402459 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084413849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.114188606 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35268928 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114780902 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642297149 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078052193 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095246287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139730315 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43310831 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.072344341 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085866314 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092560847 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131880784 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089965825 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078005009 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150395451 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071972319 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142128655 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083846886 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070553154 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224108832 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178033192 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663899585 seconds)
  done (took 10.507100445 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104276487 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105088108 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072985566 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133267258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.10673632 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074693352 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081083284 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073342751 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097247794 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135752496 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096436812 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10767435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06903009 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072343252 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089721182 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212768872 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084727027 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085423403 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074404846 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083632142 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111969945 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082393896 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08505816 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084622368 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133691214 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189222517 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102642997 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100620206 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070290986 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087090705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118611451 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.1361589 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071894229 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071845164 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134907066 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.099659333 seconds)
  done (took 4.82152361 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.060588834 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149878708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095479875 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140016163 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089937811 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068198906 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096328047 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.113280761 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069174758 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085016411 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216986802 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.344397013 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.646222847 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114420397 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110778166 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071115632 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072785167 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070852406 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.593776681 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100941822 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111853763 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085676334 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074392047 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073507328 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358926055 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071490497 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067978805 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072636231 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060442506 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129812403 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071935264 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.983607175 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169350848 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071163009 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105235748 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.301926204 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094806511 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069588459 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.148739453 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073476386 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069104152 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162239985 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073959997 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070216517 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088824697 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107083663 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122875534 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069242776 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071234314 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169486853 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069548177 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083517358 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.098767178 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15793509 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081904554 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068446736 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265407543 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093329444 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073650669 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068291362 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187846985 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137096907 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073650101 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.073760494 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071605749 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068088958 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072622799 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377022098 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069273001 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.937591647 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075028237 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080279639 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073235902 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07586255 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076705791 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076275504 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092259494 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070126917 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079369319 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070116149 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070052393 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071366115 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08698304 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.404710237 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070777197 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072173155 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068525673 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09348938 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09974211 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.17354604 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069649598 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10333666 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07290936 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069848312 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112451146 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071132262 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087229958 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073789605 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116873005 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070540527 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.093260546 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071285116 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.103061364 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074215031 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102128486 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083962588 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072850743 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.446822896 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069599662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06843926 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071956455 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069478093 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07092988 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070254991 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083740357 seconds)
  done (took 22.280546893 seconds)
done (took 39.811811205 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270717067 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081248684 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078655064 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077128437 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077440414 seconds)
  done (took 1.817211065 seconds)
done (took 3.030387453 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128207828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104006217 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068569265 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102383179 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069024461 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106968255 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105440178 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081668405 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106662256 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068169465 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102677027 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067640415 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068659077 seconds)
  done (took 2.413791157 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088091124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088539766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073450648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088365721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067368686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087209511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08587381 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093967543 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086194144 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076960666 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06787531 seconds)
  done (took 2.109878493 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086967432 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088256821 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075642222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086926875 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067310564 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087110495 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085955292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090089125 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086261573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078268427 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067468749 seconds)
  done (took 2.101322637 seconds)
done (took 7.825695399 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082136889 seconds)
  done (took 1.275315871 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.603697223 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.142609561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085872883 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116008498 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198140596 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.123055053 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276693751 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091190361 seconds)
  done (took 9.019644396 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092778057 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072453865 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073938559 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072843421 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085531869 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072912835 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075026376 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075288828 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075772687 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075011009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074343546 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072400511 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076649938 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073701072 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074805297 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075844544 seconds)
  done (took 2.487432119 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09674855 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09596061 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077036735 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078900885 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075844418 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07518762 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077058449 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077505133 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074653449 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075891253 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077569279 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076745721 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075435168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067556883 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077247546 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079073188 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074292014 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077513959 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077961733 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07919159 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078421631 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067733697 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075289208 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077396711 seconds)
  done (took 3.169777285 seconds)
done (took 17.154898198 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110775839 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071505548 seconds)
  done (took 1.381989549 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085239235 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086225942 seconds)
  done (took 1.379040729 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086074323 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068644302 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094609486 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081801256 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069461328 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068903771 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.09125369 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069203552 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068910072 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069597986 seconds)
  done (took 1.975750625 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071876822 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081325115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073904781 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085007664 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077154944 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067573596 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075644915 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070854956 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081799752 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066255712 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075186618 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086642302 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074642432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088340513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075355227 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071901563 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074117419 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071854116 seconds)
  done (took 2.577609034 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069627195 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069701065 seconds)
  done (took 1.349987971 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071072689 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066792091 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070515381 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070012688 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067075549 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065782937 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067088913 seconds)
  done (took 1.685343111 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391206266 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120392025 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.324990337 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075503855 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086395391 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27074521 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069379046 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075071847 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074190628 seconds)
  done (took 2.740251321 seconds)
done (took 14.304459914 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084380028 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091551321 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10065917 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393757504 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096061893 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069752328 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118048847 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.19308137 seconds)
done (took 2.369049963 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217387324 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721655173 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.446417613 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.218922418 seconds)
  done (took 2.601164457 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.360257978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093374096 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063162603 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071281879 seconds)
  done (took 1.811896307 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070021473 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072768877 seconds)
  done (took 1.363468914 seconds)
done (took 7.214874786 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070020591 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071569055 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067580548 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069676276 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.067853759 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068213197 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087878697 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069304846 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069693808 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069586151 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.069673482 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069716779 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069604193 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066934831 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066971173 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066934083 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069649394 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069368987 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067440159 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066913696 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066788889 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069191225 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067162505 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06691239 seconds)
  done (took 2.921558991 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089291414 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069889988 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075444491 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074420775 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072886325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075158649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074856911 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069539222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075494091 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07168281 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072490158 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073109365 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072030969 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072453848 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071853111 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07277603 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075422864 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069306665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07125044 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072560163 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.18379306 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069714908 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074265508 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074640096 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072180372 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072822649 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071640167 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069732055 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074207953 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072361036 seconds)
  done (took 3.535444827 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073151363 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066810957 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067286912 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074877642 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067207029 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069215279 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067069616 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067350112 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067636764 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066972958 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068398962 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066871068 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067806177 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067695619 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067824463 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071123231 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083605686 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067302477 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067689623 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068314066 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070734484 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067040387 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06723605 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066794438 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066964906 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066188509 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067014972 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066499015 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068098332 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.066791226 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069893085 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070839447 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066475231 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074619124 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070996084 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06687317 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071132649 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06732139 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067473547 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066698474 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066819197 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066853317 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06742593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073990556 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067916685 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069269329 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068018091 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067951189 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068221779 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06947398 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067184706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06898062 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.071090392 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.07032563 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072186479 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067118195 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067917585 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066538901 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067642387 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066948692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066378011 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.066517946 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069429555 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067442482 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082483983 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.073817767 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066956935 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070423285 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068136028 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070249009 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068507218 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08260287 seconds)
  done (took 6.20713861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093232008 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092218784 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069373046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06906294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065151325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06734476 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075155896 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070105188 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071165471 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088018019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069923608 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071146982 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070923207 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073346161 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070350191 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071502901 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077662125 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067212095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069285408 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073566103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070050218 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074787461 seconds)
  done (took 2.85898197 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159730829 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073521392 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110011125 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079635559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073516275 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078955853 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073665306 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073909991 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073301676 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071520719 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071062279 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074424871 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073955417 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070631491 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071334945 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070998963 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073309901 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070724681 seconds)
  done (took 2.676828586 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079989047 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069799346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091581343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06924498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069162078 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071627413 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073807087 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077735631 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07193046 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069682273 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077751556 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071788606 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072496412 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069647642 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071996118 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069568186 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072357302 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069512304 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077896904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073527842 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074386874 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07795068 seconds)
  done (took 2.856626044 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082934354 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071684766 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08504863 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071911361 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065791443 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067722519 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073676856 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06932686 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073863569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071883628 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068932369 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068457875 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072780244 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069252009 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072536632 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070083889 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071569234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069653491 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071396893 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065469693 seconds)
  done (took 2.670094982 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091324609 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072146045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072350531 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080194451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071576497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072282794 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079176417 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071224222 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071793344 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092610256 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071551225 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071323026 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078836225 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075860038 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071769441 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07860921 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078534048 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079496531 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072042838 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071306854 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093044573 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071568469 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078923476 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071488962 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071895805 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072037674 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071434437 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076208686 seconds)
  done (took 3.368002552 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070288288 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070382421 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067593154 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066873953 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067143414 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06765848 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067164489 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067444934 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070203737 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067191399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069967276 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069408452 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069960283 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069771081 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06989776 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069708951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069483856 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067059132 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06701961 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06744518 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069448189 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070017055 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069631164 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066965116 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067849405 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069476309 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066900557 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067100576 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070082428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067928464 seconds)
  done (took 3.297453569 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079352434 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077838139 seconds)
  done (took 1.400003354 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066524247 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084528337 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067391095 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074136866 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073753324 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070957327 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076764912 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07384315 seconds)
  done (took 1.825176104 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08574902 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080828719 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071174929 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083936366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.082778354 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089826647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.145556739 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073064758 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.079145144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070020028 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.089040208 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07164062 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078723472 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072120575 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07710838 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078623617 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068385729 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07592543 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072340329 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067995712 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071084541 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07872353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072651726 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065569671 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071476825 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095165245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081396143 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069410674 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073598016 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07848481 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076080122 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063574009 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070736022 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071290182 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068651848 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080592731 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085400657 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07320082 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078788685 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070974647 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079726515 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064757245 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074863518 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076898175 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080733408 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070558963 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070600339 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064625762 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068528809 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072463532 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0652064 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070872422 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064526475 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077102994 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074151721 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080802888 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069581418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071772598 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072963413 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073491204 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076780373 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072845334 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073173968 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069658815 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080954164 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075176249 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078792156 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065166543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0646005 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069317974 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079702043 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094449874 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076337761 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070791207 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070690291 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067499062 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073356096 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071036604 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075597472 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076339267 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07002751 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075446771 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077776908 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070346379 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073244605 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078968921 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068494498 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072668485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068191939 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087093891 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067502499 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067880103 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080710285 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072888591 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069320449 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067378774 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077035659 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063602686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069817884 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070407911 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070220321 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079585205 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073101571 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073327355 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077877534 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076911214 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069445161 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07198066 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066258091 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069683995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068125009 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077373552 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06337353 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071931106 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.196928108 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072241952 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079690847 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069167475 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071174109 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079042228 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.07704366 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069710101 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067406512 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073711027 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071341571 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073681162 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078882174 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069370192 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065478699 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065351925 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073990272 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07050243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073611761 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075141997 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073545815 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064449182 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06802456 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075422797 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078929566 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070967175 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072492155 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077196678 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071980355 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069877311 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077423923 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072385777 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069387218 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076331453 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07170438 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065475518 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072918877 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073104163 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068966577 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074231013 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07368674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073571682 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070810071 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070994286 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079669942 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07245373 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072498832 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072052629 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071834695 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083598927 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075143024 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06701798 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069312154 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080711629 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070743858 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071369197 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.07141382 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075335727 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073991667 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070530551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071920964 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07292811 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080432847 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075676844 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072035988 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075398457 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082776063 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070426873 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073271953 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069909076 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070510097 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070676879 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078524329 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075737003 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074274606 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072531554 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066713517 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075627595 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077946861 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069605979 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067645602 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070797611 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075527099 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075966555 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074033716 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070390408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069697381 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072023395 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073114978 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073807375 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070325768 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06948773 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.076506238 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069318508 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.076965003 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070720993 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080849325 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074664022 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06597467 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072510561 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06783238 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076721508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065059613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067680928 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06954348 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069855293 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068945754 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074551849 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062929389 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075939706 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077009775 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070199241 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06865259 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068500703 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076466469 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071255502 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073427189 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.0730431 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.203754047 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083245609 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071377992 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07731588 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084426764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072831957 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06677834 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079860427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071313795 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071616735 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071850318 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071153799 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075979052 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081170101 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078799672 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064342753 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073391817 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068301539 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070731306 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065673971 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075142215 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073789069 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071516646 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077924603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070798375 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070671063 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075000967 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070090559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071329702 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071162083 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073465333 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070923894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072493016 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07000706 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073707039 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069433817 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067354891 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072431212 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069641165 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070802849 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076202959 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069664896 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070921202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073871904 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070885478 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071203313 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07078369 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070017912 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073488597 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07097786 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071167999 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072563367 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064998842 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078699049 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069564116 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078099644 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070702412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067208784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076789935 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073325868 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075326213 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070464533 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070839533 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071889189 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068992948 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073510035 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078045598 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067638562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080823515 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077304557 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070903704 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073490489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070868024 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071569396 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069455428 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07108813 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070747989 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070584077 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069917119 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075068974 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073260992 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070831705 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072064559 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071212742 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070467681 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071272698 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064100925 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069300605 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06991082 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072960722 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079760685 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070781879 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070870222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06906375 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071518199 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069452425 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06677804 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077931991 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078661642 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071061347 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07709603 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069126469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071485135 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080047469 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063438943 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068361971 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067110561 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067907455 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077369435 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070740217 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079959737 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069762174 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068423475 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066212322 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06950998 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068109561 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063326631 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06676829 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07316905 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069234303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068768649 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06917702 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.203365514 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071667493 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080607549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070853957 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072198114 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070803052 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067721665 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069916644 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070462902 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074751004 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070917837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.068385953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066845729 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070164284 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071452446 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072393543 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070581784 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073025634 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077323712 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070527762 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074379419 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072990334 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065009249 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073469213 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07127355 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069793765 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069679804 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073710762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073833509 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070886156 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079724395 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070248142 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071031833 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070824037 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06766358 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069495497 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070035743 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07009081 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070305507 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071407637 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078996029 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067868758 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072842607 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071533854 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071294052 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07641856 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071533448 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07419475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076611129 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07075102 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072131277 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078979159 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074298014 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073785242 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071469186 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072326075 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076319532 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070126659 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07813347 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070392926 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071787814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072680419 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067574791 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070995023 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070859476 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0698446 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076778445 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071716327 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070271036 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069393687 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067206746 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070999633 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073327728 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07745888 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073230531 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073382959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06506986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067538382 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070612863 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068546598 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072137942 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073013416 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076005071 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072435159 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070420092 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069135173 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079386739 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075735892 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073967255 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068550734 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073691453 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071248326 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072836481 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071807021 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070658241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071284327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074139697 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072111291 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069503482 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077288858 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073814612 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071200634 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07208164 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072080315 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071083542 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065187403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070171363 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072178523 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075803528 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07235702 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070691096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080507642 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067416912 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069699429 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072378658 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067987111 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073647639 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064529669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071198043 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069705985 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069231473 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063729309 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.200178084 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069997848 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073639293 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.069571616 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066010874 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081709816 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079368177 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07373765 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069362318 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069308072 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065688676 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065135 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070014823 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071793589 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072790471 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080435463 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071050723 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070961416 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064940641 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07045567 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073298496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073384571 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067312825 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065736249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06942121 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073681785 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076174528 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069315533 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069738945 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073409961 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072885597 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067961851 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074076103 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067592555 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074712227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082891398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070376081 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07153679 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.0760877 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078293216 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070582963 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06439481 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070382762 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073247483 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070460765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071171128 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071084203 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085549793 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073654872 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069931122 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069567056 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073300463 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069417258 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078442118 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071208866 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070223377 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074412332 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073088096 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078435242 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074391492 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077230893 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073627502 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073769177 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069705622 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070848968 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068348499 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068898911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071497002 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070393093 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074722033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078395394 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069591788 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081473644 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079945259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072084471 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066705531 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069561764 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069762426 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065582089 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070906577 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068346187 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068583866 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068576921 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069087295 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071412954 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075442914 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071169701 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070136786 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069745931 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064696353 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073797977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073447985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071719461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066911033 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070879031 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071613813 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074482483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074478365 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06818459 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071896808 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071914349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070947082 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065064715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076548574 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069332725 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072389862 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069627159 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070081143 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070203975 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073106849 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074447406 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070940318 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072033378 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073844655 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070616392 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06623224 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.066285119 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07426228 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067202262 seconds)
  done (took 44.975483646 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105951284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066566577 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065790639 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065178495 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076427468 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06635545 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065468444 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066101693 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065930766 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068484183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064936654 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065296128 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073612847 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080636645 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07623871 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069875022 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065272083 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066090077 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06497667 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066694486 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074098587 seconds)
  done (took 2.828749444 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076834543 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081993625 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07846457 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085822385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074432846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073355634 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078840452 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074218561 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081816455 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075847475 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081387055 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073192095 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075687856 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076009891 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075557884 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073734563 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084108394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074181825 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073693354 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079338667 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073775327 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079080085 seconds)
  done (took 3.018247081 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07140149 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069957636 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072237416 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064290248 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069719934 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.064604509 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072556655 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067335143 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072639988 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068613142 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.068356436 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069628319 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071057276 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064266214 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069654042 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067420978 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111366018 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072289453 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06927282 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070127705 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064684373 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071496626 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064775009 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065421598 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068986957 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072754057 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069906537 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068534404 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069201322 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06900325 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069176282 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06715119 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071335752 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070332549 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068594519 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068525622 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068924041 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069690244 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065077081 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067814639 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070847298 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065314759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069769786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07106804 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067886817 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066795563 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071718338 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069607723 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064235565 seconds)
  done (took 4.736312139 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081908924 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114072016 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070378538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09290794 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083418164 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076047718 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073106754 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094184098 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.068621317 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067280766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084246551 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082273037 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068826893 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07373453 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076117603 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068884129 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069808584 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067745078 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072190164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068197134 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073221917 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076043162 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083253036 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081328963 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072464722 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067778132 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068230999 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072848399 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081007304 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073066163 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073151454 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074493184 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083595549 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070718557 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068065981 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070863866 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084899073 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070101915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071846173 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066474761 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071072673 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072739479 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075961468 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085443429 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068876313 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074082269 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068471377 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065913268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081319084 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071411646 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076181819 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082610073 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07333219 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069217736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073458797 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083279207 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068799208 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067607628 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072576078 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08095256 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066457771 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072228986 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081982385 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071144061 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075910038 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082437762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073750623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073122491 seconds)
  done (took 6.581607339 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079273585 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09971934 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08727009 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086361119 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079083924 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079189406 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079192532 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078670064 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078972798 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083887013 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079333204 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12010997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07435437 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081768903 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07901108 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079047072 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079841906 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079213785 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079430993 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079128749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078745414 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086025307 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079390673 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087042169 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090337703 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074187117 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078472113 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078570279 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086334637 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079711343 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082986221 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07894995 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079301797 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086412965 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083049724 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079107225 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068724998 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078529153 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.078927355 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078864014 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.074685926 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086240956 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079108684 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074087083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079024135 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078532658 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086090465 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.0825844 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081195414 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083824592 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079059335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087486191 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079328175 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07940922 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086842231 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088884314 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086244684 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086572407 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079612555 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086879386 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086522858 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089004763 seconds)
  done (took 6.438615455 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08628302 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078174316 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085846818 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065441943 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066947297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075781815 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067743165 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067769137 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077216322 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07730264 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080006638 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075709911 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077530171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079193342 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075262612 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077998466 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075593779 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07488767 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077044683 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075560123 seconds)
  done (took 2.859278564 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077652528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086868342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069530718 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075393755 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.07296636 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075065815 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072454731 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072683864 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07019905 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072901053 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079478702 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079639002 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070114534 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07474676 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079044764 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074366335 seconds)
  done (took 2.53760037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087231464 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077202005 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083366621 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06993194 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070884897 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066567582 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069065705 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064926758 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066574422 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083044209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070672841 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080306203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069347775 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068578176 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066123456 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075099376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065292389 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066466873 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069962956 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082838399 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073360064 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068145239 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073017815 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069942204 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071879311 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074275184 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068679658 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070103736 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06630709 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069916768 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072543248 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073657109 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066293791 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067889706 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068197741 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067073785 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.0692283 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069655928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074572118 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069565111 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.067255623 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07106889 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069274654 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070734478 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066114764 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06950346 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065195808 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072180832 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067013125 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072515144 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069137594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.071867643 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071097006 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078621343 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072642351 seconds)
  done (took 5.247161424 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084004401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073056482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065691453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068137874 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.073429587 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071046543 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072921114 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071159122 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07062006 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068222728 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071248451 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072331684 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071113304 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073130438 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070726972 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07330624 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065270114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070898512 seconds)
  done (took 2.632370001 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075635251 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069347478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077657543 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070353633 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069755385 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071582481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065588324 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067822309 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067809082 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069785391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06938482 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071958653 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070015178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071969479 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069476032 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069190365 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071973908 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068594562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069584188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065272744 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071909507 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068185076 seconds)
  done (took 2.883710945 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.09785738 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087050566 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145417507 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.08323824 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089743135 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075380789 seconds)
  done (took 1.92058688 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09520796 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105078733 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070561393 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073608253 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079988637 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073851404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073311984 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073777996 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081975911 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079559271 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073491463 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082297718 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082294489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081303367 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079978147 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079349384 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073714782 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073900454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070398949 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087561598 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0740831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082077615 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074020068 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073400732 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074040227 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08163612 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08245761 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079076407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073880906 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082034131 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079528876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07397148 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082100405 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079935909 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074060374 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081981947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073645399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087258393 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0794661 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081701227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073107449 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079823955 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082722757 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078608493 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082721372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07377101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078851268 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07380369 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07451692 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089331031 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079387265 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080882273 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079560953 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08194045 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082093195 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088743855 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079070553 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080912548 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079487947 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079366937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081174709 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078898392 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081058372 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079903594 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079387349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081641263 seconds)
  done (took 6.587363684 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108572871 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071342183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073621561 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078828972 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081320055 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074273319 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074196869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07365508 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074212392 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071150894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112805561 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073973861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081673251 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081514966 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074047348 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073548242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074367412 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081584418 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070612439 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089343188 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073628248 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081501383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081208006 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080818454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079513988 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079635752 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07399928 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07419472 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073829677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073901042 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078613076 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073953011 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080934812 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071495181 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08143682 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073881758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074002461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078863082 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073834901 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080481214 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081755105 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087474864 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073878679 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074481204 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0792031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073729365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073555901 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070819559 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074041405 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070451301 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079303957 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079172466 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079157957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081090872 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074408659 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07397706 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073752482 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074005657 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074093396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079304916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081361358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073983134 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089749199 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073995426 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073683824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081115768 seconds)
  done (took 6.494083538 seconds)
done (took 134.577507294 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192474009 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.172399711 seconds)
  done (took 1.70058816 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072372664 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103752636 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081104283 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13239941 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07031048 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103655803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102887016 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081702189 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07011607 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070188666 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069840822 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07247836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135368004 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070311021 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069879732 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072886625 seconds)
  done (took 2.727872127 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104888033 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169249637 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107048143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068847962 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103723162 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076923184 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068957389 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079326186 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075681305 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069421793 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076373634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074249267 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069343356 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074509911 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075175731 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076175526 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068944119 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07637135 seconds)
  done (took 2.867939713 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103123334 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095187489 seconds)
  done (took 1.551608561 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159373929 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137547717 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206988917 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.358938724 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165599792 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.1525911 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.147709475 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147340432 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122812742 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143446103 seconds)
  done (took 3.09509938 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104853206 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160457717 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280563461 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123696006 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.0775208 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097599446 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125733658 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082476614 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08470379 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083825895 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084635863 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080440057 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104403108 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077180075 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07803193 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080240827 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108790713 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077158514 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078915999 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079894372 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105529718 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069648336 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077320243 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0770339 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08115877 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080894072 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070453359 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069667198 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079538384 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078591925 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080494723 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0959787 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081037874 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110440947 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075381396 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111620004 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081259197 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076799856 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078827602 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077277089 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081682684 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081523217 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077106186 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079967523 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069847958 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081188706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069543351 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069442138 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080920355 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070535533 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081117247 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080414428 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110558299 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070862607 seconds)
  done (took 6.212647023 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110168527 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111820582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075722954 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119451811 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109099305 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075805105 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109983543 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102284788 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110346491 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074007584 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072850258 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073972807 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085922569 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086709736 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121812976 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113268088 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077658699 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075368099 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112541506 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111757637 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073192236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104045449 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097477871 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110344675 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071269851 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074804529 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071344247 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073969236 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079902204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081729562 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073803067 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084025003 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088395381 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081697105 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071417957 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071668136 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071837983 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0834173 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082986199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082204722 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081317295 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071317266 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072275922 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073538736 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074162118 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072021773 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.082589148 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083784612 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082862919 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074169995 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073974511 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073920902 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073437279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084210845 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081155291 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08450063 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083441522 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072237399 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072272683 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07637057 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083879976 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082836593 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083151368 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073935037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082844696 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07239786 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084259195 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088060383 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072561575 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074311626 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073023239 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073248554 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073272647 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081145724 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081553001 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073328975 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07324792 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072617085 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083960309 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08277849 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073446278 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081149199 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071130408 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072399422 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074598075 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073718699 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.082266659 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083202287 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074055742 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071505726 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073622632 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072191744 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070734932 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080229001 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082637993 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081709255 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081817642 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072986692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081706378 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080830052 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073315129 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081743351 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071415662 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073046545 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072718291 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081051953 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079579581 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081232616 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07239725 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071592426 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079963978 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082881011 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071429864 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080163773 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081699958 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080920818 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070658252 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083518368 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070845697 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081718491 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072538257 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081435288 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071412031 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08103815 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071370948 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.07050356 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07108927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081246785 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0726771 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0708991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071992562 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073880392 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081082842 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083894826 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073726314 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079771898 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080095663 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072821844 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080924381 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070806898 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079124561 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071104907 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071680815 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069399663 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08236092 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070541089 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069963196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072189754 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080790155 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070328109 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079426817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078032155 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070322122 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081803112 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079752848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077957713 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080699553 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071831689 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069903262 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070644912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071059932 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077282471 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079737632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071314816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070953949 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078351004 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079330578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069405624 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078177244 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079306583 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079114872 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07028497 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071392682 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080731968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08079401 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07861352 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078488378 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079170764 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070619302 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077919964 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078422764 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069573105 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085256978 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070480906 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083540991 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078933252 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077479499 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079160522 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080107215 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079985167 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080676865 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083280889 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070427175 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070702204 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079329207 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070154346 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071920028 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077623023 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072404909 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072114241 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083195248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070267916 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080863882 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069752955 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079409851 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06918984 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071778989 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322931193 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074050476 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075391684 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086362806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07694319 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084542371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086547395 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085149644 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075468205 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075934401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084606901 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084985805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074270372 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074788359 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075714955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084036596 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.082814462 seconds)
  done (took 19.319879281 seconds)
done (took 38.835424834 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218923005 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161451991 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182281233 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125318825 seconds)
  done (took 2.175274199 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123236007 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107307592 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098706707 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070486101 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105078909 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070606514 seconds)
  done (took 1.993676637 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.321338769 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218845823 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.196190307 seconds)
  done (took 2.151707797 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.217755942 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202565023 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463467173 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284389946 seconds)
  done (took 2.702114722 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150767027 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.094468362 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072022415 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089931377 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139010219 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165624712 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105344081 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131233431 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083478653 seconds)
  done (took 2.503847074 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154945302 seconds)
done (took 13.105927829 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.109008145 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082210602 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086933929 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.135713429 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171514621 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.085012283 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.22817174 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.087168622 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.186125615 seconds)
    (10/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070823692 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08351372 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07487936 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079148357 seconds)
    (14/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.184616614 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.242320343 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.198482612 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.183099585 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.23918548 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.162936154 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.174245455 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.185601818 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.171776859 seconds)
    (23/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072387771 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.226362313 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.078907862 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.117840397 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.077181572 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140548175 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094940748 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08202223 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087909974 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204711004 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080116342 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079542382 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077594395 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210191543 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163847531 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078318727 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.081440277 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079816665 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10679359 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150531026 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.171418548 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22926674 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.171420585 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.164027973 seconds)
    (47/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117890786 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082986558 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075730421 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195195246 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078964612 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080405568 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09158657 seconds)
    (54/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.199376422 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133960553 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.120927507 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070598661 seconds)
    (58/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097566801 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.197285319 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 0.354343682 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.152349185 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.197695259 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057265627 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.10455892 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.095021173 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074555446 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.108058659 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071667507 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077510439 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.17201827 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.094756783 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077407955 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080693195 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096174071 seconds)
    (75/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.129642591 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.15835877 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.096089653 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079679499 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100985383 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140840275 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096856365 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.225601876 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057266004 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.147877186 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.10027592 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191808519 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.157720041 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072030046 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125103291 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.099870782 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055126778 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172230668 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055394683 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073472419 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.071403122 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173957572 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.214846525 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.183083038 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055882769 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202321022 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.081788008 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086108505 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192066633 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.055847956 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.157289163 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.147632178 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095548275 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07455218 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116863123 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069846407 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055840056 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05461231 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056351631 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071336765 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.151744346 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.055946391 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077801361 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056080088 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16035121 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121378251 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086394759 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054508946 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096530963 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092864019 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095133474 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187878354 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091276042 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078308251 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080895239 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05540606 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.10776518 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092233776 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067537956 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.078963457 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152551847 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055582489 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069650602 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054616617 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091737077 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056756951 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.144756786 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07801875 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054372178 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071141486 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077305333 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.164280765 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069204321 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073847353 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106447974 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077637498 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077095163 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184609787 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07668885 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.078167039 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 0.151216434 seconds)
    (156/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056194673 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069750731 seconds)
    (158/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066438783 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102035019 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066725682 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.082246924 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.054514761 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069714817 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.076918243 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077742793 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.112095882 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.147661389 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.16280569 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07506104 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055685825 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054668168 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077920985 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085614192 seconds)
    (174/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.109523017 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054990185 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079702717 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093817845 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115874808 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054159747 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069000801 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201774961 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 0.138516075 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071622056 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.105696906 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066866347 seconds)
    (186/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092772466 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069822417 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076141937 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070073021 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09826526 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053659339 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211523804 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.056647312 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078995395 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093633842 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078018225 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085761514 seconds)
    (198/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057933887 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.080479815 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.103100342 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054914724 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.078922622 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.166312083 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054100295 seconds)
    (205/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055028505 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055665264 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067644933 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.16458929 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.081665276 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069724151 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058456657 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068919729 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054390338 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07091537 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055298423 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.056264281 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069040634 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095416707 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055095211 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079205672 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067321958 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076408958 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149684664 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055847721 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080510497 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078029961 seconds)
    (227/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085631765 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056269589 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069611717 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.067465507 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054986146 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.17023048 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076692562 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07607104 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067715418 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091852528 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070113557 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068925107 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070118372 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070065147 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068129643 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069201248 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077442219 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094411035 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147673515 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.098675337 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.056630322 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065981002 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06970616 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070970965 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054530859 seconds)
    (252/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067352239 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079370798 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095835478 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086119593 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091908273 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069001842 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07050086 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054526822 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095123873 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069310087 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072637484 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078504361 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076734 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.071783091 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081051196 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078611808 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069587105 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054105269 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076773696 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077854672 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076805277 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.069110685 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078231442 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.139999171 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145560283 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.180708889 seconds)
    (278/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07036464 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067954546 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.146285243 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07048828 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077591628 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187854054 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069771122 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068248814 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06776544 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053893562 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070544579 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.05410783 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114052571 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076729074 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054273786 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191136316 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108553685 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055883476 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069877703 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077443662 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076074945 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07491728 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.071702533 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054547322 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069431739 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078130735 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082423275 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074976088 seconds)
    (306/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055125118 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08249071 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071171552 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069275935 seconds)
  done (took 32.710735523 seconds)
done (took 34.14030331 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089014748 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097681576 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079637249 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098686507 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085201632 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081472225 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077985509 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082970335 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084190723 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08694253 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082258031 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058831817 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079520669 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079337397 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07998767 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095974294 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083682546 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077717562 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078163624 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068683923 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077586515 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07044118 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07167252 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057925953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.083306732 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075965041 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076326969 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078663343 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069745176 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069801769 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074149241 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077702679 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070013267 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082768858 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076421525 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077414149 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079590301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081030095 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071275909 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.070002238 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079159499 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069320005 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076812467 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078540338 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076160655 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076098343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077370288 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081882204 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095431224 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071630156 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078933518 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080561676 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080188979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076744385 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073307769 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077364402 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074682013 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095832483 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077775534 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071353577 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07868309 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078946674 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075478767 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076667497 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076874556 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079804197 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080331112 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075388936 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079064554 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076651618 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069230099 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077520357 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07292799 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069305344 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080470987 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081922613 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068152851 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076211283 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077422734 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075200784 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068908939 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071265873 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072956774 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076837001 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071398323 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05784361 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074096683 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076515782 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06842515 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078004829 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076499638 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077044474 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071411593 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079936413 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068604267 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074960879 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070269722 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069553049 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070735271 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074073701 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.0692377 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071423576 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079389219 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070988364 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076172323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082980974 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069768688 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076277221 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068533488 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068525063 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082927735 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07903863 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069575992 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071682004 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068370095 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076856253 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068539799 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069180744 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069428388 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069261649 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075816768 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068958265 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071193842 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076609347 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082493822 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068651796 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073214321 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070941485 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069582184 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075262306 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.204900811 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071353124 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071853542 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066285665 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072853152 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070057035 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.077800283 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072583551 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077511635 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071629871 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07928657 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075543936 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075653386 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074925715 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068428458 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062969888 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072066362 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072061922 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070898092 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069340302 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071143683 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06943503 seconds)
done (took 13.148088506 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070185401 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145294605 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101199609 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100465395 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089955882 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070671949 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080330203 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104503734 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07170324 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105474651 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092527486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090345066 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119312346 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069315406 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070061575 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073627486 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071997402 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085534933 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.104296801 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091637963 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120734135 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069350146 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097716835 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093952278 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092882764 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.107991226 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070732115 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073824357 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073989357 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.097181048 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093305141 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074600445 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07037207 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102828494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098879854 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088192568 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070120843 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087368993 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070302706 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069648307 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.0714792 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103573688 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08426788 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084929927 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073779578 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080882322 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071327016 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088553192 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094302939 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083612301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.090866683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105819729 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072807323 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088908481 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069236596 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090362204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081929181 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072560941 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070283733 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079011383 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070059263 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074362495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085047717 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084367418 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074653403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.090480597 seconds)
  done (took 7.161413911 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088181431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097608353 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089320617 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088530131 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070078483 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070746547 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070860159 seconds)
  done (took 2.101817859 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071336109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092456288 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094365776 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094650242 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085719061 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092764446 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080355583 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070349345 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092875756 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071952964 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09253883 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105438849 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074431167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077691504 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095223013 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070435093 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095559725 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070725374 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073450016 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095015933 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073204788 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101039469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074138667 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07110794 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085721625 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070680075 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119592974 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075441819 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072424438 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074195035 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068150435 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112328984 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084688002 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078038513 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070741192 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085678265 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086059412 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069075644 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087416466 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079570202 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084838408 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071131574 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071438976 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068404728 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074923386 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081248101 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072435767 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072097801 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07339173 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092072782 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071648743 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0845026 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073958294 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076889713 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072767335 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077283287 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081982905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071927702 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.09197705 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072646122 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088388408 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08770285 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085597686 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087117447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073433481 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085204093 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085600513 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073258377 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072675596 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074068568 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087498551 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069014279 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07277769 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081730014 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072315172 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09494347 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094373589 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072476922 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084633473 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073295415 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070913588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070567277 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094572869 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076369643 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070533927 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074928794 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074164129 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069740348 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069689403 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074693104 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06850952 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072384105 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073496466 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073884654 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073924121 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087800594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073935998 seconds)
  done (took 9.275292147 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073928452 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070944761 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073508232 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071362183 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07217394 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071868999 seconds)
  done (took 1.974554322 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097989208 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07289967 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083893509 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076981609 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109650784 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090894631 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091504385 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081543745 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088428821 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082624283 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090702522 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092627809 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096666425 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076616621 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.092048995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075215575 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.092073211 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07903124 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08224861 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076362216 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090892932 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076257356 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076913049 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085826052 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079866065 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075681371 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082100536 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082918227 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082424248 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08296981 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076283447 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080253998 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074469073 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081820307 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091585658 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074276575 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075447641 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081193383 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076192689 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080087932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092122188 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076831786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077836898 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081873925 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081788466 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074401971 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081041347 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083453883 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090901772 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080877677 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081234246 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074950769 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079264006 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081826941 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074409522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082547118 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081023375 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092020401 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075715879 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075454232 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073154791 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07974342 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081205199 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083173829 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084270302 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081345963 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075178004 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076230473 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07669015 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075204938 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08117807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072292479 seconds)
  done (took 7.416893697 seconds)
done (took 29.44235344 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546113816 seconds)
  done (took 2.058166728 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.641929047 seconds)
  done (took 2.17690969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.536266115 seconds)
  done (took 8.067475039 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404487131 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.512669411 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.756226596 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139001437 seconds)
  done (took 3.383020354 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.735186193 seconds)
  done (took 2.275240729 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234306614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221594197 seconds)
  done (took 2.005419316 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387336393 seconds)
  done (took 1.916207686 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.16592668 seconds)
  done (took 2.697333414 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267412134 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184622337 seconds)
  done (took 1.990998098 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.50300498 seconds)
  done (took 2.042441869 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.923460309 seconds)
  done (took 6.462596463 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223627747 seconds)
  done (took 1.803461488 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244795263 seconds)
  done (took 1.78294428 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.915678646 seconds)
  done (took 3.450743952 seconds)
done (took 43.65420456 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087284418 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089357563 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089012878 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086086517 seconds)
  done (took 1.87496994 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081027259 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076714604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080239634 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076262311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080216338 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077173857 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07837242 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078998662 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078149597 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076487526 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076209368 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076787912 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07871792 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078445266 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074818938 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079170738 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.08029331 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076247791 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079280612 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076357632 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074061562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078780011 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0790295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075735535 seconds)
  done (took 3.405813755 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082114138 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077608517 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.079001393 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075902493 seconds)
  done (took 1.85829089 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081499159 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09587422 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092539753 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082969046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096789898 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090896234 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072543049 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07267295 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074034113 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081322635 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071634566 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099773962 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092160288 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082126903 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083988046 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069246801 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071624756 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091509019 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082318323 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083232872 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073562854 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081852137 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072092294 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092413157 seconds)
  done (took 3.529730153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089552905 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109583512 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084969723 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093509588 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096296815 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069107769 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091581637 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095046526 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131488634 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068733896 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074469606 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068976973 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076769857 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069694736 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084529606 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112564393 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115922007 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072217985 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101280233 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068978017 seconds)
  done (took 3.324585301 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076631432 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073761503 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07140344 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068673721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080465905 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075817247 seconds)
  done (took 1.997179374 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071967621 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071327877 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071859056 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070981733 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076048303 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071329611 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069679 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071673855 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071292031 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070593305 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.07080709 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069337048 seconds)
  done (took 2.401245587 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206052401 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071416244 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073442424 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070085655 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074408077 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069724971 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085386914 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071835732 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095949848 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070346129 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070614714 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071901688 seconds)
  done (took 2.577821633 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213836257 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080118757 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243689778 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156033151 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114780731 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119663498 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117398833 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118165202 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147018389 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104827353 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171759 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172405984 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111494229 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140984398 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092964737 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102531898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158557406 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169117716 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11026102 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171680678 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150114671 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13011244 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152184818 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106889865 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110467675 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125766777 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075263076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084020032 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175549424 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137000412 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148695677 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116119065 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095973284 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181140794 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176367657 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145487547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153372488 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088636247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106449515 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138217402 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205533237 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093672612 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167350851 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252106747 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085618932 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138418531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124164153 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122923699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108858221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093188592 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149590157 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189611718 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142694816 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092753364 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128642763 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117998654 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118674402 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118000582 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186697684 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167027358 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131079457 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07459507 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11350838 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156309424 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136599508 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112978697 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129488604 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094472777 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139698513 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157826355 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127446536 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147848322 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.1216734 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092233948 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121827103 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144025432 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131485745 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165061664 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128125564 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07607107 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126937981 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105200289 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084170389 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15227652 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079894745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179245494 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10255414 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111528132 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129661435 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112577364 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113054995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163653881 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148253508 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106790743 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.211083148 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109839588 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125078401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149010794 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091066953 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112045095 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119425302 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.0814894 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14095197 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078806755 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12699812 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078550652 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128900634 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133613078 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081569436 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125668213 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109077998 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104549236 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136803308 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163286801 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092009615 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086150785 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17215303 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126936973 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107231501 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147830436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160385086 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102012816 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104949291 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155125931 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183064041 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092538405 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165934591 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1103326 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086896896 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091393216 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127055948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115285013 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127893081 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084978272 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121288153 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171749312 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078208803 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099265769 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138252629 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082682727 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08451939 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109334627 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108362001 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099936615 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103986331 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106090875 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140944747 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127000712 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108575798 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127926214 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246106895 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176524694 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091805086 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105791698 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108089639 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074111926 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139199781 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160216205 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082564449 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166479445 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126756783 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12161943 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121821789 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086330392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144499482 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08257278 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.07480226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149360969 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114029214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11535777 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154984041 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120685398 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129375797 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125704655 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137162475 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135240739 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133229986 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11037858 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09158895 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114720184 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130459277 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076919501 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09379086 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084314997 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108620597 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09960645 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087523897 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14586803 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127580744 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113618196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115389266 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099935531 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15037296 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080097275 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132391812 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122708992 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099928256 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155553937 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155351322 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135679019 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102464884 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140956248 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074228199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07735366 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091769763 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125247161 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229798048 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087020398 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120189086 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150910732 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132660147 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139467336 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128412011 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125416281 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159089366 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074850512 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.125353029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150866446 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125762415 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108199891 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094753309 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102881696 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14643727 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111204864 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187366487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116485415 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126466818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156386737 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104918283 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084124775 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106316562 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138706041 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10782725 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146529733 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102257775 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09180757 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111812627 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078142696 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102043601 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130390817 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12198018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137533115 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118511713 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136241061 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081363145 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119570777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124910683 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126430588 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06739829 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12337438 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16338494 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098215465 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121621281 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157725452 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082548753 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139369855 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177535102 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.293743902 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090473014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113939847 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124175794 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132320047 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123003942 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144721108 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11110739 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140072517 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114779732 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088681821 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09180334 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101176169 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109763251 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099167046 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109352536 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117252469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09934502 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135375594 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106831154 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113741763 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119147013 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.102485203 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095570191 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101325327 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179566465 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122718873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174942838 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103584937 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146729074 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167288193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077973696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082216306 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081064978 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143394001 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087860821 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134170574 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111122144 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121652355 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126882858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146023772 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098708738 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071944763 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113997416 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136663738 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12884609 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102513506 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107653288 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166350318 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102975767 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08249014 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117511484 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119799577 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107342486 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175043217 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065056037 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108960872 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079853043 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.228185602 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131941954 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157233558 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084977888 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107686655 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12204815 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117033034 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13164683 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105512244 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113085761 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131774764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155965595 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131818081 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093018939 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115053761 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130990716 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158905239 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109447416 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099646315 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176504781 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156402051 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162251058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090612533 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116141853 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115836472 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111368466 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14067121 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087468183 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166725303 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085530261 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14017159 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107397034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092244263 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132691254 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112061698 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091845896 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150610247 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121122152 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087260638 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081413509 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122740981 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123287811 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109691749 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079478625 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145937097 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076784534 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135086365 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164448732 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084117639 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108785388 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098975334 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082426288 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254870198 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107424564 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092436341 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102532504 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176386605 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090812135 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152696399 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138284988 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116320833 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138609133 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107285229 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643528007 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081484976 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155145763 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120291487 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180171924 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104554527 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120154094 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112142677 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125709396 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150964194 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107597723 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188848973 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136460238 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.119856861 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08311345 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106714173 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107612811 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091498112 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111065703 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115886075 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118349828 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096443678 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11951686 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127747272 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085139318 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099583267 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158737805 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121052736 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148156914 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144752669 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089633538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121161264 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140622267 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083281569 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123843006 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157321804 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109055438 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104003449 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084173235 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104505976 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308836059 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077381769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164866031 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123545385 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114297765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115361558 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116055729 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135037341 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111513319 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124849511 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09543796 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112812498 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117061825 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085138626 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081236844 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111632158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114643784 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101152707 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102182615 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100969026 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153421229 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075030115 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102109103 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119031431 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147797572 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179211256 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091918714 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086545685 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121731453 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117753662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116483523 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1247424 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082184666 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085032364 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083010724 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.081710449 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11235541 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116188721 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119047715 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113649411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166390835 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086487627 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.240388568 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099015851 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108308285 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073288071 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081392775 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099750995 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102066559 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111486821 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114029253 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164406504 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099162315 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093106174 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094779339 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077920724 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08647793 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130862969 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112049953 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267307825 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10533975 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066193243 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112584621 seconds)
  done (took 60.905060964 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111980849 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086471975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099225632 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147143606 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125840129 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206011941 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156899643 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193400363 seconds)
  done (took 2.777161943 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0717245 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098576951 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106376119 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087192823 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06991064 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072824061 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.23468639 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085159993 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070033829 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100600845 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082859355 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072590195 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438561176 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069479788 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071029106 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.065263983 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071215366 seconds)
  done (took 3.51039552 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407024884 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62301012 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361432802 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.080405061 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.890897487 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095841551 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.123805064 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138201654 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081322235 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524214046 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410184428 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131761998 seconds)
  done (took 18.519164194 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084323577 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077745765 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.092775102 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091524704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08108315 seconds)
  done (took 2.075902611 seconds)
done (took 110.331501333 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085235714 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.616978366 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056070562 seconds)
  done (took 2.351427428 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086390623 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089470421 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088730495 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086826652 seconds)
  done (took 2.007646943 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077429413 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078940703 seconds)
  done (took 1.806645455 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238143522 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17020997 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099772476 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086674465 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08225785 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082217829 seconds)
  done (took 1.910546672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075253932 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07902556 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0759301 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079633525 seconds)
  done (took 1.964396476 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079868661 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05501959 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057414587 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060610232 seconds)
  done (took 1.907778836 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090055081 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08327784 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082117689 seconds)
  done (took 1.912509824 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105082453 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090548618 seconds)
  done (took 1.851374967 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085783188 seconds)
  done (took 1.742871731 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098004228 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104447029 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13607967 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113903234 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.143310975 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113395711 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088090448 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089525753 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080110157 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089803171 seconds)
  done (took 2.712285567 seconds)
done (took 22.410083525 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082999672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370004089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362960936 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093953398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673238778 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359084154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97374814 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096911733 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118840104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071111012 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088610431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654164794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96391308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323932894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952569566 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326619378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651842791 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072177911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071166496 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070724117 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958905103 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071306051 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070835108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07220158 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652112975 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375944721 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071353285 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326650745 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071327697 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073994816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358504946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071406035 seconds)
  done (took 16.193784545 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074237779 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123598548 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076007531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088825357 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073756626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073110524 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074369011 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087201332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12461092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070966941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088391592 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071975923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07470739 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071535945 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090621814 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070742353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071868283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072770325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072029549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071452439 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090462659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070470107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071517088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071900061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071359448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083854146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071858071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071763702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071756643 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073576564 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074656141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072126683 seconds)
  done (took 4.183455461 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118485242 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128063243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077159244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107117844 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114339661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073227088 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147043319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097491583 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130616224 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071053869 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088525216 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071472412 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106899409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072020084 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091681881 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071865706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07236129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071708697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071691146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071645907 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091482786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071031772 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071900449 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072178802 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07192865 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085690694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071468028 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071956057 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07157609 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073862982 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074671857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072057882 seconds)
  done (took 4.422504765 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076215783 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07947515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086382172 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087552235 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072489018 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075169924 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077116153 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073033205 seconds)
  done (took 2.296508223 seconds)
done (took 28.756035118 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082374193 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072623799 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076412488 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084975596 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077084689 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082161313 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069748041 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078780768 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07559949 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076149608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078246539 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071673074 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074470086 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069965948 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076895729 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070848796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082890447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075480504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083213789 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082427673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073420885 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076800067 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078703649 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082637121 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082459225 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08267948 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080745733 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076431154 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072442482 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074358013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08081396 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088180292 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072848921 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082833474 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070981521 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07084293 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075853901 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071121546 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08230759 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079686313 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07268243 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079310498 seconds)
  done (took 4.897995046 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090930641 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096672167 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088655696 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064930885 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069407171 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069588149 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092945529 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063042726 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062514779 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.0918806 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059399137 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062387043 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06684958 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056371688 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063615563 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059639082 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065059631 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05824684 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06353198 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062696075 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093095099 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056492276 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081519039 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066689583 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059289205 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065080281 seconds)
  done (took 3.506828459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078639508 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088843169 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.105460469 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134613248 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.109779962 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082500554 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083341314 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.100100148 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092592299 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070332443 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07428685 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096690906 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093093232 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.077249883 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071189399 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089548325 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08817209 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072110614 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076831995 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098198146 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091137662 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089276851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099292506 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087429053 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07074826 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07331121 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074823428 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085747129 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074600956 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080901386 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074183025 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075149774 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073180659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082561114 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073942821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.071987885 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099215295 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081203089 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082656552 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07222648 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078925357 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072023272 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096363815 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130590854 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070430846 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077518326 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0746392 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081036776 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070098702 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091427916 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082931928 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070884566 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07449903 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069993039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070562529 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074054196 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072394713 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07362056 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080137062 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07676165 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095686954 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075424198 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087549361 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070361419 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078767453 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069663088 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07221701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070104897 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099604885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072718402 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114208093 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071648138 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071333158 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079794869 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078594398 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077081817 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072000393 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087654857 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081979652 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074332334 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079492838 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074337586 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073555295 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095055287 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073295332 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.07284107 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071416722 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076778348 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073824027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072706153 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084589531 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070647685 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.074423889 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088527293 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071171954 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072236664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077170425 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075926931 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070662561 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082059308 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075020491 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071652336 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081185023 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071229392 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074268319 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08467494 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077576566 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070296258 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074872435 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076297952 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071566433 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072752188 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073596033 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072964971 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079630663 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077783512 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075790598 seconds)
  done (took 11.078794431 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169818735 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162670945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073683762 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153487372 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08053962 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082832574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155981262 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099099068 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071185183 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071734518 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072425313 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114741178 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11115064 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120180089 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082609286 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071023917 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088082807 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119698512 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.158012145 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151926587 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088401004 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08116142 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073925156 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072678902 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.0739353 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083252306 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089589956 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08266017 seconds)
  done (took 4.563052157 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083331989 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109397415 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078459958 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095297089 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094544578 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071050471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073734479 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074134384 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085507826 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081944136 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071190788 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077015465 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078049409 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075483621 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071843016 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07917128 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078143674 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072193381 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074758365 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076539916 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.081917863 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096477121 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075546088 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.07080023 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076371931 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070827136 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066870552 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088534302 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072685649 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.099307406 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069232258 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076540288 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086184184 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072939822 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071393253 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071096943 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070670162 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070996125 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073348444 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070281524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070603336 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06053723 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070931439 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082855675 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078967636 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059455335 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075819746 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076730719 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076541399 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068300171 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075107663 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074297844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074994027 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079019962 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075324618 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076027347 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072384565 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077623005 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080207366 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070438534 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068915054 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069590412 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075719019 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068450866 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080481325 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075747766 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069803511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071803326 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073570742 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077716535 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071457956 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075925519 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068871141 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073253658 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076483687 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07276678 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071929482 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069523484 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071376333 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071402073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058407687 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071178067 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056207265 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07409927 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069081805 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069894976 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07072249 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07585857 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083129271 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072981133 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078321855 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072000011 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070796037 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074314221 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063376624 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073928658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082311175 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086103006 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071698493 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069057845 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084816601 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076175012 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070487317 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058810154 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075848818 seconds)
  done (took 9.573233506 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094125512 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073122559 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088149021 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094154483 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090586949 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078593794 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081075202 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072298492 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087211051 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077704444 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080782448 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071747911 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081997038 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081441043 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074469847 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081957177 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075417399 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088371964 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087227276 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071923418 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080291912 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084077819 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094604631 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085519069 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084443885 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085429404 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094589409 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081814582 seconds)
  done (took 4.033277705 seconds)
done (took 39.317148949 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.746238582 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.013853113 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758723829 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120852682 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.835513667 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.970673099 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.836853154 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.751752286 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.917249305 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.786878438 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.041001894 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.965686546 seconds)
done (took 65.428631352 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.793741538 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.893053812 seconds)
    (2/2) benchmarking "String"...
    done (took 1.982924964 seconds)
  done (took 5.5624701 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.059491085 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.32649759 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.998312957 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751184731 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.757653005 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.069120182 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.553640068 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.260331864 seconds)
  done (took 30.406102776 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.919782794 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.968929923 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469224933 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.491011159 seconds)
  done (took 15.593299641 seconds)
done (took 63.188841439 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.768694895 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.807567209 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.762573407 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734776172 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.810727644 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757782925 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.958412365 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.755286183 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.751088253 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.742658636 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752237823 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.220857752 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.759352543 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.989905805 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.750710218 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756698746 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.798324785 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.282026001 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.908110377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.757892032 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.770468124 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.763927534 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.751899606 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.764253194 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.756276798 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.7501916 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.131002395 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.761480282 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.369101577 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.756377859 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.779768823 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.150156737 seconds)
  done (took 203.018633847 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.750426713 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.704896377 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.748650552 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.793401888 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.124119413 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.964110424 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.865802601 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.167028222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.755725469 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76135474 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.977057218 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.751981847 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.984273263 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.698230823 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.780640415 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.82576631 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.926569127 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.964388653 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.783699675 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.909380662 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.757002387 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.815383821 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.750095719 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.924964913 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.766538089 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.833134907 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.898461537 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.769457689 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.953977443 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.908166041 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.788375621 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759749663 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.978968747 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62919148 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771065016 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774964194 seconds)
  done (took 169.006391936 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.920919572 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.755787779 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.755756914 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.755605557 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.754618814 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.768740296 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.755151558 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.755385242 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876633843 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883941895 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.361351626 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.313935144 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.809714519 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534322549 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756570907 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.822710594 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.76759689 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.759349648 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.770503449 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.783626448 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758891229 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.755519582 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880444198 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.769207728 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.832206064 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764472766 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.75614741 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761092369 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.126850735 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756573154 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762124347 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.009128377 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.757874988 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.755084239 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593114738 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.785353088 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.837247773 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.756457785 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.759587844 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762629773 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.756927075 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.972951183 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.757611661 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.757453196 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.759234454 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.886923865 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.759859839 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876951256 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.760531529 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23419485 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756953027 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756321302 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.526135657 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.317499416 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.761692782 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.757870666 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.760339274 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.757594117 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.757636359 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.763577728 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.507769168 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.831203653 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.758772322 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.760724667 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.764501843 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.759034663 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.757602203 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.94794998 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.757755958 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.443406561 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.821516907 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.884346151 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878804647 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.761314739 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825179662 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.852845958 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.75853767 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.758118835 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.757979945 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.758368303 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.841333205 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.758866102 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.884437594 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76668176 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.759457118 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.810313579 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.82755352 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.759552652 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587200282 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.762990265 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.758474306 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027368317 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82860827 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.760676309 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758533298 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759815938 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.895786992 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885192903 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.472012358 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.763008042 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.408506195 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764163553 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.904872697 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.761357803 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887749856 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.761858112 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841559946 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766097864 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763850086 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.760517667 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.793306121 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.762413758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815549721 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.764482476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.136423157 seconds)
  done (took 400.732438381 seconds)
done (took 776.421869331 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.429232986 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.395150797 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49751244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.416488645 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.394870804 seconds)
  done (took 13.831525821 seconds)
done (took 15.528382772 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.84914065 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857547652 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.785129525 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.852177528 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.782822973 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852690233 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834906593 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.786671449 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82124858 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.786009395 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823717035 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.787691383 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.773796898 seconds)
  done (took 25.292375774 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.005997833 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.012140405 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833493218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.013063865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.809667188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004262485 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929916533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.92148518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.919559596 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.779241838 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775919262 seconds)
  done (took 22.703642505 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.007079344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02139483 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.840366984 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.005537344 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.813392708 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.013539261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933398421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.924005593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.925204386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780519213 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777535649 seconds)
  done (took 22.741617294 seconds)
done (took 72.436091834 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.771122006 seconds)
  done (took 3.47071622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.798175618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.967799481 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.778071415 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.775675901 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.770203278 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.773769053 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.776769755 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.770915601 seconds)
  done (took 16.112416935 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.768251718 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.767890018 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.768215675 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.768398831 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.771106203 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.768660183 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.771584448 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.770274651 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.771799724 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.771069926 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.768989324 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.769384226 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.771681604 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.768653215 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.771422646 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77368194 seconds)
  done (took 30.021922739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771240021 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.768712785 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.769176536 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.770184962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.768923543 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.770072626 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.77185494 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.769088446 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.76925584 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.77077305 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.771053814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770159609 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.769388037 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.770556074 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770726125 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.771465081 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.770952143 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.770647694 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.774622782 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.768833208 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.772143357 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.770017785 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.770329012 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.771800646 seconds)
  done (took 44.195358412 seconds)
done (took 95.500416732 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.591178601 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.444395302 seconds)
  done (took 9.737197886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.776069277 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.772839694 seconds)
  done (took 5.308149418 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.773251785 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.772714664 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.773976449 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.773656543 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.773892752 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.773254442 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.773075065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.772764958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.774047061 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.774994968 seconds)
  done (took 19.437591884 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.773222706 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.773269232 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.770699593 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.775706637 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.77382232 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.771546225 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.774116228 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773697352 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.774427995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772637234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.774635264 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.771858362 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.774969722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.771526023 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.774164597 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.772689633 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.772327539 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.772175037 seconds)
  done (took 33.620361411 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.774956651 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.774575595 seconds)
  done (took 5.252630253 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.773198996 seconds)
    (2/7) benchmarking "second"...
    done (took 1.772492707 seconds)
    (3/7) benchmarking "month"...
    done (took 1.77204694 seconds)
    (4/7) benchmarking "year"...
    done (took 1.773241554 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.773180393 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.773780734 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.773259463 seconds)
  done (took 14.114733201 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.776743769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.934372573 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013738988 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.41521087 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.777143692 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.779048118 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.724879195 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.778905625 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.781402294 seconds)
  done (took 19.685076457 seconds)
done (took 108.857928317 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.570825872 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.769214205 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.004709525 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874125679 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.786727495 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.109884258 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.76626604 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.075826332 seconds)
done (took 42.66219003 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.803524643 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.99594677 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.079938414 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.795425394 seconds)
  done (took 16.576128578 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.754935418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296699434 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.80736002 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359513075 seconds)
  done (took 19.953583077 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.140826348 seconds)
    (2/2) benchmarking "read"...
    done (took 2.122353805 seconds)
  done (took 5.97226022 seconds)
done (took 51.011547966 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77730961 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.777140495 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.775669833 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777533333 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.773244304 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.774740563 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775793104 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.776963075 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.777874167 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.77722906 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.778258488 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.778078939 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.776969848 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.775038496 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774233627 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775442458 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.777985335 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778503349 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776453511 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776188222 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775806018 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778808859 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.774883556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.775283274 seconds)
  done (took 44.340847918 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.77778123 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.7759843 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.778397015 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.778457524 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.775584864 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.778709311 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.779123827 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.776773722 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.778288598 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.778096579 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776036969 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.776887386 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.779092769 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.776452617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77909942 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.77693958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.778803846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77719034 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77954607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.776942193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.779420853 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776491052 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.778528846 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779037967 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.777650036 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776685537 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.779603323 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778035493 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779853822 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.777098841 seconds)
  done (took 55.044080033 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785295732 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.787245446 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.780278771 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.780338669 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.780363244 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.781207599 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781095744 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.78077798 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.78053628 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.780385374 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.781412861 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.780050244 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.780211407 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.78141215 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.781073106 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.780226147 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.780717586 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.780800611 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.781342001 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.781688447 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.781038446 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780986279 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.780745803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.780825328 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.781312687 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.781203318 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.780890786 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.782157192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.781806202 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781636206 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.780793104 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.781413417 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.782263726 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.782513639 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.782283679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.782031303 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.785958998 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.789061873 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.781019324 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78197863 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.781445732 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.783028734 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.781732403 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.782823803 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.783246539 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.781813265 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.783059327 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.782150837 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.782787359 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.782745865 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.782916566 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.783272818 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.783432375 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.783027426 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.78347899 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.782954137 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.78321026 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.783491136 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.783110464 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.782396616 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.783678984 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.78393389 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.783277177 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.783822541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783709976 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.783518163 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.783183374 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.78467058 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.783187874 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78289608 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.783210004 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.783148551 seconds)
  done (took 130.037606525 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.783091158 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.781129723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.780206489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780516021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.78046965 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.783614203 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.780598282 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782769401 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780651262 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.783343974 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784084677 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.781480198 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780430589 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.783803898 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.783577584 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.780939006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784371989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.780492749 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.784000222 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.784272086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.783572911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.782277873 seconds)
  done (took 40.921932635 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7844469 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.785038715 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.780859409 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.784942979 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.782559418 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784156111 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783905753 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784240139 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785249603 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781334329 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782597023 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785009628 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782173523 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783256086 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781966017 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783531449 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785662599 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.782283147 seconds)
  done (took 33.816919628 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.782749149 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.783808187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.784704452 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782949525 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.783102476 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786297419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783269421 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784110117 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.786412487 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.782762134 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.786526737 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785920009 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.786877239 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.7829807 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78680193 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783387742 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.786172144 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783613998 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785987053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.783710049 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78332502 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785778461 seconds)
  done (took 40.976013906 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787670589 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.786522221 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784852474 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.7835765 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783518419 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.787320189 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.787240839 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.784589449 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786311964 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.786468672 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784542294 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.786046408 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.7844047 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.785234482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.784577022 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.784608483 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78659053 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784937215 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7877596 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784417851 seconds)
  done (took 37.426526941 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78710351 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787668224 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787549445 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788386607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.78793843 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.787649405 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786962277 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.787841586 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78820862 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.787704582 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.787308894 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.787615931 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787532638 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788026649 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787828456 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789093416 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.789664673 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.789238421 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.788991367 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788653471 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.794433442 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.788355404 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787254143 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788524465 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787887291 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787954996 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788111604 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.788224012 seconds)
  done (took 51.788798415 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788680749 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.789548208 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.785283544 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787007263 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.786255289 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.786272147 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786499493 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.786319442 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.789196111 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.786968687 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.79014459 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.789786611 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789883656 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.789305331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78917054 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.790681505 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78931385 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.787432772 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786656746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78681952 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.789612042 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790293916 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789414354 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786676267 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787574739 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.790457625 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788534598 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787232512 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790170023 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.787829197 seconds)
  done (took 55.367202042 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.808994281 seconds)
    (2/2) benchmarking "in"...
    done (took 1.808878269 seconds)
  done (took 5.336712976 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.787370123 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790563133 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.791009735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.787729715 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.78782155 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.790513752 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.790697323 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788743591 seconds)
  done (took 16.033488171 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789279711 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.791178171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.791522753 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.791670856 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790154754 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.790975245 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79637818 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.791507364 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.791167692 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.792135868 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797247432 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.798891617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793052315 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791210579 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790786885 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79260995 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.793494302 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790259885 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.790477171 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.791891748 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.791328814 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792934314 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792901673 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.789927351 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.792994073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.80307892 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.79490171 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.792726201 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792248385 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.795810825 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791367549 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.790824201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791295896 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791910239 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.793118021 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792432184 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798545376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791617158 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.797195948 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791588866 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793317082 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.790477841 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.794022874 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.795281517 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795279157 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792339917 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792833703 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.791202368 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.793132112 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.797920457 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.798074496 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792741401 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.791584603 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797222019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.793718497 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799825612 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.79564121 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.796611714 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.802674194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.801902666 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.80607872 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.800582353 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794998337 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792898209 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.803632575 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.814756721 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799698501 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.791894369 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.791748958 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793749387 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.801204711 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806399373 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.802286266 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.793880766 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793908573 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794767365 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.793810646 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79515547 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80076019 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.796425184 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.794692473 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795168296 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804673124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814612232 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.794000231 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794134106 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.79499287 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.795186657 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.796103784 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804772006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.795551277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.795764051 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.793445654 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.795499566 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797040697 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.794916495 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.79560916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796443698 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.795500893 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.796819269 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796030807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799854973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.804227389 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.796283651 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.795931823 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.802178843 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.797038078 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797055692 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.801256821 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797448621 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796587448 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.796795443 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.801812661 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.794303432 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799917493 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803982571 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.799091554 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.798111671 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.796615691 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797641379 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806566392 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.820027276 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.798530517 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.797670114 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.802158362 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.807281873 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797581538 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.800289037 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.797966701 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.795271497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.795291433 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.799408256 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.798943376 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.800547252 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79755245 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798152053 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.795073299 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.798380254 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.797423105 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.798884446 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800133557 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.798410723 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.79850929 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801187558 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798950897 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.80020643 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.803444124 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.798312347 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.799937119 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.799284461 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.79703954 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799031756 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.799255122 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.798336727 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.798048905 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799118152 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.798805824 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798057476 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79972203 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.799094623 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.799720699 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.80048269 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.802904165 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.79997189 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.803640362 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.799282007 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.797599072 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800749611 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.800522944 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.799595724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.800624749 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.799496092 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.803554989 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805568603 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.799979072 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798999249 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.802362773 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798338533 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799850095 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799346854 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802530164 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.806872677 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.799766795 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.807324062 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.799698957 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80008869 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.801188133 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.802159954 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.799157144 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801328615 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.804132903 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.807100682 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81274602 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808099705 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.802338349 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.804747151 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.801453401 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.803610108 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.804825934 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.800438728 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.801716473 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801439378 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799989627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801357144 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.802720998 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.800693614 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.800912045 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.802212488 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.80171257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.801704713 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.80229703 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.80240032 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802359422 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.799131283 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.802668934 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802622503 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.800734429 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.80048478 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.80133811 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.801592464 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.804012689 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.801786946 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.80849594 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799224515 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803485342 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802632137 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.803174122 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.801845283 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.803594126 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804082281 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.80260877 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807715363 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.802354939 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.802914473 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.809241276 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.80243245 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.803078128 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.805394563 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.804541947 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.79996323 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.805160647 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.811265843 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.803535817 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803730554 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.804443085 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802377873 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804257462 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.809355819 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.801502228 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.802885024 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.805186316 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.805270808 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.801202998 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.806767655 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.804734351 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803950962 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805891863 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.803638631 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.805056587 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.804915633 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.804605243 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.804297377 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.804250262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807000677 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.812250607 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.807900785 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.804518528 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807762373 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.805779454 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.807633973 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.804296971 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.803639072 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.803677739 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.81770932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.81237672 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810751231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805889149 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.806170146 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.810001736 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.806302522 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.808628207 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805000626 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805555192 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.80527158 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.805001845 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.803069997 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806358806 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.806605728 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805624163 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806606817 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.809024864 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805603428 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.804408573 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.806243422 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.805623036 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.806910983 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.804393404 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.806442808 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.81284235 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807065844 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.8067035 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.806625704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81146907 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806884735 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.80835062 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80564407 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.807060409 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.804993394 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.807912677 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.807305239 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.810705265 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.812876329 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.80975805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.814368568 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.807614333 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816306951 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.806326565 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.811582929 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.813547496 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.805714847 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80820112 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.807556393 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.806916279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813724691 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.807630794 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80854039 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.812339012 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807547093 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.808143602 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.808027361 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.809041917 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811638971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.808725784 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81553681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.808730678 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81049097 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810673008 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.807610805 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.808311097 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.808283487 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.806954883 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81073735 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80838186 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.809379711 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807451628 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.808872962 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808864016 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.808111341 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.809548851 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.806103528 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.81070001 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814755244 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809300864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812345313 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.809559085 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816409816 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809625221 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814747542 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.80835086 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.809029499 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808395133 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.809973249 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.811364498 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809186814 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.810136757 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.809609223 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.810672667 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.814301897 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.809197347 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.811278274 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.810776853 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.809848708 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.808715545 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820340304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.831097145 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.811563997 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.815301008 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.808332388 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812099164 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.814249058 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810614231 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.809962416 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.812676971 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820623973 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.818159666 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810475178 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.810905291 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810930023 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810003867 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.810985766 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.811321326 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.810264387 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.812579623 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.811415908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.811050522 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813919543 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.810996405 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812612344 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814062713 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.813388489 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.821438472 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.810759019 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.812253618 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811390614 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811831778 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.812859139 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.81188726 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811164029 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812887734 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812593718 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.813647217 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819081311 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.817497753 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.814118292 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.81185325 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.812162345 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.812613884 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.813287345 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812879849 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811959817 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812511899 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.81316804 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.812527204 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81348709 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811745586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.813243336 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.812946403 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813779897 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816065457 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.818814457 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813142346 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.811214982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.813677559 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814547667 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.812604648 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.814394597 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821428215 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816297536 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.82338435 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.822105529 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.816635917 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.813963312 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817626316 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821605271 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813886114 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.814434093 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.813571332 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.816193979 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814463804 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.816578966 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815397582 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.820273029 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.813381903 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.815593527 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.821854418 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81541424 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813909574 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.816155323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.818737157 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.814090251 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.81184085 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.814963598 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.814102673 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820776152 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.816868815 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814845955 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817859072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.814448992 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.816779357 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820814029 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815913472 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.816543896 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.813072305 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.815930064 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813845968 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817481517 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.813570302 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.814649539 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.814387783 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.818301289 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.823355523 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.813063728 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816824613 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.815754439 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815484245 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815457176 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818539639 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.813021704 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.812822022 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817212648 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816103514 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817897157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.819341107 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.816311027 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.818588745 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.817485982 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816278855 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820534146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825934851 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825163962 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.814836777 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.816473246 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.819025062 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.820422941 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817174255 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.815952317 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816265583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.817755033 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.817415911 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817035904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.81727207 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.821053901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831848193 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.819091607 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817672152 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.817918033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821080706 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.817791684 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.815668369 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.819208677 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.820054583 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.821217629 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.824146696 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.817708691 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.823382526 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817667041 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.819034009 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.821858916 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.821521208 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.824566624 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.821269334 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818725481 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.818067841 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822977213 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832537507 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.820038225 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82791156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.845689587 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.819159911 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820368443 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818823597 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818647859 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.818362584 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.82198221 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.818775044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.819842359 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.820553158 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.819316655 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820056116 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824762565 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.821028928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.819883551 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.821078245 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.818471148 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.820168505 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.81786403 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.818980282 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.820694312 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.820121485 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.819689113 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.820777091 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820406761 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833047045 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.829781164 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.822011059 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.82159748 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.817995897 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.824201528 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.825356947 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831090743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.828378919 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.820910466 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.820361003 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.822348764 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8197945 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.817980081 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.821609957 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.820305806 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820778671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.819235759 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.833721128 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828414641 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.825752914 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.819990065 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820698201 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.820971939 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821489559 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820997866 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.820396584 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.823265766 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.822771229 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824190361 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.822490487 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.822722411 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824660475 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.829040365 seconds)
  done (took 1079.2841944 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.820101488 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821159487 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820327793 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.819416696 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821108229 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820552182 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820324106 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.820861737 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820202679 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.820838508 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81984021 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820705752 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820247571 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.820809407 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820156368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820920411 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820940112 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.821045269 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.821363408 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819884766 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.820656913 seconds)
  done (took 39.982416106 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.82279564 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.820175939 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821094854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82352741 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.821294799 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.823496282 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.821148921 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82388405 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823574276 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82142058 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824081739 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822815891 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.821051984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.821989311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.821155866 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824172207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82480568 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822068583 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.824212661 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822151705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.824736797 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.823018108 seconds)
  done (took 41.851657172 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.823698966 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.823638551 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.82281963 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.822714921 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.82481332 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.821497816 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.824160176 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.825304499 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.825284831 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.825377012 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.823398438 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.826617726 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.83162229 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.829718718 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.82806416 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.824751866 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.969861403 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.824478833 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.825089182 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.826582099 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.823947282 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.830533101 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.823143845 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.823612087 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.825318452 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.825676366 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.826251275 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.825680753 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.825287197 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.826486825 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829192128 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.826020897 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.825861382 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.826986469 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.826230266 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.828178322 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.830272663 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.826435487 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.823893537 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.8269454 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.836328127 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.84637709 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82622295 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.833164487 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.827245551 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.826592318 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.829724153 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.833057104 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.82370691 seconds)
  done (took 91.411619032 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827169711 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826727228 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.824682258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.827659271 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.826791077 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.827131638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.827873176 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826860036 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.825453536 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.825548611 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.827659334 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.82443501 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82401941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.827100349 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.827419299 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.824360586 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823150838 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824123822 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.824325956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825036385 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.824944644 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.827333713 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.827586886 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.824524165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827425665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.825379278 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82535312 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.827071139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.825068752 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.825185767 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.828051634 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827875992 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.827866844 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.826467476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.824253983 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.82817931 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.828123574 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.825387769 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.827890071 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.825952058 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.828831049 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.828643026 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.828513526 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.828615331 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825074386 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.825255638 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.826422669 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.824871947 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.825847943 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.82801754 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.828671115 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.826542347 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828075415 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.825622579 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.829365339 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.830113855 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.826077174 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.82638944 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.828159911 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.82654007 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.825737651 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828171731 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.826945857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.829007397 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.829075916 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.826726751 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.827340806 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829458685 seconds)
  done (took 125.971889604 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829597229 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.829279134 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828241184 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829771343 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82853869 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.82968951 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.828978125 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.828979287 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829234928 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828536175 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830549158 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.83158133 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.831038286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.830978743 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830721899 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831437311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829765197 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830465694 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830170013 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831790017 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.830463546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831011059 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.830542249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829506907 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.830877016 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830603557 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.830654652 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830461746 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829802629 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831184067 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.830702436 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.830859731 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831333101 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830547726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.831843544 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.830814218 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831132251 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831139992 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.83028629 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830811843 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.830745986 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831769738 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830986686 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.831016768 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831525375 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830841789 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830673213 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.832135877 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.833851487 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.831988822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.83104401 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831725087 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832646588 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83154198 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.831228498 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.8334822 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832475075 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.832411881 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83212201 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833408948 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831828707 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.833472607 seconds)
  done (took 115.274789559 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833614035 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.833521892 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.830659249 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.83004587 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833026782 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830564295 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.833434229 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.834426753 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833048012 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.833970289 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832974656 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83147122 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832466212 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834111236 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830492234 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831462819 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831526334 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.831248731 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833510624 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831108856 seconds)
  done (took 38.406621143 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.830525085 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833827141 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.831497711 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.831838559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.836285343 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.832420489 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.835319636 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833902211 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831217143 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834303554 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834389866 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834195058 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83215903 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832514358 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834398434 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.832613048 seconds)
  done (took 31.092016196 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.832941943 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.834388571 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834369541 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.83321779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.833402834 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.831232894 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.834984555 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.832802021 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832531864 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835775323 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.835782362 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.836891728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.835515566 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.835812411 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.832475561 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.835937312 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.833761635 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833464693 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836417172 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.836331438 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834036725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833743605 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.836422791 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.835741496 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.834364673 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.834685789 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833988757 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.83411917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.834302222 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.837549978 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.832976722 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834309273 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.83326382 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.834156936 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.83533934 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.83571495 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.836731137 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.838183712 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.837319415 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.836227138 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.837758604 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.834163224 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.836378254 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.837782588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.834835721 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.837275467 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.834147324 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.835247854 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.834902408 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834907497 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.837220208 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836888383 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837876846 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837983304 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.836895744 seconds)
  done (took 102.698120655 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838394812 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838240988 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.835413067 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837473367 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.83831442 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.835280615 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838618772 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835145182 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.835304823 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837545938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837400536 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.839084745 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835964349 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839268318 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836906582 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.840161689 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.836336127 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.837372575 seconds)
  done (took 34.836859597 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83552611 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835910099 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.838341777 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.836072338 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.836527989 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838352217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835343441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.839492705 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839275304 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836761108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836647805 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.83907501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838929622 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838867206 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837553907 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836941757 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.840158066 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839337232 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836746237 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83763966 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.839920138 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.839031196 seconds)
  done (took 42.198418393 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.83832743 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.83965678 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.85496256 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.859790721 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.861391722 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.871886367 seconds)
  done (took 12.891721822 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837175644 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840157446 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837203957 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840478808 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840418958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838925276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838959429 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838883386 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840988959 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839071334 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84387936 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843410376 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841536798 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838024576 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841444941 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840685053 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838283259 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839159038 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838763901 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84122743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837726995 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841696709 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839404213 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839068673 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838339121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83848084 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841687599 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839543199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838218079 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842555344 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842141449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839234849 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842820436 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840887307 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842079844 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841844998 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838702072 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841457436 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842495705 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840265319 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84198387 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841715065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842490787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840632206 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842770468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839842592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840179483 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839993093 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839819471 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842348076 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842383587 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839761651 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842028551 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843175152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84340351 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843968864 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839572795 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840339414 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842881423 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842492518 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840653077 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842520013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84030056 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839669633 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843076849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840572573 seconds)
  done (took 123.254114642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840799867 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841731064 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841096328 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841265947 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842075551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841806964 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841753845 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841368855 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841903208 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842663926 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843784466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841028053 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84263669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842246079 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842973832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84186338 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842216657 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841419726 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842037603 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845496266 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842590281 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842598233 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841683226 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841729738 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843280835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845954157 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842343059 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842991223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84266557 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843113488 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842316829 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842224836 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842801662 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842946186 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842773824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842301632 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842214815 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843765883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843797794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844813967 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843275058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846228922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843109725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842666884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843429858 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843852696 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843998899 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843124154 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843847174 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843638231 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843371147 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844656263 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844905923 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843709934 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843604165 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844819761 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843810042 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843616578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845317147 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846783377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843694522 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845014424 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847587962 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844526843 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844726515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844640716 seconds)
  done (took 123.425196845 seconds)
done (took 2515.37677888 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.831830066 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.03144122 seconds)
  done (took 15.635845654 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.011069595 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.965071144 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.849463186 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.858517555 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.848959103 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.870366012 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.862734957 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.848780745 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.849472956 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.850619551 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84876932 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.036349675 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.901468819 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.849404911 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.849326907 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.943619088 seconds)
  done (took 52.025121416 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.852580551 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.853420247 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.864760852 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.85587478 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.852895802 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.870835083 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.888115713 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.85639012 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.915439599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.868094085 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.972800039 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.866017652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.851833517 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.91801937 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.866780046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.868509395 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.946631438 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931301297 seconds)
  done (took 35.678009777 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.933780659 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.86223816 seconds)
  done (took 10.583411415 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.85129689 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.87107987 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.856637254 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.85189001 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.851326798 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.857383641 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.858557157 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.849890736 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.85844117 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.890412504 seconds)
  done (took 70.379121943 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859246981 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.852957748 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854141689 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.851092773 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.846362431 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.848823253 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.851097096 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.852345858 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.53161666 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.891110221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.85917156 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.861523216 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.855634078 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857721496 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.854612449 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879955695 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.949302642 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.854347141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.853394027 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.861629683 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855927789 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.90719076 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870132584 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.860368827 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.8865494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.533200846 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.865594922 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.860573731 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.949359753 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.855124466 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.855442371 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.855860446 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.857717008 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.226377251 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.125545057 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.856543329 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.870571602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.864316031 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853007374 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.948607521 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.857097206 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.864267735 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.482689067 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.111761423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.951108078 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.899824869 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.184503237 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.874842026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.861085361 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885301015 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.860017183 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.857767578 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.871110547 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.339199302 seconds)
  done (took 131.368712225 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.853253626 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.204806734 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023581058 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.854414284 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144963993 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064495841 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.854866663 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90539293 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.853001535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.08615157 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.111105692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96399234 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855729501 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.851841085 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.855281956 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.851624834 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.01297244 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93018762 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.855599895 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.853329224 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885496264 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100424408 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984716291 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.856225658 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.885854073 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069660585 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.982168696 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964256811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.648582256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.85288908 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920804388 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.855624971 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.855241908 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851868977 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012541497 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955193425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.940491351 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.856235834 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.851347319 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852420663 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.525325603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057302956 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.956275311 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.001429351 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055789563 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066730797 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.643108943 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.85110565 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.600259381 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022364505 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.090164369 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.086943213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.982379351 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.85657884 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.187723054 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.853885359 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852395406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109431031 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004737075 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960206187 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857879334 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855912271 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.852771941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105895682 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.858933427 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.955316007 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.859776247 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.854773814 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.957153222 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961716363 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.001728422 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07499109 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.891377493 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.737532435 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.391900495 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109321037 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927512786 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111473236 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.859224959 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.855391293 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938770456 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.704785472 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114824684 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.110471132 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113922914 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.89672884 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.585366798 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.855152806 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.086983555 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.082429367 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.110430648 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.064757064 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.101552878 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.180263564 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.854444124 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.855386171 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.089626963 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.997561234 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.859737768 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.209927988 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095059433 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.423841562 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880596177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171461473 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.993476077 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858025162 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.502481094 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.856254464 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.083787923 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902231138 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.858473423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858346917 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.081964496 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.83500258 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858868689 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.720592809 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.923103459 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.859960492 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096621157 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.862353596 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.123158279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86274142 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100318723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.036243507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.894806895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.037903945 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.064564878 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.861238609 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109864344 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.107454608 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978485228 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13824621 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.769683822 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.86165589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148969156 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860807677 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.857876513 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.031793262 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86184878 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009080983 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.86062951 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.145982095 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88621035 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094732468 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861058653 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.117739928 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.898861713 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915400479 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.861435497 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.9891419 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.860641602 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.696495755 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02051313 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.861621795 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.858898939 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.415730624 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.86075224 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.019208146 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.095073111 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885274441 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936242363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.542082869 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857981828 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.950500527 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.888341569 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.255365979 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.859329038 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.115143782 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.862308696 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.858904492 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.858480856 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.103447396 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103947957 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.863007078 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.859184293 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.757604051 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.860776071 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.859596579 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.046784618 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.228837576 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.860332561 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.067817704 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.863082055 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.9945443 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.864931234 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943865065 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.198057092 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.860536631 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.858424547 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.859807835 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.861483049 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862183345 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075835097 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8912233 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.400948926 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.003283393 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.137143929 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.177062237 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.113892063 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.911484855 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866842374 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12069982 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864573521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.927889074 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.863044516 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.887387629 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098836342 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.864758227 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.130133719 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.146118906 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.900525081 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.912777602 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.865155587 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864366808 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.860813518 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013536161 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958700269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865702441 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.862881924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.981597567 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990703932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.079364314 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.865180809 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.940479123 seconds)
  done (took 901.473027234 seconds)
done (took 1218.916159204 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.863254925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.864721253 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.849140276 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.859411613 seconds)
  done (took 29.232176075 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.865265784 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.86256353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.863887012 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.862652823 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.864086954 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.86198655 seconds)
  done (took 12.969893222 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.951539036 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.857940443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.860612694 seconds)
  done (took 21.458583369 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.932435162 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.253396113 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.973891726 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.291510406 seconds)
  done (took 10.239679747 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.866047706 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.864815208 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.863840216 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.865254024 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.867021098 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86797715 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.864717803 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.865900859 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.867718661 seconds)
  done (took 18.584243201 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.300607785 seconds)
done (took 98.580796493 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.011761747 seconds)
    (2/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.947322143 seconds)
    (3/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.857530954 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.188128908 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.939378469 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.948952112 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200133136 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.995978689 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.942317071 seconds)
    (10/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.972749403 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.900331763 seconds)
    (12/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.922361766 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.885203463 seconds)
    (14/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.966653979 seconds)
    (15/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.342172441 seconds)
    (16/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.201723342 seconds)
    (17/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.043465919 seconds)
    (18/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.435064774 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.956896173 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.303673812 seconds)
    (21/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.994353415 seconds)
    (22/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.935013757 seconds)
    (23/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.962693676 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.841902748 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.063026534 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.801722206 seconds)
    (27/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.085869651 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.03694228 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.868323336 seconds)
    (30/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.873324567 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.791585614 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.849374769 seconds)
    (33/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.864455165 seconds)
    (34/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.964559259 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.474486149 seconds)
    (36/309) benchmarking ("sort", BigInt, false)...
    done (took 6.877377365 seconds)
    (37/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.956514992 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134123704 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.865713296 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.976864988 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.932212169 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.8858827 seconds)
    (43/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.363285528 seconds)
    (44/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.223984411 seconds)
    (45/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.09611567 seconds)
    (46/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.097600255 seconds)
    (47/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.949014307 seconds)
    (48/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.878133737 seconds)
    (49/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.879471827 seconds)
    (50/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.860758957 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.012628071 seconds)
    (52/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.962576633 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.111241204 seconds)
    (54/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.029486217 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.942569825 seconds)
    (56/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.024223102 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.867966524 seconds)
    (58/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.095199263 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.029250194 seconds)
    (60/309) benchmarking ("sort", Float64, false)...
    done (took 5.627808593 seconds)
    (61/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.867541424 seconds)
    (62/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.769499273 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.846990197 seconds)
    (64/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.180059359 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.16404834 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.931182866 seconds)
    (67/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380729327 seconds)
    (68/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.931347288 seconds)
    (69/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889690794 seconds)
    (70/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287610709 seconds)
    (71/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191931136 seconds)
    (72/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892107656 seconds)
    (73/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.862660728 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.335225882 seconds)
    (75/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.959576593 seconds)
    (76/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.194353307 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.799260132 seconds)
    (78/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.893476002 seconds)
    (79/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.862814909 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.955085891 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.977173857 seconds)
    (82/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.936123573 seconds)
    (83/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.188345884 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869089518 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866113387 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.974471141 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865693529 seconds)
    (88/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.9553251 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.95561598 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.481130204 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.049154539 seconds)
    (92/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.898457176 seconds)
    (93/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.919145763 seconds)
    (94/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.001478674 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.851547289 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.291495692 seconds)
    (97/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.854193652 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.840546557 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.151310589 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.169382693 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.16294335 seconds)
    (102/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.004799721 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.02484501 seconds)
    (104/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.411167215 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.448498321 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.851718318 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.578663735 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.854695216 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.93697369 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.642013534 seconds)
    (111/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.337053818 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.974921887 seconds)
    (113/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.336605614 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.871285925 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.032045581 seconds)
    (116/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.345375232 seconds)
    (117/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.973720258 seconds)
    (118/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.129988034 seconds)
    (119/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.022967133 seconds)
    (120/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.095917125 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.737189157 seconds)
    (122/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.162280898 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.972887809 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.003461592 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.2511954 seconds)
    (126/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.171667214 seconds)
    (127/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.068255174 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947208958 seconds)
    (129/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.023496004 seconds)
    (130/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.032545598 seconds)
    (131/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.965331864 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.812246013 seconds)
    (133/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.024379109 seconds)
    (134/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.030872679 seconds)
    (135/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.720355637 seconds)
    (136/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.274313906 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.261071916 seconds)
    (138/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.300045965 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.803612256 seconds)
    (140/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.85588413 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.176716409 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890493806 seconds)
    (143/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175500884 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.004632651 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.112245048 seconds)
    (146/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.87267894 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.41487423 seconds)
    (148/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.957654987 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.937870961 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.08702751 seconds)
    (151/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120689085 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.868036708 seconds)
    (153/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.96481827 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.061128713 seconds)
    (155/309) benchmarking ("sort", Int8, false)...
    done (took 4.818860713 seconds)
    (156/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.253813128 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.116914005 seconds)
    (158/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.001236651 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.868655503 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.026382746 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.149517123 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.942864956 seconds)
    (163/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.091638935 seconds)
    (164/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.196169609 seconds)
    (165/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.899337907 seconds)
    (166/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.850739928 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.200980213 seconds)
    (168/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.111194086 seconds)
    (169/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.957927474 seconds)
    (170/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.93567108 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.783751805 seconds)
    (172/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.890479807 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.384099844 seconds)
    (174/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.289836393 seconds)
    (175/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.086786444 seconds)
    (176/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964018395 seconds)
    (177/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.897950154 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.852388028 seconds)
    (179/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.504127319 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.208747967 seconds)
    (181/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.301827668 seconds)
    (182/309) benchmarking ("sort", Float32, false)...
    done (took 5.561022292 seconds)
    (183/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.980075124 seconds)
    (184/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.969558218 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.053133055 seconds)
    (186/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.894049211 seconds)
    (187/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.871905538 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.979000496 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.872129029 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.162683611 seconds)
    (191/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.972953355 seconds)
    (192/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.175044705 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.122716201 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.898341769 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.834442 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.97129681 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.723837281 seconds)
    (198/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.85972896 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.488172934 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.884442389 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.113426858 seconds)
    (202/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.877394093 seconds)
    (203/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.710317984 seconds)
    (204/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.165092189 seconds)
    (205/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.199571995 seconds)
    (206/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058941549 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.123036305 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.141296267 seconds)
    (209/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.015352695 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.931096513 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.309070743 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.909326063 seconds)
    (213/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.05883443 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.879163796 seconds)
    (215/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.928900642 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.935209366 seconds)
    (217/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.605293237 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.681296995 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.859415384 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.957344355 seconds)
    (221/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856910309 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.968877681 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.877070198 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.839210815 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.715003541 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.078784618 seconds)
    (227/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.788218541 seconds)
    (228/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233264721 seconds)
    (229/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.03210658 seconds)
    (230/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.405805026 seconds)
    (231/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.968317909 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.069215739 seconds)
    (233/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.974432485 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.892725613 seconds)
    (235/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.109520608 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.896797535 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.208665359 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.921802937 seconds)
    (239/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.093223797 seconds)
    (240/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.26099091 seconds)
    (241/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.099100953 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.217362461 seconds)
    (243/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.904501139 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.816810227 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.74648288 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.698519616 seconds)
    (247/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.165580423 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.330944774 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.174075879 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.551052003 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.219202226 seconds)
    (252/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.858128131 seconds)
    (253/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.161091462 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.535584066 seconds)
    (255/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.45840541 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.913612555 seconds)
    (257/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.998916031 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.124500117 seconds)
    (259/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.948532846 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.576604662 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.989634113 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.943853273 seconds)
    (263/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.95619891 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.899289779 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.063289879 seconds)
    (266/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.884023793 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.21500117 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.165333425 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.982453469 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.896089079 seconds)
    (271/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.89293587 seconds)
    (272/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.900748552 seconds)
    (273/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.132690146 seconds)
    (274/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.890155206 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.971849243 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.874783772 seconds)
    (277/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.876743977 seconds)
    (278/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.879430936 seconds)
    (279/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.348700027 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.99186623 seconds)
    (281/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.013130093 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.951877392 seconds)
    (283/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.901674814 seconds)
    (284/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880377707 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.047380611 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.013714489 seconds)
    (287/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.976506976 seconds)
    (288/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.991062685 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.00495333 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.865422536 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.659605606 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.451125548 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.881661416 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.950924894 seconds)
    (295/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.858622834 seconds)
    (296/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.959560057 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.000995371 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.910692822 seconds)
    (299/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.900267313 seconds)
    (300/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.927117989 seconds)
    (301/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.237680475 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.264004788 seconds)
    (303/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.89159459 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.580330835 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.904451522 seconds)
    (306/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.981860445 seconds)
    (307/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.58606327 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.293766337 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.308299145 seconds)
  done (took 1008.21799674 seconds)
done (took 1010.064558269 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.909290121 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902959122 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.887697276 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.908282218 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997220482 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915107005 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.898651077 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.890292309 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.933998974 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.935806879 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.886680381 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.912316706 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.888102289 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.887969673 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.886371322 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900887478 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.204744279 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.919022056 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.904317898 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.894756452 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.904889152 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.887161595 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.936938598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.913701368 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.891611293 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.890185683 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.891721972 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.90719478 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.998847295 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.891479651 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.890138823 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89871973 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.204623327 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.917727575 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.883089012 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.907267187 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.899052744 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.897851824 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.891119742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.921405564 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.297787462 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.931020092 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.891929153 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.890552679 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.890130452 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.893157827 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.890709387 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.895016809 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902557018 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902886375 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.295508855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.944255045 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.892075231 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.889781017 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.900323632 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.889966222 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893253709 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906016249 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.909867957 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905574759 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.197585824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.926512221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.892162374 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906425927 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.898112622 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.331770694 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.927371727 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.894710269 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.298645086 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.935239463 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.331829124 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.93849036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.890892639 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.904412368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.922393866 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.207990608 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.917252595 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.890557817 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.898671171 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.890160109 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.901848637 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903400466 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.896164633 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.892661697 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904992155 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.918626973 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900782516 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.891827818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.900043458 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.911665732 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.898079107 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.903220192 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.895741601 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.887083552 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.90031582 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.896167624 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.895072626 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.895829875 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.896271805 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902434979 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.297849849 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.949074264 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.889611211 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.889487749 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.892303844 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.906687679 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299022612 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.933746226 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.914567784 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.939917673 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.893669843 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.201260369 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.927380398 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90882706 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.901125604 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.896532052 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.887694886 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.199635529 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32889463 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.949223927 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.894901907 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890933908 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.909051991 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.895295029 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.889222194 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.210965711 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.926656374 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906906123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.01508667 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.904657651 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.92519817 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.893207587 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.897089944 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.922814069 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.909613653 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.925089687 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.896764322 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.910096608 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.910159326 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.889860464 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904721523 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.90430105 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.89602198 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.899933558 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.889414909 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.923830549 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907480711 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906275597 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.916382281 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.017063874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.893214564 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.200819774 seconds)
done (took 297.302388227 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.965766157 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.885271412 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.99277903 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.893733072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.974870483 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.980475231 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.88945162 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.891122547 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.891844005 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.266508843 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.890937229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.894956768 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.88949858 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.892683133 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.976999739 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.895042485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.891582132 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.232406116 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.893903224 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.965288212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.893186069 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.892143739 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.893992659 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.278893385 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.889381791 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.886368514 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.96550327 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.895636459 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.242392422 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.894941159 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.893758876 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.243996872 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.985582119 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912760268 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.905998958 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.901828705 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.977333016 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.899382455 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.975454175 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.975586085 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99425206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935043604 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.894776901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.891138558 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.899309399 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.895234319 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893453668 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.923898481 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.889172748 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.894205061 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.233678249 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.906118131 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.896183989 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.893080973 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.894140106 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.926611213 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.894243425 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.896419328 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.987193703 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.89659786 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.9582964 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.280962021 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268213476 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.896517645 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.89579737 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.895842266 seconds)
  done (took 186.008300348 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.964355216 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.969541491 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.963778343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.902447267 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945187319 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.964631242 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.902628982 seconds)
  done (took 15.433355569 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.90239289 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.897613363 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.948970102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.949308159 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.895942523 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.046252846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.899000772 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.907492682 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.895689877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.944968461 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.894486818 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.894271728 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900799642 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.894620556 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.942636326 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.903759826 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.011683578 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.892026866 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.89156061 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.042821104 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889314554 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.900524315 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.945752424 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.901226819 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.890796423 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.896161598 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.4742457 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.889090105 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.886702251 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.889445807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.887200436 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.93152993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.889137884 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.889481586 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.88677261 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.002379474 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.88678727 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884679919 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.889301975 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.881947142 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.885855169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.886518732 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.885680312 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.882959313 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88581607 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.909235228 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.886614647 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.887426692 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.884917897 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.886207624 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.934955013 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.886233892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.882906785 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.88347286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.939001754 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.892275548 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.885281959 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.881815817 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887400624 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.882506716 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.036477349 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.934489718 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.884777158 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.936705777 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.886455958 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.886294505 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.885023878 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.884747066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.982149688 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.885126219 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.93503567 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.882538286 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.043187192 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.909433222 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.885663261 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.88714534 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886163242 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.883704087 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.877756907 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.889660425 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.882013825 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.886009486 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.889961818 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881668479 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.881891908 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.996773839 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.991870868 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.88270064 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.896244882 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891030439 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.88204521 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.935948677 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.885859234 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.881551253 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.940399346 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.002187289 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.939667162 seconds)
  done (took 207.639784678 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.889189368 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.893152703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.884982661 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.901650619 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.883283541 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.882385832 seconds)
  done (took 13.144036742 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.885844612 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.884942148 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.885671431 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885429162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.883289836 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.883465312 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.883118198 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.885329162 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.888456109 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884875215 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.883605302 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.882405371 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.881521891 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.881850387 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.8809762 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.880809326 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.880756843 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87858034 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.881746601 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88319319 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.030862823 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.880771502 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.881283584 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.882662401 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.885089346 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.881774198 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.889960676 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.881618053 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.881286737 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.890631073 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.884323201 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.880916569 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.882006755 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.887573587 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.886728352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.88331981 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885141419 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.882891059 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.879163105 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.881996321 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.882879544 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.8800305 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.881092582 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.882350243 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.884091794 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.885705469 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.885846958 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888539909 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.880670141 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.883584991 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.882705321 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.881946137 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.881186729 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.881826513 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.883439852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889659502 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.886337741 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.881241463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.879559161 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.882419476 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.883143401 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.885722539 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.882808485 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.885092255 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.889005974 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.883044419 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.886722035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.886140905 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.882090532 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.883589654 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.883530342 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.879918962 seconds)
  done (took 138.572892124 seconds)
done (took 562.634115437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.938258953 seconds)
  done (took 8.745654373 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.00816593 seconds)
  done (took 8.870818565 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.412843367 seconds)
  done (took 10.243022747 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.923843909 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.94057932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.902589879 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89749844 seconds)
  done (took 29.512359785 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.979651749 seconds)
  done (took 8.803806743 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.918343896 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.89406229 seconds)
  done (took 15.668306287 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.924198765 seconds)
  done (took 8.758821623 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.008383435 seconds)
  done (took 8.858534834 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.907171903 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.924272729 seconds)
  done (took 15.671092228 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.877078023 seconds)
  done (took 8.700910161 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.571819146 seconds)
  done (took 11.486553023 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.910377236 seconds)
  done (took 8.836646204 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.920909823 seconds)
  done (took 8.744906669 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.945895268 seconds)
  done (took 8.769326939 seconds)
done (took 163.477144328 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.896330728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.895097242 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.892860398 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.893023711 seconds)
  done (took 29.400635919 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.932744757 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.932655392 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.933185767 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.943614418 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.934601503 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.931430031 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.924175457 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.922943582 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.941676108 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.934406907 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.93279854 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.933800772 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.932315991 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.923375018 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.933493338 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.932677789 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.942635618 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.933210895 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.922872593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.933316798 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.896908061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.94045723 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.933191786 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.896027547 seconds)
  done (took 48.141137611 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098234646 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.969542255 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.049304138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.946610151 seconds)
  done (took 9.883153449 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.946838081 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.949179115 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.960477023 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.998651074 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.033019596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.957575035 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.917201814 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.916620221 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.90282497 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.947178071 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.022733205 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.94209379 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.033816277 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.892833657 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.0939039 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.892473355 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.89371716 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.947068988 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.999568086 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.009637486 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.894282607 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944455614 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.949875047 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939249319 seconds)
  done (took 48.805369898 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890752522 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.899613835 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.896756828 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891533562 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891106255 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.892037534 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897431624 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.893209607 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.9130157 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.892884251 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891024789 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.892367151 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.890736528 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.891801052 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891307247 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.903806166 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.905904667 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.891179136 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.895264551 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898435791 seconds)
  done (took 39.726100172 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.885548645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.740092666 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.237014471 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.140023501 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.885918762 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.889051495 seconds)
  done (took 31.593762626 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.905659248 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.896778949 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.892847474 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.95004495 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.030808423 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.899390494 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890898917 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.904669798 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.939103433 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.956984852 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.91607085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921612419 seconds)
  done (took 24.921037161 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.886549012 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.905345939 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.886576091 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.918097385 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.902365604 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.898662667 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.897579401 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.883835179 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.906292148 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.910046693 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.898688539 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.905589487 seconds)
  done (took 44.619977169 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978250656 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.776706706 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.93698724 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.606645209 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424747351 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099858336 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.408082951 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226858956 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.892542306 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161253339 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754933872 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145752629 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157876354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902459964 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.993970839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.342786487 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203467379 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134576178 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937310927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547804405 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023545566 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452474774 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.578440101 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030983186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115150929 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.036507234 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.165752306 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863506829 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040700098 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.941595647 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915206402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.904991104 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179032411 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287003598 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022218963 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914923009 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556709171 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.621677893 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890703199 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.683920638 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.761133439 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.037182351 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913020921 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904540967 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839575986 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452800169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2441765 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.910901417 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608187703 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905599142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918128211 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996384612 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.908602574 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.72160639 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857503336 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.186806796 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.904431776 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912287281 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.475852238 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965493672 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.562574799 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.842723457 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.998182414 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556598308 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.378647055 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.055678409 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.910519933 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909742581 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840458398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.631987113 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02894785 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.051764938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.926378166 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556213592 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22854589 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.917782791 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.989171215 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.199101737 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.726367971 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.846541269 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13532657 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864889778 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.841769895 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.755378656 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.842197173 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179471528 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946328382 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.53994328 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950286167 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243746562 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918041249 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928892475 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915407613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132130059 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.78786173 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907534762 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.614157101 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190459678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930323637 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244156639 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843565591 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.912424238 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164245228 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.119960968 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.048834482 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454835088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06634757 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909040074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.998607662 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.740653204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.026545985 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.183171968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969858273 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.965915938 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038339103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867082606 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214552379 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938609715 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.080076353 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.870110496 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.171583057 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226658997 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165250296 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991025969 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.911120866 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905626133 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583244605 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535147194 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.131747924 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.905704291 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30894885 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021689661 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.904508414 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838620225 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.593308021 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.899487793 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.018554067 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132346335 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.775399008 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287485606 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840816596 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050771067 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.018819408 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.125790657 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.557102921 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.985761057 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162593515 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.29737955 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.144878226 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016104539 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916053236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989506997 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918801764 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.23716399 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.256257177 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898717442 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.898112517 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.645049888 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993118181 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914038559 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.914535325 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740086382 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190657317 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933756146 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.915937076 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.79528536 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.918940601 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971867836 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912243831 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.912620721 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407338811 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.655117339 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.913761015 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.665039877 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15769535 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909192337 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.644392575 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1095461 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.996900328 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.190197437 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980923677 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.84631602 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.61582699 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.61265528 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911631211 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.845376519 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.910103573 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914503716 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916221712 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.101463688 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190130313 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950070108 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.648283511 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.032431707 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928313476 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.9208179 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915626879 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.423547222 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011952266 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.463738954 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.033365019 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055267765 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.928405757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.849490582 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.918173088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.919878199 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.913046465 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870835891 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96420486 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.576551199 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372965891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175735542 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563139435 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932715818 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.691531591 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.048353114 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.940742446 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.672353054 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91211462 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.028128927 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986092174 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.933594933 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.669625156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.689187271 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483952902 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229791337 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.234201711 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365848524 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.306319195 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248396034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.253529858 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151114426 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.444802556 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976425356 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260675372 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861057472 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00273663 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.571226298 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276319218 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930301658 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143191751 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309534321 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.734943144 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080104931 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1262751 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944901773 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.744534173 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94980746 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.111285486 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067555053 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.697166356 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143977434 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243200439 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.668746736 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.020412421 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.901264662 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604091269 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988647397 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.612349216 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.26242619 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.465163745 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.896546981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397104355 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905134987 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.343277837 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.255155125 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.257618926 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.982045854 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832518579 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907455017 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907984149 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.895346834 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.902132221 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.880388772 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.198079769 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907897723 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133452223 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.072233027 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287343322 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.885276352 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.902713496 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896923962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222558185 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.60162858 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143404953 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.271031439 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.51789172 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920250476 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824944988 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828118654 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.592099544 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890590791 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861535335 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.114077488 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.999027301 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.836390333 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.289211033 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199668724 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138637801 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.897160706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.16281343 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.161668471 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619839951 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912434133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.983509496 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642223253 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.59076956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.105889905 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.118447336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711402251 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114676483 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.943704461 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.853440452 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.881969636 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099812383 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.106508942 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.895027054 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144571264 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.608988607 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.887617174 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296293674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983062632 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.943543048 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.141426196 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.014944514 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93304719 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003778401 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933381487 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.933990968 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.933782663 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971875866 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.955663161 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.062432601 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.938081438 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01401835 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.011505904 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.557261367 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.951912992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206500319 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288115902 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.265210508 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986427843 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926649609 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929081096 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859621807 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062401442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369590019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.197102162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055225654 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.065292407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949948921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.716248018 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228652128 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239915521 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199280308 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.821385265 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925714542 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.033623586 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.149212483 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93687354 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.136520622 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.159400431 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252562541 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397125058 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.089851878 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.364852219 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199444456 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.295327205 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.925613157 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517873547 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.932427304 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.681012929 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968860559 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.947945682 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217029693 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935782521 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311021989 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.947953317 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.125779958 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.442062668 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.689991186 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293839161 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.921030746 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990347768 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209693369 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.322324072 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243115055 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995008543 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937833172 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.625532256 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065338556 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.926605544 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.204055048 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927321802 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138192529 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.639152228 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93687178 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210194877 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.242139295 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.924258469 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.941529393 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988409348 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.938952065 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152155199 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192751737 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186145371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936370869 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929733764 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.742071425 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203975342 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986281699 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86176357 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.93180657 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02571705 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.176959079 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947853572 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.444575315 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.63039461 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227021091 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.84860602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949796075 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349670761 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368840218 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257474823 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469671439 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163980152 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489299668 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.814207581 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306739433 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.934075097 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347916025 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309521422 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.932375064 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450861291 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042976701 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200934997 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253803474 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.942506496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.994511786 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.9824506 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.153042258 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.523062141 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869899123 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938392101 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.98468581 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924780392 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.055392515 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935057519 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.065956264 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975728589 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.740539971 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41408368 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.926002736 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.90633072 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.648649126 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.514335103 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034078448 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077504986 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925463144 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.634114241 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.213075113 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174397164 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.473619721 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.99280659 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.925109573 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920730683 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84849084 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.119747784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.116746612 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224223674 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.314362011 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.036995777 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926191554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.133781955 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130343357 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873109686 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075455373 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3648348 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037535182 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.835940606 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.634108585 seconds)
  done (took 1707.889687554 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.927664641 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.92777474 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.929145793 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941503766 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937812462 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933678053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.947528891 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.009103941 seconds)
  done (took 57.402178251 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.916590636 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.140972241 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.928884642 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.918638263 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.946398871 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.918233975 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.119992896 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.931384606 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.941516093 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.929833075 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.936480037 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.931902724 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.285482268 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.945512472 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.920141294 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.909416385 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.940835932 seconds)
  done (took 75.418737566 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.919217526 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.201769966 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.958088105 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939023674 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.795092264 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.924048087 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.892675811 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.946190944 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.910323446 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.080879127 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.249202684 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.922977181 seconds)
  done (took 90.588764194 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.923794155 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.913786807 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.91373013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.914281718 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.914339491 seconds)
  done (took 11.423861353 seconds)
done (took 2221.650942862 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.152990174 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.133303463 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.144571055 seconds)
  done (took 6.114002031 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.059639438 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.105800354 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.227587228 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.231404796 seconds)
  done (took 10.465360639 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.198220906 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.294031985 seconds)
  done (took 6.330267391 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.243068755 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.932113097 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.298466428 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.911695164 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.911509484 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.912231391 seconds)
  done (took 22.578032336 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.912985642 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.916343735 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.915091583 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.917180467 seconds)
  done (took 9.500240108 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.892163227 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.619131733 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.894729473 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.907485658 seconds)
  done (took 21.152123531 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.661537024 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.310918852 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.658691817 seconds)
  done (took 9.46982781 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.397494382 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.826995784 seconds)
  done (took 9.063642659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.161306196 seconds)
  done (took 4.000432163 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.942046339 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.183955833 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.436851208 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.435920657 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.550023502 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.795215042 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.23929413 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.155576824 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.363073888 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.374726319 seconds)
  done (took 25.31610511 seconds)
done (took 139.453324156 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.330996941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938708688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.112002328 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.266155759 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.150134492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.112641499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.123682857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.258084844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.793621858 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.788514001 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.274843012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.143258631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.072030969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.930534214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.078910609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931565682 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.142816602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.352579531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.990293333 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.174093716 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.141370335 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.920202108 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.114572596 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.933567118 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.149536025 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.068059186 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.464250425 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935311704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.129119481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.474733681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.071700306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.312476703 seconds)
  done (took 169.521267411 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.912699009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.913162066 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.912804761 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.913967863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.216520059 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.914997202 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.914043547 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913569591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.939497786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.924131576 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.915185588 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.20884344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.913730291 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.913781755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.912541612 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914239212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.087852712 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.915256023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.9141782 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.913281842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.913807554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.051729383 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.91472498 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.06406144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.057143788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915096164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915409983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.917927326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.92101336 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.920022115 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.921084105 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914458692 seconds)
  done (took 208.354890736 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.914135086 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916612955 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.916197393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.915016116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.916839538 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.915046462 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.918363903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.91572257 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436091126 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.436230388 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.923260185 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.91888305 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.927352829 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914948437 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929313558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.91551509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.93097501 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.933815063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.934573794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.931003835 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.934196478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.592685176 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.935371364 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.60310518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.92995038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.931848834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.915757789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.935718023 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.937800102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.932879722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936198205 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.916572268 seconds)
  done (took 221.815304072 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106272756 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.923487441 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.924166018 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.832767731 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.924438246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.924089165 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.918631249 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.107485915 seconds)
  done (took 19.53108442 seconds)
done (took 621.07029292 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.397019191 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.238676291 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.108827009 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.949549172 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.180743052 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.982515687 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.943947842 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.009765427 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.673517793 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.016513397 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.590661899 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.967722504 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.686020738 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.974189036 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067253231 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.002302116 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53372038 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.627615977 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.121443357 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.003328964 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.118119053 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.889567365 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.032563866 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.703256682 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.707411648 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.940745936 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.10626267 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.544681828 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.955865767 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.110621716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.693332857 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.327695674 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.959559371 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.943183781 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.001253576 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.978104871 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.275656999 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.959565811 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067914828 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684819707 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.005396299 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.557093637 seconds)
  done (took 105.484990781 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.912313198 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.910413458 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.910292621 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.911505769 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.911627592 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.911036408 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.910279026 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.910224048 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.910990321 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.911050552 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.911517487 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.912568344 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.911470675 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.91146371 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.910132298 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.910891429 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.911294746 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.913430912 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.911150723 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.91040275 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.911070938 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.909726527 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.926093426 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.910820937 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.912536389 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.911827072 seconds)
  done (took 51.56300515 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.929340696 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.095128486 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.174555272 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.948733356 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.927674068 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.930886767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.945683668 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.932624522 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929347011 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.928589238 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.020958866 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.933643793 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94526195 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.163852509 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.945721607 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.92707771 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.928512839 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926535689 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.099419481 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.944152321 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.947508566 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.933833771 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.94744421 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.941323159 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.92975435 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.928057047 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.931101953 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.391013515 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.938192558 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.021837789 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.97284263 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.951740323 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.360438166 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.176186159 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.98506533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.938287867 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.929209183 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.024727381 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.934308738 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.928496639 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.947161781 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932668178 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.164452508 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.435523929 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.944233622 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.930049577 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.401234448 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034984391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.970700374 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.941549806 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169618643 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.947720769 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.931770836 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.930106647 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.965159103 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.935243266 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.929164071 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.280286156 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.942722864 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.948148363 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.936434515 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930623979 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.106248369 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.940025033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.095713447 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.939743574 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.93739 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.930920428 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.16817395 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.94946114 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436867139 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.946570981 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.93222841 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.023204319 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.101771565 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.428668013 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.944419781 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.10903104 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.382209014 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.95691449 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.938287486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.379841636 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.960345396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.939688503 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.934186347 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.933810573 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.932656859 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.977705682 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.948301513 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.368947135 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.442279792 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.29748097 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.959193508 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.947172951 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.932171505 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278600994 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.942062016 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.933426294 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.163317415 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.449171702 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.947569912 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.94133245 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.426590364 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.949460954 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.952931532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.942874446 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.171181421 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.950117527 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.978854007 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.934182259 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.938250127 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.935116442 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.951601987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.940295671 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.933556539 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.415484328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.047527238 seconds)
  done (took 239.437244119 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.927927569 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.930321685 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.928435531 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.956752678 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.928010241 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.93393264 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.926492789 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.925908486 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932537701 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.926963832 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.926024858 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.92931249 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.927987213 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.935103842 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.56146778 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.934100637 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.535805344 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.927389373 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.92896774 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.938333201 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.7078933 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.93315909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.926872628 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.94946599 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.928383351 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931099577 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.928682352 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.057200218 seconds)
  done (took 170.081705683 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.935871374 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.117837312 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.952985666 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.974168029 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.944751627 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.933321609 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.958680638 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.956604816 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.940700976 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.933698315 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.932913965 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.996699946 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.947219826 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.077424819 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.966208233 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.965840903 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.038437278 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.945864296 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.933287184 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.935154288 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.963468447 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.928121912 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.996017954 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066027889 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.957486548 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.053765437 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.940032244 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.938350929 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.935849878 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.053837148 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.953879549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.998494255 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.964914198 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.953596833 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.058970795 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.053991815 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.045666567 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.967776268 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.941547142 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.934229708 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.935353997 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.921328536 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.05443023 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.956616331 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.93730707 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.04232172 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.957494884 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.938736007 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.945638841 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.935776454 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.949954686 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.954100707 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.004867991 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070065362 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.9719117 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.962272226 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.961564427 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.226610946 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.945583652 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.03617305 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.929527067 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.056652716 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.959362582 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.922285198 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.938638861 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.943196494 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.966111045 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.969099574 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.043184127 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.947722517 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.036588661 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976414082 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.944337786 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.937177339 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.940021939 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.055955124 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.058255504 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.978008511 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.975234963 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.969124183 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.93195076 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.938198311 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.923449466 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.956435463 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.941944576 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.054079121 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.057130342 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949370375 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.940067215 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.940477326 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.941078855 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.964053888 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.063732364 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975533489 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.032564559 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.011986646 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.014215959 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.953833887 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.952586989 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.942632039 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.002656086 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.954274583 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.950777811 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.277595901 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.010965995 seconds)
  done (took 209.890497632 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.387207001 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.995898288 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.997059279 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.250918886 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.365232021 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.786567573 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.987596282 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.989609659 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.013877049 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.175590555 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.062594927 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.0071775 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.974989246 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.963712351 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.988687925 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.011692592 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.000694239 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291911972 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.114739884 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.05462302 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9710089 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.296529854 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.310351235 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.395982209 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.024032031 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.3318439 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.670792183 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.134582745 seconds)
  done (took 63.423637712 seconds)
done (took 841.726694625 seconds)
SAVING RESULT...
DONE!
