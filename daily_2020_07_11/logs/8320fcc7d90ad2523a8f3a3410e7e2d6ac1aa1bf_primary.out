cset: moving following pidspec: 26409
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.61475073 seconds)
loading group "shootout"... done (took 1.250253371 seconds)
loading group "string"... done (took 0.424117363 seconds)
loading group "linalg"... done (took 8.016019664 seconds)
loading group "parallel"... done (took 0.158854305 seconds)
loading group "find"... done (took 1.438096879 seconds)
loading group "tuple"... done (took 1.957475206 seconds)
loading group "union"... done (took 12.864390886 seconds)
loading group "dates"... done (took 1.355833614 seconds)
loading group "micro"... done (took 0.206395936 seconds)
loading group "simd"... done (took 4.34600122 seconds)
loading group "io"... done (took 1.014162073 seconds)
loading group "random"... done (took 8.974207185 seconds)
loading group "problem"... done (took 1.588440522 seconds)
loading group "array"... done (took 19.230275955 seconds)
loading group "misc"... done (took 1.614116447 seconds)
loading group "scalar"... done (took 39.806305734 seconds)
loading group "sort"... done (took 3.019021192 seconds)
loading group "sparse"... done (took 11.818889765 seconds)
loading group "collection"... done (took 17.298483173 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522612635 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126384394 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137460092 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118789953 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15136964 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11819938 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125040995 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085156239 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.899854955 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155653054 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114134718 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.459326602 seconds)
done (took 5.324857263 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.171308907 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088615816 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078312065 seconds)
  done (took 1.268216425 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063393118 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125488463 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063773238 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064624121 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064647386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064431689 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064603126 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068372293 seconds)
  done (took 1.615745816 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.070965744 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065995844 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063393484 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066228483 seconds)
  done (took 1.368530803 seconds)
done (took 5.603104054 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2490339 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.111430496 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.284290043 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.401306289 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.472395248 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.090759691 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072045758 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068576374 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.130924291 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343232316 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116497674 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.19419781 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.098405026 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.186843868 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.008673052 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.127064694 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083345049 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.124167615 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090566241 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128381468 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.425992017 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075412329 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.072907764 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068403941 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065577422 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.637848756 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659193135 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.133266738 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086623187 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.102496821 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114705456 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.6365215 seconds)
  done (took 10.602982158 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101212576 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098713083 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067012632 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125902133 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09173659 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068441291 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075110228 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.0670641 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090201126 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126228194 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090400085 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109422927 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06621686 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069008082 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087551397 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198922447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077668125 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078151869 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066282106 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078371781 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105306666 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077025372 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077828946 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07728413 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126417435 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.166373224 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094537398 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095655941 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065811282 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079322417 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11622316 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128056832 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06409192 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063802219 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118717843 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092639259 seconds)
  done (took 4.527979114 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.993084481 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088799427 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.104577297 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.637991211 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.063860722 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.155601612 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245735432 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073542878 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.40171437 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122910912 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.156372372 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.119832071 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146839043 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.122106006 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.07026885 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.300148702 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119650706 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45935525 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066697281 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066655414 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065580934 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077238774 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068811937 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064000632 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.078694943 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093333658 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.088518017 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.214910402 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.98068173 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.267405303 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.069281631 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162674553 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.088446185 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.370859081 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.071410602 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094851072 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.406668642 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123917092 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063592308 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176255403 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.126543187 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066180653 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.122593376 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.079709665 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07094514 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070784467 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.07070361 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080727087 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.08300987 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104549831 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066823668 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066345203 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167124496 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063903891 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066335367 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067160968 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149486459 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066715586 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.153350413 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063926405 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067822107 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.098346439 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067870409 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.095219808 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.110398362 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063714184 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.337283193 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.039520874 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067159331 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.946388447 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066145093 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077659773 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.067053378 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.079513858 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065972818 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067687522 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066997914 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.076283076 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068868168 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066940125 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.108663142 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065785962 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068622418 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.065494795 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071587425 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.098596293 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064176162 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.471071577 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098633468 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06560145 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078288634 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105499167 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066358003 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07382216 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067366863 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066656824 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068721639 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.069200702 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.072833328 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091987374 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069276458 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112190568 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.14412979 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068896184 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066752933 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.072652194 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063901643 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07127175 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06877118 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066081155 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.071177877 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068550006 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065340775 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.119221318 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066819382 seconds)
  done (took 21.992571609 seconds)
done (took 39.218376168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263921704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086186512 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085225074 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085370969 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085943779 seconds)
  done (took 1.81070474 seconds)
done (took 2.994097469 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.109704191 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.06406638 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.103581672 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.103539536 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.064681948 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.0642859 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.100374187 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.064150107 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.099722739 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.103916915 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.108869259 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.105219994 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.064070755 seconds)
  done (took 2.356466998 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070120022 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081097427 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.087296529 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.063149663 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072763973 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.082673813 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.06264324 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.081367744 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089001009 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.082248961 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.082923831 seconds)
  done (took 2.031653579 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069611797 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081880496 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.086826421 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.064434805 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.076764066 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08622477 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.064840512 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.084262234 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.090451036 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.084866426 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.084752134 seconds)
  done (took 2.045859838 seconds)
done (took 7.603761202 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07779684 seconds)
  done (took 1.238084043 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.598278019 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.095866302 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081370621 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110474083 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.216287062 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121085589 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278993965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091076479 seconds)
  done (took 8.955972645 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101009494 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085980305 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073281998 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074949749 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073042714 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073693893 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072735084 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073218691 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073780771 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072463869 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071657931 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073044076 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071855052 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072655096 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073064302 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072933568 seconds)
  done (took 2.470427625 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10216936 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.1020148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078642143 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080430013 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077042568 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077200853 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080225413 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080350526 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077700826 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079223536 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082073615 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.079714138 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.079078876 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.07009319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080214967 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.083354047 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077084125 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080095934 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081624786 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082276822 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081949127 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.069301954 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079362185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081245682 seconds)
  done (took 3.238176635 seconds)
done (took 17.076343545 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.123462264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082706955 seconds)
  done (took 1.375272118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084991193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088065088 seconds)
  done (took 1.350767403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083501364 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065773849 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.101651298 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.072442163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061766773 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061889282 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.084660018 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06219152 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.06207835 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.062593845 seconds)
  done (took 1.899022326 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0628395 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072463826 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.067407604 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.07759081 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.068084278 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061362235 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.066791389 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062597862 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.071511015 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059978954 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.067099323 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082711358 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06779127 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084288431 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069045115 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067828362 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070309807 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066680515 seconds)
  done (took 2.446207702 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059997018 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061456072 seconds)
  done (took 1.319879534 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064328328 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061087556 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064066953 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064787898 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060985658 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059737508 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060911837 seconds)
  done (took 1.628973532 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.360759414 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122155655 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328010931 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069814896 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080386071 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.245367955 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062643903 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069779208 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069501599 seconds)
  done (took 2.650320224 seconds)
done (took 13.861376615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077834025 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080931631 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096002116 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.443937833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091774237 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066092833 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113978871 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178987541 seconds)
done (took 2.361559873 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210344259 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.594693035 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.841847535 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063400594 seconds)
  done (took 3.700475913 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323554238 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082527096 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075004811 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06690059 seconds)
  done (took 1.76027604 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061980549 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068528815 seconds)
  done (took 1.34090575 seconds)
done (took 8.224333362 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062503968 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.087097187 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062068197 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062799582 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.062424278 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.061007183 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062362732 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062750165 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062458047 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062997953 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063042572 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.062614128 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062667352 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062434871 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06276246 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062876784 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062523009 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062732206 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062692271 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062561305 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062553765 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062886862 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062722909 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062698463 seconds)
  done (took 2.767173614 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079270152 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.063914103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065381866 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.066154298 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066367133 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066476422 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066850323 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065248206 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066592368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064664631 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066535798 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066576657 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064410809 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066927977 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064442331 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067193611 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066888135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064845787 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064484525 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06690467 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066411443 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064980046 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066926409 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066489897 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06715219 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066949682 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064740617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065242747 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066782559 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06698365 seconds)
  done (took 3.209234784 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061936366 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.058322909 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059847173 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068117901 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059864044 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.060256962 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061131521 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059697327 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059977223 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061061839 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060706488 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059519434 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060828457 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059128487 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059306277 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060410891 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063254809 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077839047 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.05992639 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059237837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063488747 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059583592 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059428298 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059899473 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060387482 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059796311 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062494835 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059987453 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059118618 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060166846 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059475707 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.062814831 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.063694858 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059221934 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.06797669 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063441793 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059501919 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063003954 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061075732 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059268312 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059384824 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059635471 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059594153 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059418935 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068072368 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.060149989 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060933089 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.060495264 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059778059 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059284444 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059689521 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.062020768 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064417817 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.061448229 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059170828 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061027605 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059019835 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060339887 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059356095 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059231197 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.058998997 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062440859 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.061890464 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060640578 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077190557 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061397282 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.068064707 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059365228 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060359598 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061965829 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.060214911 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07491007 seconds)
  done (took 5.650996135 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086084788 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086708232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063317986 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062471907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059441192 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060070998 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068328055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060622191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064483908 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079613635 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060475557 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063919626 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063853454 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063907232 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060530782 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064230835 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068838977 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060284569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060301761 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064202998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060166505 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068491889 seconds)
  done (took 2.683007675 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.144579997 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064924518 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10101923 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081539308 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069841719 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079067891 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066244378 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066210283 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066543213 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067212822 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066853273 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066241024 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069657052 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067224598 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067121973 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066729212 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066124414 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066778764 seconds)
  done (took 2.566879559 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075549524 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065581379 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08858993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065455227 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065700728 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065374216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06949546 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071545057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065385252 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065474338 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071254566 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065583284 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065610319 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065122859 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06520038 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065323331 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06536171 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065523 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070770974 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069812774 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069757144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071167808 seconds)
  done (took 2.734537093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073715286 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06413566 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078399542 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065894185 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060646169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061175669 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065746185 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06460659 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066219331 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06450798 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064558914 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060752414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066449446 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064544074 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06687099 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064833541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064231157 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064758589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064514191 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06020472 seconds)
  done (took 2.534512657 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093024678 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063409979 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063938044 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082419571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063837529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064316297 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082223345 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063795117 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064244445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085519 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063905645 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064162402 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082096254 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082570881 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.063664991 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08191593 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082231536 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085205402 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063690731 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063734689 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08547245 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063821878 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091250582 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064126986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06380077 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.063733089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063750071 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082215037 seconds)
  done (took 3.266645082 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061753887 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062609292 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063279377 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063007763 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063173075 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064048404 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063179337 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063264759 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062689493 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062811554 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063057198 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062974228 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062873432 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06257107 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062558266 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062622717 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062217821 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062602867 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062983304 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06269826 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062604985 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06227057 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062677402 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062480542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062939438 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062679221 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062892482 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062909223 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062722721 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062612659 seconds)
  done (took 3.117080031 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07237736 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070201446 seconds)
  done (took 1.37618191 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060672134 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075121387 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058186769 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068250118 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068455109 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062255435 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068526979 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068880987 seconds)
  done (took 1.758444232 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.07572928 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.097586903 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062112264 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062765995 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073097699 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.122356642 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08319246 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072361324 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075196443 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063474301 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.064079562 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084125189 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062735345 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073543901 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065831702 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070460446 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070056006 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074783041 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07397684 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.059876 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076533423 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066161382 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061269035 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.064086964 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061129769 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067148751 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075665729 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071568936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070241917 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059182773 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.084382009 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060572225 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062642026 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070136265 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074395751 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.061611106 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.098878581 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060252594 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066193449 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059861369 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073467147 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082727724 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072252946 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077780164 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061027007 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062243665 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058240248 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062059391 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061826038 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067845995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05887666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0652451 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058358983 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.064390033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070748681 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062244422 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.068668344 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069390875 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076685079 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07148442 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069516085 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075987892 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069272121 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.071762666 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.060755889 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079208214 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062104927 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070624822 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074647414 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.063726655 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077372009 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06003698 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059104682 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060342829 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09700343 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063465751 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.062744751 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.061767596 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061037762 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.063030096 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069956653 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.068763467 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067683084 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06591319 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078460409 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071777804 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.060731343 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072402361 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.079405426 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062602717 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061650616 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.078056237 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062791601 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.060195788 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082763468 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068114386 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06351092 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063694115 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062964257 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07569793 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063706012 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059249675 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068242833 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.063700502 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071456145 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.066431859 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068262703 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.061075396 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071838477 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.067980489 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.063653292 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058887329 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06471461 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.062418649 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059283601 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069878445 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.061453447 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.07642824 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066001008 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.074306653 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075765481 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.070314261 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077926033 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.060533501 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058610467 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.078961147 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.066650192 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.059915514 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077710591 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.057862293 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.201011872 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062600419 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065830148 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070812639 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060963993 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065262418 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062027594 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.070964843 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.065392338 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06453378 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064364121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069379162 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075360805 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.063791218 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069656351 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062752056 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075111686 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068933162 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063417477 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064881732 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.062292779 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07316212 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067145321 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072145472 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061012176 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.062916135 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061924235 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071222545 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069770939 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063524563 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.071290624 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063494221 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.06131427 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061926354 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.06368226 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063561025 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066459556 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06295331 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069435615 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071245175 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.076913319 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072232547 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071027075 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061412018 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060861335 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064263588 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060532602 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065445985 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071745249 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076259965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072813105 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079190865 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060198775 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067965416 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.061694284 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075855955 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070890464 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.060813954 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066833358 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05957991 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064374661 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070936132 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072320424 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075408875 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075158558 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065049941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064435478 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060202937 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072466467 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060315879 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067104843 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069636639 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066059878 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.06074585 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064996034 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069897572 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064817292 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.061321485 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.078072328 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07172124 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060414205 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075044607 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.062558106 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.073563336 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060449897 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063434631 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06473965 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065295896 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070714017 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079521751 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059424504 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062781932 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080230597 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.063980556 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064296754 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067830981 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.076462646 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064931625 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068363721 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070108396 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068989898 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063905148 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0686841 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063224798 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.071738491 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.066492671 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072532133 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.061581603 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079338651 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059236391 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.077721397 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.060843631 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.071686149 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062864128 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070042357 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.062365427 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.078262052 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.063492479 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.062916718 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074193759 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057553808 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068980131 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058177991 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.062399334 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.064723172 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070410106 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06217999 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066562907 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060488186 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066051742 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061879314 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.065901671 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068164962 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.061412134 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058183172 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066825477 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.207000242 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071013264 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065707291 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.064721955 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062483859 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071227373 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062673218 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061953619 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06864642 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064962435 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065797792 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06472635 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.065624854 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.064430931 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072508881 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071626118 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080385105 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069264008 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068188611 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072501709 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060836837 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08035126 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.061684753 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067855217 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060702646 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.071665915 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072200637 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.062645703 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080866414 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064986661 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069346372 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075833299 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067648376 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063106167 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081876105 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064551626 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068640519 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066865098 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06268868 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067230326 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.064751578 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06931492 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072559013 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073263588 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06317028 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06920453 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070647053 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065242554 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.073118476 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.063964402 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069391412 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064670836 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059129307 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064858316 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.070289836 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06394503 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065205759 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0601838 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05860816 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060726056 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070390985 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065555758 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069272956 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075313452 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059646818 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.063406013 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.060801413 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063644835 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078913372 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068502479 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06655757 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065816271 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060141114 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063842683 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.064494253 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.062420864 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.066747924 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060474956 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060515281 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070884485 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.064252622 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064290326 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061754215 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061779875 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067540336 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065635876 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061790022 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066249053 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.061924431 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064704491 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060184844 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06391634 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064614329 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059991123 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063571648 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070432788 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.077851483 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066028947 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068999518 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06459878 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06866226 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076749973 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.07111964 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064221888 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069802169 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060004308 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.081903833 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069564269 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068740743 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070568341 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064015505 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078719887 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064126375 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071097133 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.079175314 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062884512 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.070274597 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.060023114 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078725458 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065998829 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.060099145 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068316003 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066879066 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064944604 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075175155 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.062496561 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068849504 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067164121 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062282274 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062556419 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.062775053 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067931835 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076056831 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.061197294 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06531399 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.20659042 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070536141 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065838207 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074756263 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07006618 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063912804 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065056811 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063665659 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063867318 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07438796 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063000161 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06617607 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06436336 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061231434 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066641807 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077273769 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07236116 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070821718 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060531887 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06126005 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.081792853 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063407325 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.066455422 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069096689 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070349498 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073700028 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072704961 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077574387 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.060918301 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064452118 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071405164 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061643666 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.0601759 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062519993 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061989863 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068240707 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069197598 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066657112 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064931423 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065319413 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071417371 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062964152 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064765534 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.069629005 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.06384643 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071252883 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069418182 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068397587 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06197719 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059449195 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062120715 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071239472 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068191431 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071293057 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063349487 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.072875107 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.075649527 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066101765 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064452069 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058888351 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064621399 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067666834 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.065897959 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058845496 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064592487 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063214557 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.071217731 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071678216 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064432205 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060421209 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077861713 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06706884 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067996923 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.06369477 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.064859572 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062532425 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060603284 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072067653 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060344134 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.064541818 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065019623 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.064507094 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.079640719 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069283723 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.080373709 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063370725 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064557437 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060431237 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070335579 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064887097 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061747241 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070903128 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060118448 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.079815433 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.073966933 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.070565373 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060608148 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064560631 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069744343 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076719794 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070522045 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071687684 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.066505577 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070884703 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.063942886 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.071872386 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.060816649 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059739567 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071648173 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069036328 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072156441 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060445535 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070849081 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.063839716 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068093476 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068906832 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064025235 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063986141 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.063626303 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06984745 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064741978 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07028012 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064217211 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07890689 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062600596 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071024775 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069566474 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.071355558 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07402333 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074953071 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071150375 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061496558 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066923663 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067815435 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062113184 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063600419 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.065142573 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.085747356 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063228417 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.063690841 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.0750026 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.070664619 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.06146278 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070768655 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063222279 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069706184 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061706258 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069041748 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.066722074 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061761599 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063366696 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063519167 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058217781 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059379314 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059779376 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069396985 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063405014 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.061010541 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078747317 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062290628 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067799993 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070499468 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064892296 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062495113 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058532413 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063304388 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071326738 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.074143995 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06282401 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068231814 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063659115 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070276515 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.058956179 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06853666 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070187979 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06795247 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059508006 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060823012 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073941516 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.074111973 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063143644 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070215054 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069323075 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062084239 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082785889 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066305452 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059920777 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067857398 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060471928 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.057300397 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.056710184 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061145403 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069505542 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.057832625 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061045266 seconds)
  done (took 41.810279163 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105894954 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063001073 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063151321 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06342241 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076149844 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064194591 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062285843 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063519021 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063502264 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065906571 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06210135 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061956238 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075427077 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078854374 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075089361 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067559191 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061829832 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06312722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061634275 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062655326 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07339214 seconds)
  done (took 2.86743688 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.068766724 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076106077 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073883362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07957361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070074414 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06708088 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074139249 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066820091 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075579514 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071975439 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075384783 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066842492 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072760389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07238174 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072519625 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067159384 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075266812 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070261558 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067362055 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07443354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067384157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074200707 seconds)
  done (took 2.920262168 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.062063652 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06077423 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06892693 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060814987 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.06072748 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065791891 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.06045621 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.063767185 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063953566 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064444773 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068812093 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.062034891 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060494517 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065047307 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.06024506 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061575577 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.105797653 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061963347 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062961897 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.060538627 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064167733 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072302076 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060469696 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061052065 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.063867892 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.065512169 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060909354 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06414726 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.061540132 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064886207 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.062667201 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060455752 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069235831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07122976 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064453774 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064456658 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062379947 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065005829 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060792861 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.060398314 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070225728 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.062417752 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.061204156 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063899884 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071041722 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.061415681 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.060530434 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06887574 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061265219 seconds)
  done (took 4.505298355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073738068 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111661358 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06711584 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091783013 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076079992 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069503657 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066306318 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093112176 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062939341 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.063656464 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077649503 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077213702 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065045197 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06716506 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068405083 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065259343 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066631801 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064463386 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068950336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064650275 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068968449 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.068243209 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076328251 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076438805 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066308988 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064037391 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064226023 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067752133 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076270714 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069721113 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067547556 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068225595 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077046928 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066892886 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06503907 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065098126 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077774349 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065131302 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065195091 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063156784 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064363311 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066963705 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067948116 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077647282 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065075376 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068599801 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065219034 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062322092 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075581777 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063172373 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069577285 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.076607524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066595731 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065407121 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06705482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07693891 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065171552 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063525643 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065334542 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075535769 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061396927 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066268047 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077562401 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064426093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069317662 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077728803 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068361372 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066283565 seconds)
  done (took 6.25921614 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070242673 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.09216229 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074824578 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073833606 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072709313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072495437 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072815422 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073083547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072783449 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073781326 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072792256 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121768445 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067223275 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079902124 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072900258 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072730747 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072791578 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072447623 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073017342 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07246925 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072717593 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.0735813 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072458389 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073237625 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07668585 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067436763 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072478713 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072403927 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073219337 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072410412 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076711452 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072535461 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072934543 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07379528 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07665133 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072463007 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061941133 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072800005 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072644643 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072535737 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067520332 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073533985 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072552979 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067375847 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073068011 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072551528 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073766183 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076445323 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081209667 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072651048 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071177768 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07199217 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070619921 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071632992 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073852444 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081615032 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071884548 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071634047 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07065513 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072472208 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073863149 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08353263 seconds)
  done (took 5.970387198 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075808644 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06830956 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07990018 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062114078 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059240315 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070701029 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060757101 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060807049 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069657743 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.069479177 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071978616 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071204401 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073911238 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07147863 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071237979 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073798528 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071146533 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070899107 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069688233 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071070052 seconds)
  done (took 2.76604824 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071691139 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077168533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065530324 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069873508 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065955429 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070917116 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065543798 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067499261 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066948054 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067004492 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072853612 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073110514 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067021839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071073474 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072856104 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070895696 seconds)
  done (took 2.478789883 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.065685221 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06915838 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075920416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061207699 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063991874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060065668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061408269 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060424231 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.060959713 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075614025 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060750274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071426843 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061808836 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061017782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062027376 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067459479 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061496935 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062289276 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062026953 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075300908 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068663834 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063531178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065855722 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062104212 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067338063 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069634518 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064238196 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065081188 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062304023 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062570399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067614736 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069378479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061859429 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062964852 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06080533 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062458231 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.062304212 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062600339 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067788757 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062061651 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060910882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06672299 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062331637 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06341484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.0612019 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0626143 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06127301 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067654972 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06297913 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067282701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062309003 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064677817 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062774905 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070221549 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.065502558 seconds)
  done (took 4.91715212 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074621455 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066700007 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060929938 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060708943 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066273262 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066582297 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066630814 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066304759 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066796448 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061135205 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066332337 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066130447 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06645624 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066537468 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066558099 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066659634 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060570977 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065766854 seconds)
  done (took 2.558845395 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070105923 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06555996 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071356305 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065844237 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06582793 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065461487 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061526755 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061043335 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061553773 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065399179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065760159 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065440659 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061360787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065195683 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065368328 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065590293 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065495121 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061258358 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065487811 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061146463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066299774 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061681899 seconds)
  done (took 2.794972272 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094341863 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083991743 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.132478092 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078977966 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.087654123 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071500458 seconds)
  done (took 1.921776645 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087963438 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10442982 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066478649 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066584057 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078791251 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070134115 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070262037 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070693661 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079025107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076131081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070679148 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08120093 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079232155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072817388 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07879659 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082694318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070407495 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070138446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084194978 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082016911 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070303867 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079119679 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07038913 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07020444 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070058178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072263531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081891886 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075987765 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06979584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078699225 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082277435 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070247622 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078609368 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076402646 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066012636 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078915205 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070240993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082335288 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078900035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072540324 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065748444 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079053298 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078193499 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072161641 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081928963 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069852417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07190303 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06817536 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069091651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085611312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079192642 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072328653 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078222413 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081059626 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080395702 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083680257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076100404 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072531607 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07865449 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076017178 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072408025 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078721343 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072184262 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07593518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082087413 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072428506 seconds)
  done (took 6.386483231 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096164268 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064372284 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070221945 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076327307 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073338166 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070439627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070357943 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070266842 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070514741 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066089478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070985018 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072855701 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072377186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070537956 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026086 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070202102 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072535709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066295416 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085857317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070553856 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072904825 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07273178 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072778796 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076598293 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081943191 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070238366 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070140088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070339756 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070257398 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072815403 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070130338 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072769092 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065932177 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072399964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070151249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070102401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072671206 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070088141 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078953036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072516807 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082464434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070161758 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07026147 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075921036 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070249497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07014794 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065891742 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070331983 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065848972 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075227069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074076351 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073752383 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070730505 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070056841 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070526597 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069398755 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069949492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070209263 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082149318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072227286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070135506 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085488265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069831254 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070317138 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072408889 seconds)
  done (took 6.209895249 seconds)
done (took 127.242524091 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207742563 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181654077 seconds)
  done (took 1.750120981 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070657761 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103111462 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081428722 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133186042 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068064502 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102784395 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101089639 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080222345 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067845229 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069808881 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069892021 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072119822 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135957096 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068584303 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068622706 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072369324 seconds)
  done (took 2.748575338 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102238234 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.190392964 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109696954 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06783747 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105845759 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07707991 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067792546 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.084394891 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073675975 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070785149 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076673461 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074532203 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070671447 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074832969 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073104329 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076978127 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070495015 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076630476 seconds)
  done (took 2.927804655 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09114761 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083285202 seconds)
  done (took 1.560967207 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156569545 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.130408701 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.198279491 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333366045 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.146725242 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.289351857 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134230841 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.131978667 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111618624 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.125250582 seconds)
  done (took 3.136883428 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098148121 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.167339402 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299314904 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121399364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074075779 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.089309096 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.123903486 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080397761 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080213603 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079915471 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079561134 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076701507 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097716859 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07619872 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075345751 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076560859 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100874582 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074392414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074323289 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075923239 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099484317 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068308487 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075903985 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074302157 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077475071 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077384417 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069495832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068418736 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075534772 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074277031 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079084877 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.084574367 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07721367 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104510461 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072242796 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105863272 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074533805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072843312 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074098123 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072763138 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077013248 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076928176 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076658373 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07617866 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069261079 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.074686919 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069419811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067832768 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079103239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069431401 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080174924 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078354129 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103646223 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068022621 seconds)
  done (took 6.07658461 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107486716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107798561 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071429666 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115460558 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10823345 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072591013 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108216951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102566954 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111380698 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073404963 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070474432 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07299462 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083275507 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083767042 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118450347 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110008927 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073105669 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071846821 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108577822 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107418746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068034029 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102911882 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098062568 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107372343 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066917749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070571121 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067590198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070197053 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07588877 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079076399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070943114 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082030738 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087690347 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075971673 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066926273 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070151559 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069460149 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080716576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079837169 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079237078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078302995 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069414017 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069817627 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070977296 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071705016 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06905783 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078369646 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080761311 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078989702 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070594208 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072376167 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070236924 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071313904 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080352634 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077972122 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080311969 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079485641 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06981593 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068302867 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07286128 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077727663 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076548747 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07828369 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072839512 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078979774 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070298517 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083786902 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082924707 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068390842 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071091246 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068975042 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070866551 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07108716 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077093873 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076988356 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072493666 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070428439 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070237639 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079630803 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078204452 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070044509 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076145418 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068701895 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070449017 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072047082 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072011134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076977652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080314891 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072380136 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070561108 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071270477 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069116023 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067227757 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075847051 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077993372 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077761977 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078273005 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07143612 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079524715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079481582 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072546382 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080363515 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069977336 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072286605 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071548105 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079144918 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076978537 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079109619 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07018829 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069512964 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077498751 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079475075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069868051 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077319349 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214795793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080796418 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07114838 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083243122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071017951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077381088 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069180386 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077697474 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069051326 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080302289 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071135333 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069963452 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070490491 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079874603 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073285162 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071341114 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071787055 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071868923 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08024609 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082133379 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073447698 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078853289 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07887361 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073024601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079105652 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070735 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078918995 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071945671 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07175802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068874827 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082246249 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071320468 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071027196 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071367374 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080124988 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068759216 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080505763 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078521968 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070153884 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083302038 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07843832 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078246064 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08033126 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070776167 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06945272 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069788923 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071062994 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077956334 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079894681 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071745158 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070662079 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078303941 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080867371 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069323949 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078336982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078618229 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078664156 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070610373 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070229306 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081131654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078888184 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077527858 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075628641 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077405838 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068426459 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075159198 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075645116 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068333317 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083034902 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067982658 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083415451 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079082619 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077363367 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078682994 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0803182 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080642688 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081506226 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084210506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068389933 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067934343 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078816085 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069974838 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07167942 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078850643 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07237851 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072405624 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084539346 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068435608 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079093938 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069872288 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08023672 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069113512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07230654 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084828854 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070345673 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070276325 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077422941 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071124946 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075874646 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077049363 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076142631 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067258453 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069858729 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077267075 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07759949 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070186228 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06954492 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072563681 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.077085898 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076012199 seconds)
  done (took 18.763296574 seconds)
done (took 38.363741877 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.220884697 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163424754 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199914677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1207535 seconds)
  done (took 2.194955568 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110402597 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100312022 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087643956 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062446806 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093550403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06244671 seconds)
  done (took 1.94138283 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.309836404 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216558396 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.190572151 seconds)
  done (took 2.135885974 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.225108395 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205184128 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.463694485 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290395593 seconds)
  done (took 2.713372105 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142042897 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.083033957 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062344048 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082242174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.130129349 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.37754051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093412783 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.118665142 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073312214 seconds)
  done (took 2.646560651 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.140123453 seconds)
done (took 13.217472511 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119289327 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114291801 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.214741779 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076953501 seconds)
    (5/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.206543528 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070790496 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.144194435 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067178896 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075768018 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.208077985 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084944809 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070322162 seconds)
    (13/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.184189366 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075328961 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074991676 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094855997 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072936985 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.203945086 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.073885469 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073431267 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.179999338 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.222655137 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.197096376 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.172964344 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073520229 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07131501 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.13871859 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201616111 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08452559 seconds)
    (30/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064066033 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073658734 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.118657936 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.237402365 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069023899 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073187382 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.226556663 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064029964 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.081101341 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.207922341 seconds)
    (40/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.083801905 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115036272 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.231205041 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078835745 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 0.150501875 seconds)
    (45/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.141412829 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070190612 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.169143223 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.214747782 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126941665 seconds)
    (50/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.146730884 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 0.065953308 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095174569 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.18230028 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074736159 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130787184 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063087981 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064050824 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.207171183 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06363932 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073741829 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.083763742 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186218838 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072677135 seconds)
    (64/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.075668786 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208607346 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.063328075 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.0734363 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063465439 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149773811 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184305647 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06614776 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088390558 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140180065 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.166288097 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136221811 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063677454 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075514441 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063566039 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06401539 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063698618 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200512634 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083032647 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.065527523 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076795344 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063986654 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.083749515 seconds)
    (87/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.077439649 seconds)
    (88/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139663392 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144261779 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068195026 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 0.130293696 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.341103509 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070552809 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.224511317 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079313835 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170917821 seconds)
    (97/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.065423317 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194972726 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.108576834 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074177231 seconds)
    (101/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.074558854 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072347989 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065451255 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214833828 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122102683 seconds)
    (106/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.170658266 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071116596 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065027544 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229060005 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075042284 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071054099 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066447862 seconds)
    (113/309) benchmarking ("sort", BigInt, false)...
    done (took 0.247604905 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171787379 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064727096 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130704269 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133272753 seconds)
    (118/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.137408179 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078397669 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06512572 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192573095 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.064481974 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074124958 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068175402 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064775708 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076614703 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074070577 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.065750683 seconds)
    (129/309) benchmarking ("sort", Int8, false)...
    done (took 0.188038816 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.148483479 seconds)
    (131/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.142864874 seconds)
    (132/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.072454609 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083330611 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.119095077 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063297316 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083613408 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065407765 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072647051 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108702571 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073096723 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064281385 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171059301 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076722567 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092965972 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125529868 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064339237 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073430052 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071315251 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093918396 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072870118 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13323003 seconds)
    (152/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.079197998 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061700891 seconds)
    (154/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.073809605 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071261896 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072630715 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072725305 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163477339 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18291601 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166446842 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066992912 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.064081801 seconds)
    (163/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.066046797 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144415917 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065211677 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.145500092 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065894049 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064011632 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064477334 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063802326 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.141036787 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065733198 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.06410758 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06516628 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125249997 seconds)
    (176/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077985828 seconds)
    (177/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062460193 seconds)
    (178/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.244119634 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089856791 seconds)
    (180/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.12135031 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12394638 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092511177 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161027364 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06381001 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092721973 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.198767688 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065929597 seconds)
    (188/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06516861 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140155717 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06683129 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065425872 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063438983 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065463551 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.064977762 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089757281 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089748211 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069315802 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.061110764 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061710306 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062005055 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078195541 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071413401 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156171171 seconds)
    (204/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.067761598 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064307267 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065891832 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065030272 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070620078 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064023959 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088428634 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.062521118 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.136894276 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061715868 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064607588 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071714667 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12883223 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076555165 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.169710222 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.108766282 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072385265 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064827762 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084566012 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133597561 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072794482 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.076162991 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.159349577 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.06451471 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.065279809 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063614203 seconds)
    (230/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.147290189 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071993078 seconds)
    (232/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070037243 seconds)
    (233/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06506462 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064801822 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063942664 seconds)
    (236/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.082038631 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.065285151 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066240675 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064256203 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069718601 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082707634 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061087445 seconds)
    (243/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064902177 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063171417 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.063107101 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066332236 seconds)
    (247/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.063689901 seconds)
    (248/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.068266432 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064902015 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063167876 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093506892 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064917367 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087731591 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067782063 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07030142 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086459767 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062268035 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068773621 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061614385 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061396265 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063482988 seconds)
    (262/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.062919402 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180181499 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067411672 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090011379 seconds)
    (266/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.06059141 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.074955165 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068151555 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062192308 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.060578523 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070029413 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062633351 seconds)
    (273/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060429832 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060706972 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06270905 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061418991 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072263816 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06129233 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062284695 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06467083 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087894136 seconds)
    (282/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.062785513 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172467894 seconds)
    (284/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062412888 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061492302 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086147635 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118794859 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.062444238 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06190216 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062146269 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.088928168 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.060766893 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072532361 seconds)
    (294/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06236174 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.061447056 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062433796 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068234623 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.060646505 seconds)
    (299/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06238066 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.063122874 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170730575 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086943973 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.082998165 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.128093209 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073591873 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.0611141 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.061846964 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 0.128594242 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063285262 seconds)
  done (took 32.505012255 seconds)
done (took 33.941836014 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092844641 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100579075 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07696655 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098767283 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086493286 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.1034987 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077424773 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083383948 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086464814 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085531852 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085880329 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.076883842 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080043446 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080597978 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077849598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104513317 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085019843 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.078776089 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078196685 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068798031 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078298608 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068402883 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067914047 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.075575697 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080915895 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076587407 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079028298 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078311287 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068375889 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067990553 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072622635 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076922258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067136972 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080823593 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076590971 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076382443 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07770397 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079612574 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066667614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.0669396 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077053422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066275588 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075436091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073319751 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071452378 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073153252 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075519234 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079265189 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100776363 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071651352 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077352205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079314789 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07961424 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071896181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071623524 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075409643 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072851773 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10017146 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07593004 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071354739 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076846399 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076441025 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072793055 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075692599 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075527756 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077667365 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080732774 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072922639 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076876003 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073292819 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066230482 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075724835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071217776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069045158 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078416323 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080402275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065983366 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071037343 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076364441 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075997774 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066950841 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070733269 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066412115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071301141 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070326771 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073024094 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070343442 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07210203 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063868798 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073406176 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.0719644 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072755346 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064163615 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077867391 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065402272 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072592638 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066457325 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066186003 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06582649 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071646923 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066573236 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070499489 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07544976 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065454584 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070847686 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080606104 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066423875 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074519291 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065564258 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066393588 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078097075 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.0774194 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066228355 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071131069 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065727277 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072009862 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066400586 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066372057 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066231962 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066131624 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070744663 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065776397 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070338721 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071581441 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079681025 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065890354 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070480595 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070146588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065785738 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072795663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066022759 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066106661 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065369565 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081114646 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070339112 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066094045 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07124416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070379224 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075201194 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06497822 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074928049 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071905286 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070435112 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.07234326 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065606935 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077608013 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070818881 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07026816 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065637811 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065780561 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064743216 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065677319 seconds)
done (took 12.998041555 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066918987 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.113053453 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.08212448 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092611689 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.079859944 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065128084 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.069819411 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08494681 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068208012 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09038801 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087537256 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086401707 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.103164299 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063550357 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066110253 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067281555 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.065564721 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.073006056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.092983224 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092074451 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.101206049 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066482764 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.076460344 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.084662662 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.078894903 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087526552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.065033079 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065232031 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066574904 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082247395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089676453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063845476 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065679332 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.083642704 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.080963707 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.07760909 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067062038 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.072296373 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067264646 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06601564 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068004302 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.085341001 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.072532021 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.074988661 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067735994 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067875515 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067414296 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.072221603 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.079569845 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.072281639 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.076870022 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.082415718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069718993 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066701847 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065127569 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.073155809 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066861415 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067995905 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066957315 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.066780661 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06682754 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068736532 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.067783813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06739469 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072004742 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.071419103 seconds)
  done (took 6.50519739 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085749862 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096093443 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083689979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083718004 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065747574 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066485988 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066758451 seconds)
  done (took 2.139276627 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066400523 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091574172 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094340701 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094780266 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085532975 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094128975 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067012663 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10139335 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065731692 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090178653 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.126207253 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09619783 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071891168 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079916201 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066771419 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.08398214 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066714689 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077568539 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08610713 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095299824 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072098522 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094951434 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080290465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067271939 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.102851891 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.078654102 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.066617631 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066748609 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067972358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.067940258 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067965799 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111118059 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.077698976 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.0802267 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067159924 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.066448644 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08096432 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070271153 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.07835028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075182229 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080799148 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068121139 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06595491 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068548231 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070868321 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078883657 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065664066 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068803812 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068268732 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089292473 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06557226 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080512731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072071558 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073521762 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072780432 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072538325 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077105081 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068150165 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089883814 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.07537902 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067949485 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08622733 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085312779 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080815558 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085419104 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.071953316 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080097013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081078573 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068140758 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.069001089 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068275317 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085737117 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.067777902 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.068845577 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070171277 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06870726 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078610389 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094084884 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095473489 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081598736 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066235304 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066515407 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.077888468 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093540788 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072914987 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06793879 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070497336 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065976868 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071495989 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068856852 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072849741 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068004275 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.075965095 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.069595108 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07151188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085573785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066786025 seconds)
  done (took 9.07947217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067948021 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066858296 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068725472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067132706 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067363422 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068727048 seconds)
  done (took 2.022668263 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090900734 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067042123 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082708206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.069443041 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10970107 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08403253 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08442799 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079580111 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.081633183 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081813402 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084669697 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088088941 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.083336099 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070366244 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084859116 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069971068 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084966039 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.073343651 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081042245 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071030826 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086603112 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070411328 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070966394 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.090103375 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071816039 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069792014 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06801025 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080814537 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080818892 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078939794 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069718852 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071882011 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076297075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075471437 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081881621 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076564699 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066400599 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072402109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067866503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.069104319 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083772994 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.068248057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069172072 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.072627672 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075905763 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074011886 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.072386338 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070523333 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081228774 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072096617 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071978474 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.0671136 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069512467 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07417134 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07591975 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076059601 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072185836 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084125405 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.070098523 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077820663 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069030754 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070544007 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075560402 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069416064 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.07317781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072359697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073954677 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.068256559 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0683522 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068636087 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075169661 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068510544 seconds)
  done (took 7.035930587 seconds)
done (took 28.387773022 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.983478715 seconds)
  done (took 2.55209741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.606339994 seconds)
  done (took 2.207865729 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.51785178 seconds)
  done (took 8.120501395 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.31603607 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.367416263 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.755027444 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136405356 seconds)
  done (took 3.207472582 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707149333 seconds)
  done (took 2.321312505 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.247284302 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234236058 seconds)
  done (took 2.101219029 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.363926306 seconds)
  done (took 1.971036206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105018418 seconds)
  done (took 2.716139779 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260776203 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162674237 seconds)
  done (took 2.03971554 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464889463 seconds)
  done (took 2.077295199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.35131282 seconds)
  done (took 5.972495281 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.241742091 seconds)
  done (took 1.890160342 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.23426462 seconds)
  done (took 1.846939837 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.736329683 seconds)
  done (took 3.349977637 seconds)
done (took 43.990283115 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082510534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083962969 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084041533 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080067854 seconds)
  done (took 1.921451092 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.074713553 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.070013201 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.0751288 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.075404216 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073402648 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.074029482 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.074218842 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07118655 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072295296 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.070987917 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069504185 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.070828925 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.074100108 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.070682398 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.073601695 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07543738 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.070802497 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.071314342 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073744633 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.071026781 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.073744061 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.070738524 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.068783932 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07032391 seconds)
  done (took 3.351444192 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077576038 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071594958 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074913901 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072592599 seconds)
  done (took 1.922124074 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.076116915 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.085626525 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086944609 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09284317 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075344711 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.075802348 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083461829 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.08422149 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065149456 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.090925568 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.069300858 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.066690433 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.066808707 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.088524279 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.087460057 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064268585 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065779985 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.078265349 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.077226829 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.079519869 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068445571 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06616682 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077700325 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.077518081 seconds)
  done (took 3.474368587 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07986581 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06430997 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080109882 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092559109 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093438521 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065506866 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083778241 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093540812 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.147378116 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066290215 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072260521 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066318068 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.110601086 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066612635 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084411017 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110784427 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116608068 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069766299 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102602842 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066279539 seconds)
  done (took 3.3680661 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.085731913 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069852061 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071028704 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066218627 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078049777 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073920543 seconds)
  done (took 2.081082243 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068878249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068138922 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068190218 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06739772 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073119589 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070765539 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066354083 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068177883 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068269614 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067581462 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067818164 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066059178 seconds)
  done (took 2.451028028 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.16435122 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068162607 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068898124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064241133 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071262396 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064865934 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079955158 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066787789 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083474546 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064235514 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064797257 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068844596 seconds)
  done (took 2.560828598 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112141006 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138306024 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098573648 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072906405 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179936169 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099889049 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090991324 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.126406943 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098155384 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068422495 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096585227 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142488974 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098416716 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.100867641 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083687277 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130615447 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114773266 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09032475 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117369784 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081972412 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070316766 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140034759 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069441934 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096114558 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10578178 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.099612192 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113010457 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137804316 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087765914 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.091643667 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085332024 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07801628 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109732094 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084133735 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.098796883 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095487908 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10054711 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088609822 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085699372 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127408695 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170933471 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109743341 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10351552 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13980041 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079162865 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.112137386 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081643692 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101667913 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107366684 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094767622 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076005314 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093711033 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108666054 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10530202 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.0821204 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082233044 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124330525 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.101294139 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100534301 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081759093 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111785 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.096503289 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112928783 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123798674 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145832 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251897132 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145648489 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127491878 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102397582 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.091737396 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094597481 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07561583 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1167628 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102924793 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142174376 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122536957 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104626191 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.098063227 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087429808 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111253851 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119096597 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100358106 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101296683 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154429653 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112754976 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095997991 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098481954 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.141625965 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071446971 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155443075 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090551554 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125872144 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102730807 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14475485 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094442094 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.084724677 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110483659 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112935008 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09157065 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109225486 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087182929 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119383933 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094419708 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108140057 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082907405 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092513511 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087471942 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.098954196 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07496696 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112294214 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120427561 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117517624 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074982546 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111621745 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088107096 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076981493 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095571236 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14636156 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084133003 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076380271 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157601077 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095043844 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.121724956 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11544271 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.085223611 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122206981 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145329361 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094737748 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094546809 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076010829 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.312068312 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077159349 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121052333 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082644517 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105118105 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110363762 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146316575 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146330248 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101200737 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080578522 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09373548 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.111681552 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091147662 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088005727 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080676825 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117291355 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135754077 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.102685548 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084171371 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.096178843 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.072059566 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120123879 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078240126 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086968388 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103239961 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.089489273 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090918875 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148955359 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084996245 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112472696 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100299608 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.069523186 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096410061 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166768009 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083961106 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112609363 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123641657 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086596107 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068262688 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.099663148 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073904405 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114138425 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.095206546 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111344994 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080336908 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115935709 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071218462 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077889467 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143006948 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104003272 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091621915 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.141664556 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113229366 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.091782058 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.10923413 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099006451 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097542644 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105282778 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.110783483 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112311061 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073943633 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134435307 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093521088 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077523006 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091737294 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0793776 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077031601 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10265611 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274782467 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092631575 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105934942 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107227584 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097578025 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.114151863 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094377792 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082772838 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141947083 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080286504 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.078473015 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095390344 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113361727 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094820834 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145433244 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.083491875 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147077013 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097253255 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083126108 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125322228 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071295385 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073479997 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089070168 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095543275 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12074387 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08081935 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081086598 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122861042 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138791801 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10039158 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110474125 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069929406 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098031717 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145526769 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.117779493 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086522476 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118441909 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0906633 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138265522 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106332525 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125433908 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109593668 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119730852 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.096696846 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.084691314 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077028383 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090855936 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115693642 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087382342 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082920866 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067358344 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075143337 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102076819 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093936664 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118557435 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097161749 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143717707 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073717778 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111984372 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112243757 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115493612 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099239261 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098418888 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094117395 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092924851 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093028817 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09571867 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07721769 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135570307 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105630429 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07864892 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091745662 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258421358 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111368374 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118658631 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114560801 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097240497 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11294909 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127407146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10225901 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084661357 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086526585 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.09875051 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.087925976 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082592957 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.110307301 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118778432 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101740872 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114461308 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.096660501 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.095069755 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113026313 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098595243 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09058363 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.122025056 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161622108 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.107244651 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.107198272 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087012957 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111772948 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108450432 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118139786 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.116256413 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11365359 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070794192 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075274801 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071096934 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113774912 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080043343 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123319971 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077625102 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111308385 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103179136 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081797528 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066839258 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104098691 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093198212 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.084490006 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129845405 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.115207184 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074812645 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094742309 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111976489 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085257029 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130228375 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.107624706 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105887139 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072296374 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097029683 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075646132 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114187842 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10472345 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081486185 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076407369 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070356433 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110240984 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086351801 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114158468 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094816572 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104964452 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12517903 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144769271 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089192756 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098614668 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278013222 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121333392 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.085309508 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118165754 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142882571 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.127004221 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085384832 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.087571872 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110019116 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110202237 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104612433 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078187484 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080220029 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113088062 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118429887 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.068490105 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086952768 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073282991 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.090430902 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119312267 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103084532 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084223645 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122961324 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075262 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112578864 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099875603 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130673117 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12823273 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152041853 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099575023 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086266079 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077366163 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130785643 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.072244522 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123414954 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117213029 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090480693 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069186026 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085573273 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100492284 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.632596089 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112710977 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076153921 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142896335 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090493001 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11966633 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087190958 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.122457863 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09619462 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105809091 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094446444 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140268807 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083853316 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114238027 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.17816813 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114818002 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.111185872 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074912251 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085467654 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074647257 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.08006473 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085106871 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089163652 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112482935 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089858094 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109154687 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080384325 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.111216189 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097009084 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246448878 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102471665 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083978319 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146825219 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092029095 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128940313 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110932774 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079850491 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075298378 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.089373418 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105001374 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08362096 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099296842 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079929492 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.082351501 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161065165 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111241168 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086752176 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105591364 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092960508 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.09096937 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093845067 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123764996 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115062202 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07522922 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.090406272 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107426722 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080029474 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075717717 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099232592 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07068197 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093953607 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109508717 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102519131 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095027761 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.107730154 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079452221 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093304638 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114502786 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089448586 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079259978 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0775496 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.078095672 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.076789088 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106942493 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113360812 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119518167 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114420394 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09322534 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100696687 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.079653374 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.221770244 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081945752 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099162195 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.106905905 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075676165 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.137843622 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093791572 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093806942 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10144609 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105582273 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159659634 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074733465 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113909456 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093405902 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114303647 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087799727 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111723404 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100163327 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098270427 seconds)
  done (took 52.413783037 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.095953095 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.151294805 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.161800782 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081023172 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094493275 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121193364 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211374905 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194432235 seconds)
  done (took 2.884389995 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075824017 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.083155672 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106452936 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084016729 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06745774 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075220342 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223508847 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082886517 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067106502 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099528592 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079037084 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066217586 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.454413016 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066373947 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067850181 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078302814 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064807885 seconds)
  done (took 3.577083322 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.392101161 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597508506 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368571499 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076091517 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.023998539 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09072624 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.183959416 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.13929303 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079365842 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550137219 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36634032 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133227912 seconds)
  done (took 18.743542058 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.08045845 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078604 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090872717 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090919946 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07836736 seconds)
  done (took 2.162460388 seconds)
done (took 102.540601671 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079922592 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.175728066 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069834469 seconds)
  done (took 2.027766753 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.093621397 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090732101 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090727412 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.088239341 seconds)
  done (took 2.108068155 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074783133 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076985661 seconds)
  done (took 1.894422351 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24096379 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177143508 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098047634 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082704245 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081460418 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081803665 seconds)
  done (took 1.996139444 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070841991 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074270873 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073166533 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07794713 seconds)
  done (took 2.035631511 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.069608247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066898116 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06930435 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072439732 seconds)
  done (took 2.021806959 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083137151 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082406899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078365523 seconds)
  done (took 1.985661446 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.096321015 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096432218 seconds)
  done (took 1.934671297 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.079420654 seconds)
  done (took 1.816343586 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089468953 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099823917 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132539146 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112520605 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.131316643 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117856493 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08227898 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085984011 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077574007 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.07516754 seconds)
  done (took 2.744316543 seconds)
done (took 22.905530037 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077374735 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36873834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361581365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085148398 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669374566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35730688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030735528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09040912 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.105946162 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06976288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085607965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647215809 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983757083 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327669085 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973854433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330620987 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65131863 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069849296 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068751551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070467017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.9792704 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068741866 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070340632 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069186356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651646429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374157644 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069886409 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329978063 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067561215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068997527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354003543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068190856 seconds)
  done (took 16.31892695 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.06960896 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120210134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07188028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082654513 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069001028 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068723742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071113733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068005623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116384729 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07075203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086973524 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06669955 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070586587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067997755 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086740689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067008832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068722942 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067444581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066832862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0681353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085223235 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066867781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067992983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067803728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068122087 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080466092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068633421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066995472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067139842 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069723649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070704944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068729341 seconds)
  done (took 4.137006765 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119963991 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129501689 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075986836 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104595813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117294458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068999112 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146794978 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093144398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122023972 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068457074 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083757245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06726324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101504884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068844754 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08807329 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067816325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071490355 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068327464 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067108835 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068490458 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08574944 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066775718 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068308879 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067998967 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068301847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082034254 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06879445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067542173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067049618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069984384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071414257 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068555843 seconds)
  done (took 4.410021361 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070785953 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073868446 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082531932 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083335713 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068931991 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070433183 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071081775 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068596655 seconds)
  done (took 2.351066268 seconds)
done (took 28.974152286 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07884302 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068045631 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072600974 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088969311 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074407891 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07937704 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066268352 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075011231 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072850505 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073052533 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077048657 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066872949 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071346303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065720971 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073694699 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067247279 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081292901 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071658381 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080155508 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081049734 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070398164 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07458958 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075749917 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080858681 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080474572 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080449238 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077887884 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073106969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068798254 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070955964 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.070344563 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080976294 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082966928 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083956508 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067780207 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067720267 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072440355 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069356222 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081846224 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07674376 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069451768 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077012139 seconds)
  done (took 4.86511904 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.084850009 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.088493 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082925654 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080137344 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099513033 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082396289 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089414333 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079258905 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077389228 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087981452 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.070905277 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080312682 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079330374 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073596551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078073422 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075022696 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079985828 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074337934 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078211603 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078338251 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08829333 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070018828 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086852748 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07913159 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072253986 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078275092 seconds)
  done (took 3.872892681 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.072088816 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085625008 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093656811 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.152022493 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115230562 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080442528 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081845299 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090434713 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095232773 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066204318 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070289648 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091617544 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093118247 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07478324 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108074779 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081968124 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081453077 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068447993 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072688358 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095260317 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087322001 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083365523 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093432536 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082493429 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065752662 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068340692 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072674609 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080187352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073559015 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07813329 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070224545 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070126061 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066890952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07742202 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070337688 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065337317 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090013702 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077828326 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078705948 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106579926 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075144648 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066787307 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093926609 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128264446 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067910545 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.0720921 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071507248 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079848637 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068834171 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094577025 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081307518 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066856747 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.067441064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067545822 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066615262 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083685805 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069195758 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069194301 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078962064 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075366298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08847277 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070658761 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085419408 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065563519 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075856839 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066485561 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066723795 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064328177 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097073196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07410184 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116806041 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068906926 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066648861 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079832486 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078155592 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074142402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067708267 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086976653 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078970087 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072335598 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07953598 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070601329 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072040843 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099023529 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067121849 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065748761 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066831324 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068778302 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069202319 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066075129 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079209109 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064831438 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.06937688 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.079977087 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065069083 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066142632 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068853091 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06884385 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067355023 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082329364 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07082378 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068893794 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079435688 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069164811 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071662174 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079487389 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073944685 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066372636 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070148286 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071311369 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069378545 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072421834 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072208944 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06957496 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074672004 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075370794 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073651539 seconds)
  done (took 10.861840799 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.170877566 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.161286565 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067901402 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.153009215 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073023299 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079719277 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156782135 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093675848 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066575151 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066943852 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065331085 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.10425434 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.100273321 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.109781023 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078380183 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066381206 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089635915 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.107157608 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15636788 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152598045 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089910421 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.072725353 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068280827 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067310854 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067184947 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07456856 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081554589 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073457997 seconds)
  done (took 4.530758193 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078331464 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090301693 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07019085 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076777202 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086971365 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067040795 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068431108 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067834807 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080398816 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076668184 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066798985 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072094754 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070183849 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069100947 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06684745 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072153391 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073190923 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065523043 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069550872 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071131214 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076055837 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091801151 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071133087 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065658759 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068510054 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065718278 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075920006 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079203146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065813796 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088434985 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063726825 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07083268 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080225481 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066325433 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065682146 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066414845 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065753788 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065906832 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066089048 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064662344 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064589169 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07062956 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065156606 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.075369892 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07933452 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072872858 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067869313 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068556616 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069280402 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06585905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070905031 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070902948 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071417431 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075295499 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.070583729 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.068703165 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06711116 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093997145 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071760976 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.065045936 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065563488 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064837509 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068060074 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077509652 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081917206 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068040376 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064783995 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066354362 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081206091 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081908628 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067623797 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073237238 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065318739 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066951361 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.06854459 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068466144 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067140987 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06455148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065751324 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066325926 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06727925 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065464634 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065530399 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068506426 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064016862 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064515839 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068965746 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067687992 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.075689533 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06554079 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06979965 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066780294 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064580661 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068705062 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07147725 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069502478 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079646317 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078182516 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06777421 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066621279 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083729178 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070856772 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06773805 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0747134 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073130172 seconds)
  done (took 9.244538319 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089085871 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067426612 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083151749 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089554588 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07583484 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072182583 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076981764 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06715201 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08252881 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.06700214 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077735282 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067604965 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079750979 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078429688 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070580568 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078980185 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072216895 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085671604 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082750609 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067663317 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078340964 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08122352 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081788118 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083122731 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082715114 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083510522 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080871949 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073116656 seconds)
  done (took 3.988058691 seconds)
done (took 39.117866233 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.838535561 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.003379834 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.832187766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.034766536 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.063613112 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.852627772 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.034547535 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.830056881 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.93418735 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.875801792 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.179178609 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.310983241 seconds)
done (took 66.611721834 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.893187435 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.99844957 seconds)
    (2/2) benchmarking "String"...
    done (took 2.085549819 seconds)
  done (took 5.847051576 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.09243151 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.481798441 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.091981707 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.830981918 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.836183498 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.256812081 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.621453299 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.275709704 seconds)
  done (took 31.159676614 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.985345785 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.049159241 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.530060841 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.557174527 seconds)
  done (took 15.927240781 seconds)
done (took 64.773071975 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.867609897 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.828918887 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.850002356 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.863333833 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.83755396 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.831403395 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.831680536 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.833678117 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.875057877 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.844992688 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.830251859 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.831433969 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.83013922 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.87245102 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.384423071 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.877988267 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.848991966 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.838880161 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.841147735 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.890874441 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.829022837 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.831045346 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.322105867 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.986741396 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.449971886 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.116532892 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.30035993 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226907526 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.84625413 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.991960672 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.913141865 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.294075447 seconds)
  done (took 206.382562277 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.83529583 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.874193602 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.90791579 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.858955785 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.369894963 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.004971118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.936386817 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.432686861 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.831148695 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.852006759 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.050904478 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.830644786 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.085659308 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.77299682 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.869413313 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.93154599 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.939828326 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.081865189 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.869207588 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.986210141 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.846497993 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.892164486 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.838961603 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.048098797 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.851198108 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.917848358 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.838353595 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.833585356 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.021793324 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.930082354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.840910491 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.881434578 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.019921002 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.701008774 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.838575254 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.853177735 seconds)
  done (took 172.242830354 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.023041969 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.842733408 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.834922331 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.889409183 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.957162771 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.833525061 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.513402806 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.84340962 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.15082531 seconds)
    (9/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.836904398 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.834969246 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.834934824 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.833612917 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.83668796 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.848454651 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.970478932 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.834609825 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.852013557 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.838923874 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.861699906 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.832358144 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.836322956 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.837506989 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.838494453 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.836368905 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.836891028 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.836011062 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.213956344 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.080022173 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.834441433 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.836979451 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.371656564 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.847117453 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.074730797 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.838038361 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.927086081 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.893493239 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.957249135 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.837208561 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.053425121 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.958115782 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.833671424 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.837324735 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.902774604 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.84774593 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.834317765 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.83855598 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.843053481 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.902212407 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.081885989 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.834500433 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.956806787 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.317979717 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.835011975 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.837586867 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.837867462 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.421927019 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.837784594 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.838584609 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.843163162 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842069757 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.834868641 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.837655276 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.223977613 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.908003157 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.837459369 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.461995008 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.43879395 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.840001072 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.0740973 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.84004897 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.95456437 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.833923952 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.838832201 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.837345459 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.839945698 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.837526695 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.840571659 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.959410361 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.846622047 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.961820246 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.919347588 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.956861605 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.841040208 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.847615485 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.660585149 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.909736052 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.872168401 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.660333056 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.840876507 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.214536124 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.597533654 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.839142168 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.83966883 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.852193037 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.835881924 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.837192558 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.839870087 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.919160079 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.836693341 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.959924641 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.558643373 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.43444491 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.837727765 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.841114882 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.846189472 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.83808276 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.920443424 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.957600698 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.843346193 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.90636699 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.841775514 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.839965671 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.975637901 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.837677294 seconds)
  done (took 408.545042307 seconds)
done (took 791.013295462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.48028529 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.450172169 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.543464923 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.469805675 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441791537 seconds)
  done (took 14.154407079 seconds)
done (took 15.925629757 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.855113351 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.845525136 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.898545969 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.921832824 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.853735701 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.863378763 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.928544781 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.858916815 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.890981354 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.891664187 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.924094651 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.924684896 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.862355653 seconds)
  done (took 26.288573689 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.851849024 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.997785277 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.071508176 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.878129219 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.853360381 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.082135255 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.908071998 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.980768974 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.982031586 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.070581847 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.082083515 seconds)
  done (took 23.533237469 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.850343315 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.992728944 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.077983803 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.883676265 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.852520003 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.077987746 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.909713765 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.987604281 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.99398202 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.074078676 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.081804488 seconds)
  done (took 23.563575146 seconds)
done (took 75.159251663 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.844684629 seconds)
  done (took 3.619485438 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.87262773 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.009555763 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.845383442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.843576731 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.844397074 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.844986581 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.842389735 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.844810899 seconds)
  done (took 16.726161276 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.847853601 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.843569026 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.844874488 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.842353192 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.845841545 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.845117809 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.84553655 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.84530058 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.844168993 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.843359858 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.845469844 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.845398295 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.844563547 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.8448346 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.846078346 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.846124165 seconds)
  done (took 31.293318911 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.847682816 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.846969874 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.849018733 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.847312738 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.848329671 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.849005191 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.849230433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.848300314 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.850053014 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.84616978 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.849287493 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.847563839 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.845864763 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.84957997 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.846910764 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.848685145 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.847818353 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.847756782 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.851200411 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.84580152 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.853019114 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.848299901 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.848592426 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.846425223 seconds)
  done (took 46.13893228 seconds)
done (took 99.560035416 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.6049737 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.491877107 seconds)
  done (took 9.873258434 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.849043679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.848707293 seconds)
  done (took 5.540849656 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.846736712 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.847368798 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.852596425 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.848287509 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.849271978 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.849967249 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.848694783 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.848445403 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.848905936 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.848866929 seconds)
  done (took 20.263716865 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.849773311 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.847848887 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.850374608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.848244893 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.848789916 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.849005697 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.847179758 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.851528094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.849478302 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.847478252 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.84935072 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.848745203 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.849126281 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.848551002 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.850134386 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.849568419 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.84776282 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.849477209 seconds)
  done (took 35.05888132 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.851281792 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.851390111 seconds)
  done (took 5.478946787 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.847790293 seconds)
    (2/7) benchmarking "second"...
    done (took 1.851506302 seconds)
    (3/7) benchmarking "month"...
    done (took 1.851674824 seconds)
    (4/7) benchmarking "year"...
    done (took 1.849289139 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.848260704 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.851633808 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.847911745 seconds)
  done (took 14.724695663 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.851720212 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.002462525 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.062681863 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.77722477 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.851663762 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.852503889 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.18676164 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.851991402 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.856238468 seconds)
  done (took 21.070712798 seconds)
done (took 113.784470849 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.67983953 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.847781047 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.11871779 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.905123336 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.856821035 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.142638369 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.879297857 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.129002058 seconds)
done (took 43.33745755 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.934941689 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.848329142 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.872722938 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.873026561 seconds)
  done (took 22.370632548 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.849411512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.182730034 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.870642201 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.714130594 seconds)
  done (took 22.406114073 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.231065509 seconds)
    (2/2) benchmarking "read"...
    done (took 2.192735558 seconds)
  done (took 6.208047997 seconds)
done (took 59.701989579 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.849237568 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.851395332 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.848931966 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.849160195 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.850655475 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.85084094 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.851016449 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.85411113 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.851445115 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.850639245 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.850019593 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.852966736 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.850846728 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849945473 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850865786 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851363774 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849915324 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.851782495 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850170233 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849590005 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.851714528 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.854599837 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.851650779 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.856875813 seconds)
  done (took 46.207765403 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.850827868 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.849956968 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.853078045 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.853734 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.855122927 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.853319068 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.851674004 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.853517121 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.852050011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.850904235 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852080781 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.852225645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.853209256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.85198436 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853689403 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.85339328 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.851779168 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.853916213 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.853257876 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.851942964 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.853886003 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853500291 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.853034732 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.854081383 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.85241741 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853078815 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.854968375 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.854354867 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852636855 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.853594518 seconds)
  done (took 57.36695884 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.854405266 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.856215468 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.853203849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.855238876 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.852878447 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.855331627 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.854179853 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.852543809 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.854379983 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.852367701 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.853887112 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.853524736 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.854542313 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.854139127 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.85488064 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.858297197 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.855877844 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.857543342 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.854576323 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.854094814 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.853147852 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.855027705 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.855127282 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.854836212 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.856027766 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.856435617 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.856754083 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.855178543 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.855329712 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.855395668 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.855384067 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.85311332 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.857605364 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.857304968 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.855136972 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.856528213 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.855529756 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.855549596 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.855877054 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.85852779 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.857990748 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.857141146 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.855778457 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.857640134 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.855176035 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.856746101 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.856858758 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.85709568 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.858924596 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.857602079 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.855795746 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.856111415 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.856280022 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.855147219 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.855838869 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.857124339 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.857930834 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.855223249 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.856202082 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.857391039 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.85750308 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.856637621 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.8580865 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.857538507 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.859721371 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.858823133 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.858587698 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.85922654 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.857099789 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.856474785 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.859518995 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.856628856 seconds)
  done (took 135.419787044 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.857223275 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85763691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.859389576 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.857314398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.857368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.859136827 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859231521 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861667902 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859870613 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.860222501 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860633815 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.859562419 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.85837723 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.859713353 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858967688 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.858890845 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.860065371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859618302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.860390764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.859591785 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.85769811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.861998344 seconds)
  done (took 42.688496636 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862968719 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.859847859 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.859033643 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.859091267 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.859168964 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.86025766 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.858813526 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.859229251 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.859361532 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.858880623 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.859606513 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860357297 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.859153502 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860865922 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.859559181 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.861268333 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862166067 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.861731568 seconds)
  done (took 35.26850795 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.859208309 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.857911011 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.860729785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.858851234 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.860272458 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.860226671 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859945513 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.861208707 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.859910884 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.859703236 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.862207274 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.860173797 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.860677614 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860608056 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863197603 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.863087507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.861986089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860728234 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.860978284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.861868164 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.861434481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862316294 seconds)
  done (took 42.72435619 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860932226 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861116235 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.861525054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.86173187 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.863381405 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.862728849 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.86348847 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.864229002 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.860571033 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.862017666 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.86114209 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.862373426 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.862217747 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863132199 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.862199838 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.862266515 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.862554591 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863415912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86297611 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.865020576 seconds)
  done (took 39.036844412 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.861751117 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.866391752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.864530346 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.863644818 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.862964296 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.863557475 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.863563913 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.864488497 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.863145611 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.86259001 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.864627301 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.861803977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.862695451 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.862283046 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.863268331 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.86519218 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.865561146 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.863497734 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.866849381 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.864951334 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.864456996 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.864420059 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.862690635 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.864533978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.863976005 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.864928469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.86637693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.863819261 seconds)
  done (took 53.981131011 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864640232 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.864863033 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.864880581 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.863965981 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.865172736 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.866382627 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.865982175 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.865158235 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.864719937 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.864558032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.862524694 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.863449495 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865337795 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.86355961 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86214281 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.864861656 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.864236467 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.864260621 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862734189 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863887404 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.862799974 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862454571 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.864301275 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.862673464 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.864183555 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.864416134 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863387637 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.864219201 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862924229 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.867006506 seconds)
  done (took 57.715837498 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.883972029 seconds)
    (2/2) benchmarking "in"...
    done (took 1.887273939 seconds)
  done (took 5.561594546 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.865579115 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865480897 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.865798137 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.864994469 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.865344552 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.865793646 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.864973303 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.863260299 seconds)
  done (took 16.711950336 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.865174964 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.869479993 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.868122093 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.865267816 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.866208746 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873943627 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.86570503 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.86703506 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.869459812 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.867646062 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.870904359 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.872643428 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.875957893 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.871362384 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.866197147 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.867990383 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.868185223 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.86954551 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.867655324 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.86749071 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.870263846 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86692336 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.868245506 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.868123553 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.866921153 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.870045776 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.87679978 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.868758952 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.867079812 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.867831625 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.873378926 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.86495781 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.867817623 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.86679392 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.868536283 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.867074475 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.872605728 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.867135689 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.868176647 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.86981797 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.871316071 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.87008566 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.869319734 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.873458793 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.86846288 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.866505872 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.865643099 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.868731533 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.868945756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.870799948 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.878732311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.868975567 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.867777678 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.86818294 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.870250357 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.868181666 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.869457918 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.870194221 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.876487253 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.876329733 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.870552804 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.889062265 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.877404073 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.867996891 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.868912205 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.878453268 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.897811796 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.871329518 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.871604576 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.86857448 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.875730512 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.867159415 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.869276205 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.867936555 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.881839879 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.879845372 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.870849271 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.869958129 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.870862367 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.869832281 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871593208 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.86983844 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.869895365 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.870162171 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.880780749 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.898932583 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.868348208 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.870576852 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.872911091 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.871145942 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.875896447 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.87390669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.87194016 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.871123905 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.872033744 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.872334283 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.871367081 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.870556652 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.870229901 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.878975255 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.870361756 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.870424023 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.874560771 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.880384799 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.870605699 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.871012139 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.872959561 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.877436763 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.882016486 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.872047913 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.87117068 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.870314292 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.871385962 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.875770417 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.87135973 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.874685822 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.879362178 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.877249804 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.871061696 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.876763993 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.873971898 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.874383674 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.882538789 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.900755167 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.873150904 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.876658166 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.877694137 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.888427829 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.875532911 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.87192311 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.874904421 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.870180948 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.872878723 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.873826725 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.871826317 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.872234366 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.872223296 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.872167491 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.87208705 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.874912572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.873416577 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.873367504 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.874215906 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.87310641 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.876123486 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.871827565 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.875400123 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.878863686 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.872262007 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.872874224 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.873258635 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.874467419 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.872935604 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.873822847 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.873262809 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.874962721 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.87348784 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.872793359 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.87547397 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.873887236 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.874428918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.873849976 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.879853725 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.873320164 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.875295003 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.873083568 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.874580401 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.876033215 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.876380883 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.876541701 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.876194773 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.876056928 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.879087686 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.874316747 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.873889013 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.874568164 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.874928865 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.874354774 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.881476562 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.887581365 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.878878303 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.884605119 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.873793569 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.881779378 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.876021197 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.876720818 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.875844081 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.877010224 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.87696272 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.874321828 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.875941335 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.877683255 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.896771717 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.885390592 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.876406501 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.876402929 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.881240833 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.880137689 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.881186837 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.875371228 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.876492332 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.877332977 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.874850849 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.877665828 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.877315774 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.87768331 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.876100906 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.87519505 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.881500874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.876403728 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.877307505 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.87620787 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.876679159 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.879026482 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.877235222 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.875420696 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.876577298 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.876099551 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.882473145 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.879916602 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.876700665 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.877196784 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.879034898 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.876991364 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.877512227 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.879234833 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.879656396 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.877014838 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.877538898 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.883678233 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.876777857 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.878455496 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.879207564 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.877597345 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.881476617 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.879177632 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.880646951 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.886751087 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.882305944 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.87897341 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.881707345 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.877508479 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.880659998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.879900132 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.879237043 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.878672149 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.880448918 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.878343556 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.876737424 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.883936057 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.877201058 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.879430877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.878394419 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.882746149 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.879306219 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.881272651 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.876808577 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.883004903 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.890377433 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.88390171 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.879279045 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.882507812 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.880544994 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.880837261 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.885024298 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.879190897 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.893400612 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.890987428 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.881271021 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.878732376 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.878382879 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.881783175 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.87879772 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.878981845 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.886547025 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.878937205 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.880327876 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.884576498 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.88159231 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.879112236 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.884526982 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.882479997 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.882862316 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.882740052 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.880860932 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.881346981 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.879714388 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.882982216 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.880600556 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.881260273 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.886547068 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.882285618 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.881077862 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.880691971 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.887193843 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.879993323 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.881731878 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.887244257 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.879893714 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.880886632 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.882231216 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.879915257 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.880498478 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.882384999 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.881167651 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.882580785 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.883282176 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.884945906 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.893032758 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.884007483 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.891263607 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.882758158 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.891871537 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.881503747 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.881091909 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.883791292 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.885665031 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.890882987 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.881882898 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.881245239 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.887154211 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.880731602 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.881973193 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.887196355 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.882494821 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.884078565 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.882627834 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.88247392 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.88813718 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.884823721 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.883804001 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.884731634 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.882117349 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.882696924 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.887642224 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.884622169 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.885290555 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.883007648 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.884798232 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.884802518 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.88325295 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.883383383 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.886392297 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.883085628 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.882442496 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.890277512 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.882988498 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.886912232 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890587004 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.883217488 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.893570789 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.884743744 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.884889917 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.884643899 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.886665529 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.887354818 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.884750244 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.884764486 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.886076588 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.885503504 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.887280119 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.898406522 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.893135002 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.888332882 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.887539334 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.886505893 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.886261672 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.897182433 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.911675359 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88490377 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.886888231 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.888512327 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.892616088 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.887284684 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.891951286 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.888144135 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.894528453 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.888381076 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.886320683 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.893561042 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.899262935 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.885455342 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.88782194 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.886769126 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.89233816 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.887213542 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.886968834 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.888944487 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.889586383 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.887410952 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.897372504 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.888697169 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.889457607 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.888997589 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.886269978 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.889739114 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.886918421 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.887374552 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.887777843 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.887290881 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.88695444 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.887337909 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.890861058 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.885700388 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890978216 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.898837508 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.886478629 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.886583764 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.888070109 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.889332114 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.889763121 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.890021019 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.887868183 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.888247691 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.887198659 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.890264631 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890870281 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.898964661 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890928112 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.888198587 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.88695566 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.893085012 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.887090633 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.888260228 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.887644229 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.894911075 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.892932481 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.901468932 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.900006819 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.888677709 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.890533385 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.897481189 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.899363107 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.889970991 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.88739228 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.88845294 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.891331142 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.891914488 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.889005963 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.890471083 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.889644863 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.894930587 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.889860312 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.89323637 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.889736245 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.889082556 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.892656959 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.894127636 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.895949238 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.891069516 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.891586162 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.890278023 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.890987736 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.892074597 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.893823363 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.89228727 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.889876585 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.891330445 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.890959477 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.895559691 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.889897865 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.89014975 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.891133905 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.890341976 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.891123613 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.892746834 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.89031239 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.891797323 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.892955918 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.898224392 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.890654325 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.891957718 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.889290119 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.894420573 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.892038145 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.891146647 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.893121241 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.89199998 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.897717447 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.890204116 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.891826427 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.892309041 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.891632451 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.895670572 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.892912952 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.895353833 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.89127142 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.892693387 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.890633812 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.895196349 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.903070911 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.898733278 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.894838518 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.901233657 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.897521372 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.894796673 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.893596845 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.891838462 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.891675858 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.892128514 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.896974778 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.895108425 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.896409837 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.892804569 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.894929008 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.895042547 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.893824999 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.893028174 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.894302831 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.89575318 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.903383916 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.899314026 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.893005103 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.895709013 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.893779975 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.896152847 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.904565357 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.892836486 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.894977881 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.894474418 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.895777029 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.893901353 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.905190528 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.904908018 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.897597158 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.894445384 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.899291437 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.912796203 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.895578073 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.904373326 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.927508679 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.895083647 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.894715297 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.895056406 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.89299467 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.893430671 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.898494162 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.894969498 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.905193647 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.896151673 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.894440369 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.901205081 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.8945855 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.895879513 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.897812977 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.896974427 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.901513823 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.895858486 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.903263299 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.894767336 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.896117343 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.89537278 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.895715799 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.894173555 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.898834284 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.896108709 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.898372343 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.895237549 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.896168485 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.903584062 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.897453635 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.898035941 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.908273103 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.904840216 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.897119256 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.895138854 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.898107807 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.900970994 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.898978007 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.894724646 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.905216142 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.905590332 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.899690057 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.909003701 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.895266892 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.896566894 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.894695077 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.893971044 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.896519486 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.905914355 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.906106715 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.894784466 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.895320791 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.901073609 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.893980029 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.901735522 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.901580818 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.894131717 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.895505975 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.894181 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.892545476 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.89334818 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.893998461 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.896699387 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.902589739 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.894241711 seconds)
  done (took 1124.645927199 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.893265305 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.893448683 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.895426134 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.89555355 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.894381954 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.894541269 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892360869 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.894456804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.897628624 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.892940707 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.893426761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.893100791 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.893551717 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.896733472 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892941856 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.89450211 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.894719472 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.89310908 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.894791984 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893072022 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.894295265 seconds)
  done (took 41.596532786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.894292334 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.894274128 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.894087305 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.892332367 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892308754 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.894534924 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.892607329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893076159 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.88997445 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.890575348 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.887944131 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890543869 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.891950195 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.890902655 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892449542 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.88952084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.887735135 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890056652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.889004861 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.887752711 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.887686342 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.890498336 seconds)
  done (took 43.421642448 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.890137782 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.887986726 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.889517469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.887302053 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.888068239 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.89020857 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.888488644 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.8918519 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.887658715 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.889490271 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.897817055 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.897021135 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.888629078 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.890562344 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.888472894 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.889384493 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.039582473 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.889480635 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.890007006 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.889543647 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.888936381 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.89487026 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.887570136 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.890009937 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.887529543 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.88945821 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.892679672 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.886535485 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.886186629 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.888472566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.893256307 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.887163623 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.883617679 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.889844656 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.886429165 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.888332555 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.891222713 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.891426897 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.887162384 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.889853061 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.895859786 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.91278692 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.88522139 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.885299392 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.890502323 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.885683215 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.885283698 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.889383738 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.89613564 seconds)
  done (took 94.571874782 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.885927277 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.884449412 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.885148897 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.888799807 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.884991695 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.885970977 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.886767551 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.88693015 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.889408504 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.888444712 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.885925756 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.888305364 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.888525667 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.889242553 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.888473966 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.887197502 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.88597905 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.886176093 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.888894261 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.888296301 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.889886511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.891019047 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.890235943 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.889940779 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.889068072 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.890588966 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.887520698 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.88833938 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.888118549 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.890626301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.891143571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.888726487 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.889345949 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.889589907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.8904746 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.883659708 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.888355821 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.89145978 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.889217839 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.889231715 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.891458321 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.889171999 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.888204069 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.888962534 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.888297067 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.890164764 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.888228177 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.888510306 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.886781138 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.889973667 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.890304364 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.887372915 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.888400634 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.888695619 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.887681147 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.887410922 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.890678954 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.888556452 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.889558088 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.888751629 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.887528196 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.895986023 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.888096282 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.889518715 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.890697124 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.890032256 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.894194121 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.887698147 seconds)
  done (took 130.242094896 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891459505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.889342108 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.890384343 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.890681472 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.890486282 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.890474185 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.888248818 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.889241874 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889423179 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.884107733 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.883240937 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.890469537 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886506254 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.883627616 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.880275964 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.880304451 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.880710375 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.878244899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.878336046 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.873899174 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.877443202 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.879134349 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.878011083 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.877697232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.879100516 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.876438814 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87661159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.877809145 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875831102 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.878240954 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8755749 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.875990397 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.874405774 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.876126812 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.879416458 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.873164541 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.875754203 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874339467 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.875381218 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.874293419 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.876457058 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.874310423 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873668146 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.873527305 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.872552994 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.873913474 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.872654198 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.872882739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.873716503 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.873519146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.875924712 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.873432597 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.872909426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871216803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.871928364 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.871751965 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.874085165 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869947596 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871643879 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.871904948 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871981115 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.869745147 seconds)
  done (took 118.259682825 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.871268776 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871690878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.869906006 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.873438718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.871523381 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.869458899 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.870064955 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.869770164 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869791594 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.871043331 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870251633 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.870259002 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871175978 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870609976 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.871453555 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871479048 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867854553 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.870989984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.870040641 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.870599949 seconds)
  done (took 39.207618454 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.86817196 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.868610674 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.869938363 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.869015979 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.875551012 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.867059856 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.8700363 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.870066125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87007204 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.870261859 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.867572461 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.868252235 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.867858502 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.865680769 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.866144285 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.868843976 seconds)
  done (took 31.699745819 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.868470545 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.868201134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.868046297 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.871558939 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.865352716 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.867116175 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.86726521 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.867425385 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.872396956 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.86675682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.868358281 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.867849422 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.867604257 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.870190969 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.870949007 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.865573267 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.866996115 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.867023423 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.868314924 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.86834424 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.865598663 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.865325592 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.867061805 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.867066231 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.867080345 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.866102398 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.865326487 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.868223306 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.864752489 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.865752619 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.867240548 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.864754216 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.866001223 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.864800389 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.865079298 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.868408991 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864530014 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.864534628 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864470596 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.865866949 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.86486559 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.866797006 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.865093736 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.86437444 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.865185505 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.866562723 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.868679294 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.863265908 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.864341005 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.863298748 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.864338742 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.869754921 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.864751305 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.864048091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.865299349 seconds)
  done (took 104.455223116 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864143712 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.870814279 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.864134666 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.865458198 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.865076096 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.865607025 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.868611853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.864648758 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865209401 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.864758389 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863497236 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.865495465 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.863213093 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.863133943 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.863649601 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863555044 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.863952613 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.866260151 seconds)
  done (took 35.360871469 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.86427942 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.863832455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.86352095 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.867057764 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.861944828 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862022457 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.864327973 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863708959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86855138 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861229115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862225008 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.862951127 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863883273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862011433 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864900694 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862195312 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.863611724 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.865216999 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.86259004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.869650351 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.861037787 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.863214023 seconds)
  done (took 42.79410765 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.86422809 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.863546092 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.879683871 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884526192 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.882150078 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.896428293 seconds)
  done (took 13.058362843 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863319104 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862598673 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.8628529 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864505417 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864567504 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867213198 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859333961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863561982 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862623617 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863284887 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864286407 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865516411 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86226575 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862722809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861661785 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861394944 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8645868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861530373 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862018304 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865858081 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862674534 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864854711 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860989788 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862776903 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861979054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861582721 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862078619 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863797562 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861426297 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861691002 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862245581 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862178572 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864272882 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862942951 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86356851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866101963 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865229027 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863927144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862321767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862253534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.863277301 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863511145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861972657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865591513 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862672184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864393482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.863009804 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863594156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864472827 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864029225 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862688729 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866961864 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86402892 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863641923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867856504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863945939 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865078112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864303323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86557891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865139889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865211228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864968293 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865694923 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865865917 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869286642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86430935 seconds)
  done (took 124.795497744 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868153589 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867295568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866809753 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866684802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865676575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866688943 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867157465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865907604 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8728777 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866304269 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863897113 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864238196 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865776584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864486645 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866239652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864506526 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866870866 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868084194 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866083932 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868869747 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865480508 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865264576 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865735202 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866865291 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868269487 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866962756 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868292348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866117167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866537256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867268043 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.867241285 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868011053 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866888609 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.872447856 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865720905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866913379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865301811 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.865291586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866621493 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866608595 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86689447 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866968821 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866621754 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866910043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867498102 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866986006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.871303731 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868153432 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866964816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869659975 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868927441 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870300633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86781087 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870817765 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866941801 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866822083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869269877 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8670242 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866880764 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867981566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867192995 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869209827 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.870627505 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867695852 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868091412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870258936 seconds)
  done (took 125.035797513 seconds)
done (took 2603.611720892 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.920494406 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.078692394 seconds)
  done (took 15.794307587 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.042769548 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.997628223 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.882207285 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.925286904 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.880678728 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.906195999 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.9003305 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.879395747 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.88292674 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.884008386 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.884868352 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.067884198 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.89877718 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.87913604 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.882179204 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.97450205 seconds)
  done (took 52.58365804 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.888126094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.886535093 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.898141468 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.889545499 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.890246326 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.90658884 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.917554024 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.890561422 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.949354707 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.898009815 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.011936335 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.899953986 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.887951995 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.955177869 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.904163452 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.902110762 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.986680238 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.961809143 seconds)
  done (took 36.331627821 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.964533925 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.909021708 seconds)
  done (took 10.688908633 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.914810112 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.911711393 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.900479691 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.907069643 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.890343052 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.915777601 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.888524221 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.881154743 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.909962887 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.898581008 seconds)
  done (took 70.829474226 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.889013504 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.894122938 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.88922291 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.884765479 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.883273246 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.88285693 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.886898625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.881606351 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.554911459 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.92852245 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.894381158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.894203249 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.885932291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.887091466 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.887845766 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.910889691 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.99667746 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.885102561 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.88289191 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.894828505 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.886808353 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.956505152 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.90054937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.887065331 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.923900969 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.551214874 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.898658108 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.893122329 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.996342898 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.886035708 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.885481713 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.095932569 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.891801289 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.363884645 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.164370061 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.892195352 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.898546989 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.897203356 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.886356764 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.012336131 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.889097602 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.894052638 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.849484724 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.142853188 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.984189803 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.933254805 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.214670846 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.900577384 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.888928569 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.92354367 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.892124077 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.889707242 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.906662032 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.408181398 seconds)
  done (took 133.890857478 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.885897498 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.233693907 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05640538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.889267357 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169994734 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086839723 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.887403271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.934941655 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.888966636 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.119695739 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.138072713 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.993303892 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.888983027 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.888321137 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88635694 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.883846102 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.043802839 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.958172006 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.88572947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.887142797 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912376836 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.127088285 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.007624417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.888937378 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.914114558 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.099552884 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.009784315 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.989087304 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.667256637 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.887125675 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950070772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.89183397 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.887609807 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.886769559 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.043735844 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.981699655 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967069897 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.888735161 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.888492875 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.887452636 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.637459148 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.086074582 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.979050554 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.016738782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.137034603 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093060005 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.66622963 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.892657716 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.62161792 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.05372207 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.116866698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.119621788 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.004399509 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.889110393 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.232723868 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.895309635 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.888505221 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.135552592 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.117265676 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.988019825 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.891603648 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.889948705 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.888469451 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.17979415 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.892373146 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.985626299 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.894104535 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.88911118 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.981191456 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.989321264 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.12783199 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.099377814 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.914736357 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.247505677 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.401730267 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.13699763 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.95533862 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.137828322 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.890416098 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.887580662 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.965584241 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.725088939 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.149099564 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.169576102 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.135602702 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.922933086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.610261663 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.890331348 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.115396687 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.117540595 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.146685859 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13629575 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.125548199 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.198443148 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.887838734 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.889996962 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.219942095 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.010152698 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.891086021 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.232650961 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.121515073 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.451798426 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.919454782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19550162 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.020020069 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.891462278 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.529380946 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.890022059 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.119230514 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.931012337 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.891864371 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.892344797 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.109995544 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.882874019 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893011312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.533473622 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.953858157 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.901411895 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126273441 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.895214742 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.161456535 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.893866979 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.126914534 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.992865094 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921040401 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.065859696 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.136765063 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.893587999 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.134738279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.136768033 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.009610592 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.109207014 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.584918105 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.891659908 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.178236465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894037456 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.890218341 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.060169714 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.897677019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.033955733 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.893249085 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.186986846 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911314004 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.12639071 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.892924941 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.144923489 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.365932331 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94361732 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.896368968 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022417992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897552487 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.721524869 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052774363 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.896352969 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.894767103 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.44610882 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.892450792 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.038417866 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.121862437 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.912747388 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966182046 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.552855794 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.895003934 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.974807875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.911656867 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.281609076 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.895254933 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.144775253 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.892748126 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.895413338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.895226041 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.17951257 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.07292505 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.898375398 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.89420693 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.802076912 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.894205799 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895449122 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.076487898 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.221178352 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.893501619 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096366825 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.895191953 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022694605 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.897717073 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.072109629 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.227400041 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.893969756 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.89798897 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.897942695 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.89605503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.897422497 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104996702 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.917589483 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.427985196 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03020119 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.171745804 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.206500735 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.137899459 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.933799064 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.897185036 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.144321343 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.896662178 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.957667578 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.896153644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.913783077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125212638 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.898768728 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104914512 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.16784858 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.877407188 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941344378 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.898089319 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.898544172 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.895302276 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.042662209 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982643671 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.900727732 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.899876805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.010538439 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.01636978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.10459023 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.896686075 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.968200331 seconds)
  done (took 909.11715598 seconds)
done (took 1231.02947094 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.898714618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.899137259 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.902255097 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.89863194 seconds)
  done (took 29.42118943 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.900301657 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.899263469 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.898680184 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.900847363 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.898902345 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.900278541 seconds)
  done (took 13.221476047 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.969082674 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.899814362 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.900663921 seconds)
  done (took 21.59378122 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.975411717 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.284806194 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.040913335 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.310519347 seconds)
  done (took 10.437500014 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.900657379 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.900550272 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.900436756 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.902494967 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.900105678 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.900461299 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.902391073 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.900023319 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.902329233 seconds)
  done (took 18.936318244 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.970205493 seconds)
done (took 99.40182479 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.227849359 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.903202877 seconds)
    (3/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.037279451 seconds)
    (4/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.096384466 seconds)
    (5/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.986081419 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.964805023 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.022483272 seconds)
    (8/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.996795668 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.916783843 seconds)
    (10/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.139096124 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216640731 seconds)
    (12/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.999997891 seconds)
    (13/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.153582549 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.914756332 seconds)
    (15/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.89834409 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 3.831406439 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.984228275 seconds)
    (18/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.260097534 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.064890897 seconds)
    (20/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.921378388 seconds)
    (21/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.17800274 seconds)
    (22/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.347991462 seconds)
    (23/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.276262161 seconds)
    (24/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.01088662 seconds)
    (25/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.911475395 seconds)
    (26/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.898572421 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.543471773 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.219766197 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.990067028 seconds)
    (30/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.640814993 seconds)
    (31/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.921934379 seconds)
    (32/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.385892943 seconds)
    (33/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.249107958 seconds)
    (34/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.962426351 seconds)
    (35/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.069413373 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.209747335 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.006793317 seconds)
    (38/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.901259361 seconds)
    (39/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.276429567 seconds)
    (40/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.277235365 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.512475838 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.90255749 seconds)
    (43/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.981465741 seconds)
    (44/309) benchmarking ("sort", Bool, false)...
    done (took 2.113386017 seconds)
    (45/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.129272638 seconds)
    (46/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.99997772 seconds)
    (47/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.135097065 seconds)
    (48/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.220699629 seconds)
    (49/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.025137001 seconds)
    (50/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.797190662 seconds)
    (51/309) benchmarking ("sort", Int64, false)...
    done (took 5.609310239 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.293778932 seconds)
    (53/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.107768732 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.154841222 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.003179036 seconds)
    (56/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.055069097 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.21208186 seconds)
    (58/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.900069822 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.052624387 seconds)
    (60/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.918357305 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.212886733 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.902989138 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.035811708 seconds)
    (64/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.055696374 seconds)
    (65/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.899321063 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.652988194 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.903209475 seconds)
    (68/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.32188967 seconds)
    (69/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.910515996 seconds)
    (70/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.902410623 seconds)
    (71/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.979363113 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.845932645 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.907694514 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.001462136 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.931929854 seconds)
    (76/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.230797547 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918568441 seconds)
    (78/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.998098485 seconds)
    (79/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.167165135 seconds)
    (80/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.193923202 seconds)
    (81/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.23690391 seconds)
    (82/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.707984818 seconds)
    (83/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.234187787 seconds)
    (84/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.909392338 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.370229577 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.218209203 seconds)
    (87/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.033725962 seconds)
    (88/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.161526844 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.041478567 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.961828926 seconds)
    (91/309) benchmarking ("sort", Float64, false)...
    done (took 5.669219054 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.03208664 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.982844921 seconds)
    (94/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.904314501 seconds)
    (95/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 7.019974584 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.049752317 seconds)
    (97/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.26558352 seconds)
    (98/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.27248659 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.866962267 seconds)
    (100/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.999130387 seconds)
    (101/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.926626009 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.915214485 seconds)
    (103/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.905972815 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.990651249 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.0487261 seconds)
    (106/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.392543845 seconds)
    (107/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.918813013 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.161915947 seconds)
    (109/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.906218837 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.077267782 seconds)
    (111/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.99270773 seconds)
    (112/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.14224911 seconds)
    (113/309) benchmarking ("sort", BigInt, false)...
    done (took 6.908074589 seconds)
    (114/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.118987403 seconds)
    (115/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.906275692 seconds)
    (116/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.013811023 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.904509118 seconds)
    (118/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.043422221 seconds)
    (119/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.910022269 seconds)
    (120/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.919465807 seconds)
    (121/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.098210632 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.141733332 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.930085861 seconds)
    (124/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.965840792 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.150117495 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.195937745 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.927390372 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.90493386 seconds)
    (129/309) benchmarking ("sort", Int8, false)...
    done (took 5.243154 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.914034844 seconds)
    (131/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.115692011 seconds)
    (132/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.994904841 seconds)
    (133/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.926658556 seconds)
    (134/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.997594607 seconds)
    (135/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.292743362 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.910102768 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.100708555 seconds)
    (138/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.938527019 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.032191235 seconds)
    (140/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.056878218 seconds)
    (141/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.989923958 seconds)
    (142/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.018843934 seconds)
    (143/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.162848829 seconds)
    (144/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.827230407 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.908364868 seconds)
    (146/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.284152104 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.164489171 seconds)
    (148/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.934605705 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.575446636 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.947337464 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.909504487 seconds)
    (152/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.778454024 seconds)
    (153/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.929157982 seconds)
    (154/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.039704562 seconds)
    (155/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.935469975 seconds)
    (156/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.931970612 seconds)
    (157/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.044452928 seconds)
    (158/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.013148379 seconds)
    (159/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.911738997 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.141769153 seconds)
    (161/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.912487465 seconds)
    (162/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.728968433 seconds)
    (163/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.863228387 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.912372236 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.910156917 seconds)
    (166/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.094402971 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.913982473 seconds)
    (168/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.327125689 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.248561684 seconds)
    (170/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.271971178 seconds)
    (171/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.377161969 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.913479022 seconds)
    (173/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.177694784 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.911247755 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.14656437 seconds)
    (176/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.459954508 seconds)
    (177/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.300663864 seconds)
    (178/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.695429089 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.929537309 seconds)
    (180/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.966517983 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.915784949 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.988554886 seconds)
    (183/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.011419475 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.047927797 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.516981427 seconds)
    (186/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.293880941 seconds)
    (187/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.058540024 seconds)
    (188/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.020873199 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.919598768 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.042872958 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.009637389 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.39694983 seconds)
    (193/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.286775463 seconds)
    (194/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.039674449 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.883892094 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.247843582 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.987918945 seconds)
    (198/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.066972182 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.231329271 seconds)
    (200/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.060090352 seconds)
    (201/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.590521162 seconds)
    (202/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.924491874 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.916329566 seconds)
    (204/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.051353363 seconds)
    (205/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.916232029 seconds)
    (206/309) benchmarking ("map", abs, BigInt, true)...
    done (took 8.091005016 seconds)
    (207/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.09317994 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.153403012 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.91822374 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.405542002 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.323144442 seconds)
    (212/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.106340108 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.11202682 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.919650787 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 2.148431259 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.052828833 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.245184744 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.126560925 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.051280646 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.578291479 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.983277347 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.808511922 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.917940915 seconds)
    (224/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.9251516 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.309096283 seconds)
    (226/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.794686073 seconds)
    (227/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.919973369 seconds)
    (228/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333223414 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.18216105 seconds)
    (230/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.105262004 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.941843663 seconds)
    (232/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.920502637 seconds)
    (233/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.707236981 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.997733106 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.090691431 seconds)
    (236/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.532286322 seconds)
    (237/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.084285704 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.255323504 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.916650897 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.34834705 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.767484562 seconds)
    (242/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.105421023 seconds)
    (243/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.248715648 seconds)
    (244/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.159407655 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.08467314 seconds)
    (246/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.953159991 seconds)
    (247/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.685692621 seconds)
    (248/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.006877695 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.161433854 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.035202641 seconds)
    (251/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.942742258 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.226712383 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.806223348 seconds)
    (254/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.938881922 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.936120862 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.81108998 seconds)
    (257/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.19151956 seconds)
    (258/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.134305409 seconds)
    (259/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.922796299 seconds)
    (260/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430441062 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.16868222 seconds)
    (262/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.00208169 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.921386999 seconds)
    (264/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.951138025 seconds)
    (265/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.9530117 seconds)
    (266/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.848620368 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.406627343 seconds)
    (268/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.942696487 seconds)
    (269/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.925656883 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.109601215 seconds)
    (271/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.950225327 seconds)
    (272/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.228337264 seconds)
    (273/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.108138399 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.99962538 seconds)
    (275/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.02576211 seconds)
    (276/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.175303773 seconds)
    (277/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.940236829 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.224551525 seconds)
    (279/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.117256911 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.923570263 seconds)
    (281/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.997736257 seconds)
    (282/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.052451632 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.920258813 seconds)
    (284/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.426755225 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.15621745 seconds)
    (286/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.690601771 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.059680054 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.168669042 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.004135084 seconds)
    (290/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.323909184 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.930206526 seconds)
    (292/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.104618673 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.771424429 seconds)
    (294/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.021110179 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.210367481 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.932635573 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.088737768 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.926163322 seconds)
    (299/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.596541733 seconds)
    (300/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.063936017 seconds)
    (301/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.922812879 seconds)
    (302/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.92365647 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.404043434 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.05459046 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.586269377 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.272684209 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.140891476 seconds)
    (308/309) benchmarking ("sort", Float32, false)...
    done (took 5.63770138 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.112569454 seconds)
  done (took 1018.07181275 seconds)
done (took 1019.956620656 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.963133376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.944912277 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.927619808 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.949563097 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.040561159 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.970490476 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.942249739 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.931568952 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.97923388 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.978251714 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.928571074 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.968634316 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.929474216 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.930763544 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.929019522 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.946915675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226463248 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.954530635 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.949426509 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.940924346 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.949365404 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.926699156 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.977898353 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.970159512 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.932541232 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.940828673 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.931812854 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.949713832 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.044749734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.934799441 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.938305056 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.944778361 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.226289144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.949852294 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.928305699 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.952739985 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.943649064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.942682426 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.933554029 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.963440528 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.318702863 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.964377134 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.933614716 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.931939077 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.931466444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.938854285 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.93064451 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.938341679 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.945209096 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943521351 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.315559168 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.979140107 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.934170717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.931981654 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.945216918 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.932532794 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.940978747 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947318447 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.95094663 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94728736 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.220679411 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.967805412 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.935774875 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.950313393 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.94148899 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.349567062 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.962741775 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.939947091 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.319401346 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.971494218 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.351546755 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.975911816 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.934790623 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.94562181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.965670603 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.22965462 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.950255994 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.932633842 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.943052336 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.930003942 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.94679517 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.946872352 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.939820776 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.93413862 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.94759708 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.97675885 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.950025484 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.935112527 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.946142185 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.953617084 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.944247827 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.947253873 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.937559824 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.931573959 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.947299312 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.938399795 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.937177671 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.936475873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.938853528 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.949916522 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.316682872 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.984318876 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.932455031 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.931439648 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.935638801 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.948171104 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.318282288 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.965589871 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.956679956 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.984283797 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.934756555 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.225558275 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.960973976 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.949525864 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.948495152 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.936617787 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.938621523 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225808118 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341922192 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.982068081 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.936824187 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.939383412 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.954512016 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.937731244 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.932574105 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.232704302 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.965536442 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.951626892 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.059396766 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.951787098 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.96891039 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.937446363 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.9431256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.98127119 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.952558963 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.970452122 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.939709676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.950967117 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.954368648 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.932063643 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.948142255 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.952527412 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.936489028 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.944129038 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.933805355 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.981019007 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950494824 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.952926706 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.956173082 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.056666339 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.933870255 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.224447705 seconds)
done (took 303.563678094 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.009404795 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.929260185 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.052017817 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.934354535 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.019957041 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.006558538 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.934458626 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.933222056 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.931761817 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.43569251 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.934588117 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.937774859 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.932364686 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.933116539 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.001642022 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.933293477 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.932369662 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.3821978 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.936078864 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.012638606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.934510299 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.93244549 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.93471895 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.455837313 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.935972414 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.932150118 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.01492407 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.933250392 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.387890001 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.934262379 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.934082505 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.401867212 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.012212328 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.960713865 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.942749975 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.942520818 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.023159466 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.944882574 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.000729853 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.002505185 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.051352873 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.966059468 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.932963735 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.934308053 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.942629499 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.935489418 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.932715141 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.967748565 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.93495523 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.942828744 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.384839025 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.940731935 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.94810578 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.933608012 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.936524354 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.963534248 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.935310977 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.937694261 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.014575055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.935981354 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.005073129 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.444777979 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.441203995 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.935534003 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.935291328 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.935368915 seconds)
  done (took 189.71090496 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.001297309 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.009660447 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.001810536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.941504215 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.98461308 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.002673419 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.939985001 seconds)
  done (took 15.739705957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.942747821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.935675393 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.986547061 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.985615392 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.934952572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.1176317 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.946159577 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.942516158 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.963036389 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.937505676 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.603153046 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.986888295 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.944273279 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.935974565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.949270992 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.000380544 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.939979807 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.937728488 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.053029611 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.086016572 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.942264678 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.943934418 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.964465886 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.95026284 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.93959957 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.936342862 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.937537853 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.945238323 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937100831 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.938079283 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.938304643 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.989981325 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.941360226 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.93915219 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.937038109 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.940155613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.938297085 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.93934622 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.938696718 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.937829185 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.9379607 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.939005878 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.939536701 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.93909052 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.937719439 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.9621031 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.937231897 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.939348605 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.938753601 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.944395612 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.963554147 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.937250504 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.938820313 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.944678734 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.981822559 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.94636729 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.94090297 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.937838606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.940675493 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.93884974 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.938975152 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.087787494 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.988868322 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.939912391 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.988926164 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.091748661 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.939316864 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.93955362 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.940707377 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.025585844 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.940442933 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.98814217 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.938597962 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.062578766 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.939119746 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.118447119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.962799136 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.943162773 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.950956725 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.938701861 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.945362235 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.939861947 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.940173642 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.944261155 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.943712959 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.939062449 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.940477638 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.94261619 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.946152474 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.940418842 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.988111408 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.940833521 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.938629894 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.079072561 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.939712289 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.05376005 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.968348894 seconds)
  done (took 212.748083758 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.946178936 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.945854242 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.939761765 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.955677472 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.942194884 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.940858207 seconds)
  done (took 13.5345466 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.945403416 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.947023951 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.940778151 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.942919222 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.941748408 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.943062121 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.939957446 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.945527948 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.945355351 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.941421594 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.942504423 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.940746014 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.943192952 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.944368099 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.944449614 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.942927681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.942535191 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.940892218 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.94519915 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941121308 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.146933664 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.942585632 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.940489564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.944407125 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.946600978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.939576096 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.955295846 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.941799122 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.941677509 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.948934479 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.94874734 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.943449144 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.947659271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.951028768 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.94651377 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.947827244 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.946361519 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.945978063 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.942025722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.94334914 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.945242863 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.94267479 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.945709376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.943625597 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.946555502 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.950906245 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.948128206 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.956411162 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.947328013 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.946377336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.944888375 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.943580068 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.945962743 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.943788714 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.94863945 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.950358465 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.949351837 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.946006998 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.944609816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.946096753 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.94816279 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.944587197 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.946448294 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.948319863 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.951845903 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.94768853 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.94747687 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.949023451 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.94446178 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.942884152 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.947508503 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.944757869 seconds)
  done (took 143.137525769 seconds)
done (took 576.741987043 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.731899402 seconds)
  done (took 9.600891684 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.132687269 seconds)
  done (took 9.117800959 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.232799866 seconds)
  done (took 10.107184025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.979408621 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944961511 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.948256308 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.944142809 seconds)
  done (took 29.701538392 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.311975966 seconds)
  done (took 9.182088097 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.969855927 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.94187196 seconds)
  done (took 15.850693679 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.013315112 seconds)
  done (took 8.887197264 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.294876149 seconds)
  done (took 9.169400273 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.96644704 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.947313522 seconds)
  done (took 15.802851182 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.945133639 seconds)
  done (took 8.812605472 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.237195806 seconds)
  done (took 10.188328588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.962654344 seconds)
  done (took 8.901992064 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.953978439 seconds)
  done (took 8.823796049 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.912075896 seconds)
  done (took 9.778773665 seconds)
done (took 165.792675901 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.960913108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.942752039 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.939580742 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.940688556 seconds)
  done (took 29.651057539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.980522833 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.979506274 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.988997681 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.979537319 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.969617327 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.970114807 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.979651167 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.979480993 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.96952154 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.977123579 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.980222058 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.98068864 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.978983856 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.988490734 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.990070695 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.977834046 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.981559528 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.982430646 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.970384073 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.989542347 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.980739615 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.983059591 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.946152449 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.945856908 seconds)
  done (took 49.319024608 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.137640875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.015140523 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.102978244 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.999712419 seconds)
  done (took 10.123973213 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.944062127 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.009009878 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.998914377 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.99323762 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.000603852 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.049779882 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.001810645 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.096027471 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.077953702 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.072616188 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.954828855 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.969597387 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.972453042 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.999120908 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.0495446 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.949338897 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.948628302 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.068960593 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.009094738 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.134755441 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.946739787 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.004397683 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.998144401 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.003507359 seconds)
  done (took 50.121716442 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.950350091 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.95693446 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.955682254 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.95419048 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.950219856 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.951621909 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.957526554 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.950122191 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.972219814 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.951881547 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.948843813 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.950807669 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.956565454 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.9503048 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.948811388 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.962467814 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.963411465 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.949367813 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.956524662 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.957573843 seconds)
  done (took 40.964516428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.947916252 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.792279998 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.293753864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.201348282 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.947573186 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.946688651 seconds)
  done (took 32.000045903 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.961555213 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.955062538 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.948793623 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.005730435 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.088160204 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.955169515 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.949720317 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.960273293 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992242557 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.010163251 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.969901205 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.975254379 seconds)
  done (took 25.646621628 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.950132101 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.95058074 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.948513925 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.283761462 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.975769728 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.961031038 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.963774442 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.950683573 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.963837312 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.973944862 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.960327767 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.966554341 seconds)
  done (took 45.727438068 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.662486221 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023337176 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.951138466 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.826514616 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.403404674 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497500087 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.842537056 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.629564919 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502894887 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.879650254 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.155108276 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.951798878 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.033177689 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.954561257 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222133238 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.420309506 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164077256 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19468017 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.953456545 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.050717415 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.156043998 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161551423 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.238461513 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9523366 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953204874 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.968707128 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.62648294 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.562810642 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.057894601 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.471251192 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.16450507 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.905754092 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009031542 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.956718691 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.967571244 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955740788 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956460907 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.225073576 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.967295652 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147760343 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027982515 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.200936463 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958807632 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375822337 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.65906073 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.240491359 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.065867957 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953289265 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956863027 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952558387 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877878428 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037264854 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.958349324 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959192099 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.65429667 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.954023918 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028698355 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.956047389 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1591932 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.760909336 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.642411467 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.954021693 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957136502 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.507584655 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.955570166 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.153353639 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57397046 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400351378 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371302704 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.051855252 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.956948332 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955282075 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280011586 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.887430635 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.614519367 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064789516 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090832776 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.972579529 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595172631 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253770662 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.365149136 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.525433065 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874985091 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219867421 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.842929728 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905331668 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172170848 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.803468598 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882326501 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161672909 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984126362 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961045113 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.220357403 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.623035907 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.142148181 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.969002718 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394168047 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972885057 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.964688053 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95939753 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170481095 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.570467166 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.95919949 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079082308 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968429755 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.040478938 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883170176 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.968571535 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.957886485 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.862847616 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961857076 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927033098 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.101005024 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.82426684 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.96494563 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.897289346 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961233564 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.955597455 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076676781 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.907903054 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197686724 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.245218436 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.621782513 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954578297 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.176844977 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.320811893 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19380241 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959812053 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174270962 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.486088505 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.347230922 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.014152077 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238807894 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.014805807 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240743122 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382031212 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034840807 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639488544 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.839692158 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.176834588 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974692596 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.961559349 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.963002786 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965679702 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892737713 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.776474581 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.302916004 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.13556892 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.175530932 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.487072011 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.904023321 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.077714007 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231910622 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.096793461 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937845164 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.600472729 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.412741675 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.782621423 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.049319713 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151394395 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.291662512 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 4.02160618 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976460812 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036634452 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977033044 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.977358348 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.313482022 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.328809876 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.963291781 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.963179825 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.910234383 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964375812 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.966790038 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.495803303 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927326599 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.96667498 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.975429206 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.83682349 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024465976 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965224151 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.966208255 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.522802747 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.474053018 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.965032366 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.625313574 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.969211618 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104550095 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.223484552 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.290459068 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094726702 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.661374223 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.337167733 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.071063319 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.661102418 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.889989145 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962933882 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.903551035 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962954783 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96485043 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967583779 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.151008254 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229409766 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257990917 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.412871092 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.021047644 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166728334 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.567772628 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.990952334 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.965127972 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968351453 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.96406589 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962760974 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.459712024 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.27039711 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.946423225 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066533865 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969814294 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092290225 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.979091558 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.891766073 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.965587108 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966084596 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.472133446 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.064289716 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.911602591 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.252495518 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.74593153 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165998321 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009156294 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.972342378 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96935705 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.576925103 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.085900452 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892023172 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432390202 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086994171 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.626764679 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.529295996 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523246396 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262080192 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.274066135 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.283223588 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.033282029 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.180717216 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.056991872 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.024351367 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053822847 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.903036414 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.891613562 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.61350675 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291097398 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291957357 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979202583 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.185135615 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.572493147 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27137714 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99793302 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.686361665 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35253329 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940169808 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983666858 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.356942491 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157295625 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05157818 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971049973 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.923867155 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294813617 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000437732 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.67051337 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985834912 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.320132751 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427879623 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269204998 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.307720878 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190545026 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967869961 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.312937588 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.211057014 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092968403 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.975532372 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946284876 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.190572303 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548185846 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.813103454 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976140741 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.187879585 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337057797 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.871424616 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.971374827 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.169485293 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313228656 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.969189836 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.294360136 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329456123 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.06570532 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02775819 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198246074 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.686368703 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347604179 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.519668052 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447680368 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976095521 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.896231638 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.670713064 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.174244369 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.97701804 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936432675 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.1758728 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198969326 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.65810533 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.188221524 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.213536848 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.982706759 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.234042545 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038297892 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.069010443 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.249256189 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.390880347 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.208693953 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197791304 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514524676 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184133773 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416175058 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.130500966 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.97518666 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.177316762 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189175534 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185198618 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.318104726 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146810987 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.680003907 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.976537744 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.178281575 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.260709236 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03048682 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.325346526 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.146792714 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.057669691 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983464988 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036347816 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.977569236 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983187715 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.32684283 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.508405747 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.989526312 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05219718 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962936636 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.542948373 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.979359579 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.979185441 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239629702 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307607751 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.291672655 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947516129 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.968868555 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976802886 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10279958 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.89928634 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981115546 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246111237 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.978577873 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407335164 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.209070467 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987354803 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.263720697 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.370112811 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.665448958 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.023151774 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981421636 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187968105 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271916131 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.188105224 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171467986 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.247195432 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.300396653 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.004690689 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.317681655 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227998152 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9769678 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.848929484 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978323864 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103536306 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.178535607 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238840338 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.477755462 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639894948 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31495848 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.824797961 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.98104822 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.585829029 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31920285 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.240272214 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.020675562 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041847296 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.979877491 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426876387 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.797225455 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10606067 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.819395901 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901944263 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.981994341 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257419095 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.218955929 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.689777675 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979790433 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241917948 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274703414 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237854141 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.02274283 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.815350682 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.193114787 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979178393 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.987047816 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.24744816 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182589137 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218498994 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979855721 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.984006192 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.785401932 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904037745 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.978249696 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032367044 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.206393504 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998652548 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.493545503 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.67883961 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248308188 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023773143 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981704528 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239656649 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.481184733 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.516608551 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990193839 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183158223 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.987992112 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.364645075 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.981041548 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438110649 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367014774 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.980967819 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.542838139 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.30929618 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257682259 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.910204452 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.986238297 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193412954 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.8351536 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.977357135 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.962684934 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452478921 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295325993 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.713368579 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.537777637 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.979039258 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.983260292 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.443403556 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096883606 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444231189 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.081101955 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0027034 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496373385 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.694016592 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.269190076 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222591665 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.535336938 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.702752352 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.983234577 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.978653559 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982016426 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.901262353 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.163503966 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.167069219 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259208005 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011564629 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472780833 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0997696 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.333810762 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104521045 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.188110241 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105068573 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.502625972 seconds)
  done (took 1709.380027863 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.993210401 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.01834888 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.021493861 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.990881254 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.986360181 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005842992 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.073731211 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.990878442 seconds)
  done (took 57.982207851 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.981330521 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.993626164 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.987212425 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.98160153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.99131964 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.983316272 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.157004755 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.994208221 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.984830851 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.989171043 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.983136334 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.982432762 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.280081532 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.002152927 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.98299367 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.981415985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.985387205 seconds)
  done (took 76.151943264 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.983335473 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.500779661 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.043869735 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.986539355 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.075046604 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.991531065 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.065353831 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.016890687 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.987060661 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.228357797 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.2791998 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.002446615 seconds)
  done (took 92.06437297 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.0011482 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.986906637 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.988182601 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.985992656 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.98679049 seconds)
  done (took 11.862986963 seconds)
done (took 2232.95273627 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.215087564 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.059373751 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.084605252 seconds)
  done (took 6.048832042 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.134878681 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.176324596 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.291296475 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.054940629 seconds)
  done (took 10.570273347 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.292424626 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.352866428 seconds)
  done (took 6.55171929 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.317546457 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.015682299 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.370273464 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.988051484 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.985150635 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.98997126 seconds)
  done (took 22.874036533 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.98396061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.986502645 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.986429305 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.98982829 seconds)
  done (took 9.855076115 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.986820183 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.718240803 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.986878066 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.994991355 seconds)
  done (took 21.592170731 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.137327182 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103466474 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12928569 seconds)
  done (took 8.277521683 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.129353 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.821897118 seconds)
  done (took 6.857666922 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140679212 seconds)
  done (took 4.046316848 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.014941416 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.258005456 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.480591408 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.50121031 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.621544194 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.871633265 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.314420609 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.20720747 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.430892124 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.449779221 seconds)
  done (took 26.063576712 seconds)
done (took 138.559871193 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.330138756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.014804406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.197350406 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.339593424 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.222480896 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.195032177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.204779824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.336227092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.0288228 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.01071341 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.343789291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.224065637 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.142469382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.01201753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.153895398 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.017293764 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.220727605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.361344403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.028777382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.25240405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.210882698 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.993510776 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.183165197 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.005120272 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.22001471 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.147669508 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.534181317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.016039664 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.165210801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.546795072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.144751846 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.409043602 seconds)
  done (took 172.121515165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.991078535 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.985107189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.986084662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.986909287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.448615948 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.991078414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.985911323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.98819266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.409908365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.397978358 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.988823106 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.431327205 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.988830538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.987802996 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.986770408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.987034766 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.559648407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.988442384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986856044 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.98690688 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.989747222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.271276085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.989474972 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.286839344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.550499525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.98997659 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.988599329 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.987369623 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.987874843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.987124123 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.991417505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.989821117 seconds)
  done (took 212.987646481 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.990403262 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.989454999 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.988594031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.989536472 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.989376723 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.992035413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.99111407 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.990027203 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.784555047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.766610709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.989443298 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.990743244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.993047428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.988289486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.991638264 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.988376255 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.988692505 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.991338101 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.989012135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.988960048 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.991022012 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.759205388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.99037083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.740648726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.990041658 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.991907403 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.991618072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.9904713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.98815166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.991268289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.989449041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.994245237 seconds)
  done (took 224.693397896 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.234379308 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.992596352 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.994830736 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.90369811 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.994254196 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.993344309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.971730143 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.24421858 seconds)
  done (took 20.243346865 seconds)
done (took 631.963793362 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.378670698 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.207073638 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.165035495 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.020281571 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.270374069 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.058078609 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.014474386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.078068342 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.854311904 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.09025171 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.650897162 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.037786974 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.747947506 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.041968034 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.140424005 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.069225679 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.602104464 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.704098476 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.158261043 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.087225596 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.189596675 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.964538217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.092313974 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.89447785 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680420598 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.005756717 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.078850318 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.604948532 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.02544496 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.176404913 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.679744691 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.337157003 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.028845035 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.015594364 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.06522934 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.047133029 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.268704421 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.027617413 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.14062848 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.752033259 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.085686919 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.749298505 seconds)
  done (took 108.204773436 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.009279512 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.002938388 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.003121827 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.003906196 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.010729153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.005141318 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.001764774 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.003330188 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.003233384 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.002801394 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.003294698 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.011761718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.004518683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.014497591 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.005699258 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.003382332 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.004745762 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.012453986 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.00338251 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.004883181 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.005880366 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.003772164 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.99944649 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.002436035 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.006263299 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.004707059 seconds)
  done (took 54.068867599 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.99785813 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.15937367 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.246691845 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014971181 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.999124462 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.00198249 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.017118603 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.003988884 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.002825133 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.999568749 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.099651565 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.005021917 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.017307057 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.245865238 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.014787433 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.999202537 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.998265081 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.999846563 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.166124106 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.014726667 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.019646989 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.003162917 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.019244287 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.016063213 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.001769191 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.000216958 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.003030237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.46629403 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.008953505 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.104648666 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.046453307 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.024695383 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.412850574 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.255765283 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.054065707 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.009602746 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.000029766 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.109866725 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.006728301 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.001133501 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.017136072 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.006303269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249701445 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.524389405 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.012765377 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.001776814 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.476400359 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.116449006 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.041577998 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.015611835 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.253929716 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.017051981 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.004041875 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.001384892 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.036786056 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.011741387 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.002044731 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.356295475 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.013824285 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.016496252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.004106094 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.001360792 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.174997177 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.009753745 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.167894365 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.01095078 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.010647067 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.002797349 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.251153755 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.017097963 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.5458018 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.014846879 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.000825408 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.103710413 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.170114144 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.501540433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.014085837 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.178092546 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.428766569 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.028383015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.012610234 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.45869036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.031085264 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.010449036 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.004699377 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.00367711 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.002443567 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.047582025 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.01788405 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.463103978 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.540871428 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.377384919 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.030560605 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.014991441 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.004826892 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.359470787 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.011897187 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.002993656 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.241694769 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.549248903 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.018288488 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.009659593 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.524422184 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.019330259 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.020799657 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.013066994 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.260974673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.017845369 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.050525495 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.003014426 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.009884434 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.006666099 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.023376776 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.01180206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.003988467 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.512422066 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.124422768 seconds)
  done (took 248.11812248 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.004025165 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.000958479 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.003047384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.00131909 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.004331242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.002511843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.002406284 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.002571917 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.00386981 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.004451174 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.003684714 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.004851448 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.00438997 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.00542872 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.007229907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.006153268 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.608627907 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.003483735 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.004831139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.000758391 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.668208889 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.010567473 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.003869387 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.000885186 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.002256735 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.006844322 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.006910047 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.005600978 seconds)
  done (took 171.312681923 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.005389084 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.119030771 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.024072772 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.033342909 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.01465333 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.005599012 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.102154465 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.025327926 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.012930831 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.006604572 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.007412486 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.06552101 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.018509745 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.104170169 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.039693409 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.11316885 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.114097651 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.015218726 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.006082691 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.008158937 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.034412144 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.017177476 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.068444323 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.13298468 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.023714671 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.119703895 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.024735994 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.007926997 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.007510909 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.120386043 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.023391516 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.068770698 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.035444709 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.026306249 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.125426201 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.122725556 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.114015153 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.114003508 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.016971924 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.008644904 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.008498308 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.009240327 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.121929934 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.024189276 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.008881071 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.126726981 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.026558192 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.007695074 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.009014097 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.008606776 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.021250988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.027043124 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.074211512 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.135791809 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.04100516 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.03262033 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.106850253 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.134375768 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.011100195 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.107112391 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.017410348 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.121650395 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.028741671 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.010406661 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.011277275 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.013122865 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.037873694 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.116433457 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.112657694 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.016919096 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.107346079 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.043222945 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.018464157 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.013236807 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.009745044 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.123765235 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.12535706 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.04589489 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.045437949 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.039150985 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.017526367 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.009736914 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.01486867 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.024733 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.014321556 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.123168405 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.126192166 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.01474401 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.010307898 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.010044452 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.011400318 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.03417251 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.127003463 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.044519723 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.115376092 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.075888672 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.08402851 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.024607302 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.023398087 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.015295176 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.073140419 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.022347782 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.023523164 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.307480856 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.071529292 seconds)
  done (took 217.501000376 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395365474 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.055579573 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.066736066 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.339080326 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.401149401 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.169106225 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.052149764 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.05773521 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.090552325 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.282675113 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.125575743 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.076050309 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.045752038 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.03190481 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.058648357 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.09087237 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.067558668 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.398608462 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.279264731 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.220015299 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.045137436 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.358584104 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.404530203 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.645570305 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.104012238 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.463290867 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.679593473 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.235089043 seconds)
  done (took 66.177209163 seconds)
done (took 867.29580823 seconds)
SAVING RESULT...
DONE!
