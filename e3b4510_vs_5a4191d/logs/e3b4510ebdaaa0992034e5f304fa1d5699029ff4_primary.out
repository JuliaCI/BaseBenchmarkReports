cset: moving following pidspec: 6955
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.351881252 seconds)
loading group "string"... done (took 0.608612054 seconds)
loading group "linalg"... done (took 7.507383316 seconds)
loading group "parallel"... done (took 0.174468758 seconds)
loading group "find"... done (took 1.168705362 seconds)
loading group "tuple"... done (took 1.819324 seconds)
loading group "dates"... done (took 1.246921829 seconds)
loading group "micro"... done (took 0.233111453 seconds)
loading group "io"... done (took 1.053771289 seconds)
loading group "scalar"... done (took 40.328997226 seconds)
loading group "sparse"... done (took 13.29443578 seconds)
loading group "broadcast"... done (took 1.014177502 seconds)
loading group "union"... done (took 13.806182411 seconds)
loading group "simd"... done (took 4.663615798 seconds)
loading group "random"... done (took 9.447718852 seconds)
loading group "problem"... done (took 2.013744675 seconds)
loading group "array"... done (took 22.43659098 seconds)
loading group "misc"... done (took 2.044086438 seconds)
loading group "sort"... done (took 3.384153594 seconds)
loading group "collection"... done (took 19.057215009 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573571122 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147037879 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.122067101 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.144824354 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.19456073 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.138909596 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.147584718 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087282328 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.163890237 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16649342 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128827999 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525172637 seconds)
done (took 6.407962784 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.207679708 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.09025784 seconds)
    (2/2) benchmarking "String"...
    done (took 0.09971183 seconds)
  done (took 1.000624611 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067464633 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.131276578 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.08288751 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069334634 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068470038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083625644 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068817895 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067198364 seconds)
  done (took 1.389033471 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075921441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071064657 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087742551 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070242356 seconds)
  done (took 1.120789425 seconds)
done (took 4.607970938 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.940691179 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247639781 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194853236 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.475793956 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155090866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.193566432 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671795332 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326244519 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.219434081 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.104614837 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108484041 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.399848654 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109065552 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671115177 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078590295 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110611712 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163522121 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.430295619 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083947761 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085000248 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106653711 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144358862 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108556044 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080557527 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175619827 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072389617 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157625247 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.097598348 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070161603 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.253757653 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.192736856 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686920831 seconds)
  done (took 10.775131127 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101565664 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.12383345 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070886636 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144445309 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124002954 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073187696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073200862 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.086603463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095703552 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.165091408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.119544528 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127175424 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069245682 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071677862 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105988303 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233933647 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.097087182 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104090154 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074884354 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077854077 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.127568655 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084777799 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.099392544 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0978212 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.139927222 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.211297371 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100926699 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115890119 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071518082 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101288112 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132894023 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134960967 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068003799 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08713979 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161821311 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097239864 seconds)
  done (took 4.801704746 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.124099975 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.166539803 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095458703 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158771891 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08851012 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133532093 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068610676 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103105262 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259000721 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.17365069 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.500810342 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116522735 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108724778 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069156247 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090429018 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069865297 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.641770845 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.149560205 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104306722 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106289753 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.092025113 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073606675 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361197083 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070555306 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067510898 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08722132 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061157367 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151216484 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070174367 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.288335304 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.111016503 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07153505 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122192896 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.180736075 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098974491 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.127793861 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084433194 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068895441 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177381865 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07556442 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086126821 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091263342 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123824609 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126244336 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071009696 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085975725 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188787451 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.133011187 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067031352 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.106150616 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.973412634 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167576865 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.096069674 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067246662 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.302728486 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105504526 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06887784 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065763936 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285649774 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188376165 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.087448314 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069170637 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084610967 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070563475 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064793605 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085439815 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371088218 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071635013 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079478329 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.676053789 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089925546 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06912544 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092387917 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074386963 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104321154 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068029236 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065222218 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.088998857 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068019454 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084984553 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070857164 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104217409 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213989446 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072337201 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085551233 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067715403 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08776496 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117223754 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087527274 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068125507 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116900949 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071821211 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.069134445 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.12363526 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069435932 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106564851 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087277652 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115638759 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085150469 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.14103614 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068242825 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114823168 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074943353 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118358237 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100395822 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070911422 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159771733 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065552754 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.084783941 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066857377 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067819625 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085506584 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069323657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088274178 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084671684 seconds)
  done (took 21.784165317 seconds)
done (took 39.300433381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.30708515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.097444303 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097407935 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079216156 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098208224 seconds)
  done (took 1.573431721 seconds)
done (took 2.437504943 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.142315694 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104939653 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084483764 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10048438 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06526252 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1237073 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120541354 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083698114 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121834814 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066121568 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.117420675 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065841116 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082849152 seconds)
  done (took 2.173929817 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084591162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086990378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088819273 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083289489 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082159692 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083849011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081722058 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106672153 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081522241 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090804461 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066345619 seconds)
  done (took 1.794350258 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082841065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084876815 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088681749 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082019089 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081700082 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083093865 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081364034 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105435673 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081579435 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091103969 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06608729 seconds)
  done (took 1.790120657 seconds)
done (took 6.614159062 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082128419 seconds)
  done (took 0.936521626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.756616063 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.985160113 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.102200105 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139400204 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.214127302 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.181431676 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466436898 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112221348 seconds)
  done (took 11.009548037 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.092244911 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102855205 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074559565 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.089616649 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072851506 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091112807 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075491534 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071686882 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.091315239 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072053798 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087884815 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072251995 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090083779 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075667615 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070523372 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092449893 seconds)
  done (took 2.242353156 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096764373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096117531 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.095737077 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078939861 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09450936 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076561062 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.097197188 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078332732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.090723658 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075788067 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.096072786 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077981661 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.092436606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068128133 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094583712 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079829708 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091290381 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078202425 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09483386 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078258629 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095642611 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068026362 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.093148184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078138592 seconds)
  done (took 3.04345446 seconds)
done (took 18.093925397 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.139169365 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079669795 seconds)
  done (took 1.080388881 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085074108 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102081225 seconds)
  done (took 1.056229836 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.087776368 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084966196 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094135914 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100592257 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.085094166 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069430909 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.108674601 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068603135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085298132 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070141306 seconds)
  done (took 1.72488372 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072074365 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098361009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074556486 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100792388 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077467933 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084299032 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076473894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.08807632 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083277373 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083264207 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075294512 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.104503352 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074006317 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.105377221 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093157374 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072877994 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090751578 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070971696 seconds)
  done (took 2.395464873 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069340051 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.069490898 seconds)
  done (took 1.008869315 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070528548 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065334125 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086738013 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069253666 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083843057 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065713022 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082967809 seconds)
  done (took 1.394447502 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.426160241 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111156515 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272244234 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074216053 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.110283251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289522793 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068559827 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073068815 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092229045 seconds)
  done (took 2.42907852 seconds)
done (took 11.959180591 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083604012 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087526505 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11590808 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.454183724 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111629024 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068196391 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148690157 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.222055646 seconds)
done (took 2.164990322 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.13141151 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.660030185 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.444215019 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.222880455 seconds)
  done (took 2.200615806 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399255727 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09499784 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076435071 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069783936 seconds)
  done (took 1.515873766 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069260994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071462783 seconds)
  done (took 1.015693174 seconds)
done (took 5.739986523 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069939161 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068177209 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08410309 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069172793 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065496301 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083738913 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088164354 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088157986 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06899096 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.067678334 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.087701506 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068740187 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.084841344 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067314324 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065835822 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08526572 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066624942 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067829271 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083434366 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066762113 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067861345 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.084075139 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066039081 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082694926 seconds)
  done (took 2.714737415 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089722343 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.086504437 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074945579 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09122173 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074701314 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.09091215 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075659625 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0689897 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092381563 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070093783 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090150478 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072906986 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087910349 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073149904 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087386746 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074062088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091609569 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070260441 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074266215 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091487491 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0741813 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08668965 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073069922 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092083228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072987794 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089809843 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071386204 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086262999 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074599499 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089256059 seconds)
  done (took 3.316465263 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074054341 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065857525 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.084099167 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073869259 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065529436 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086387103 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066267375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083931489 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06787478 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065479482 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.085492724 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066415102 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065177455 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086019849 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066887351 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086652405 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084459763 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067258406 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084709675 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066760975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085893813 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066758014 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067306436 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083536701 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06751826 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065924755 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.084001328 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065717631 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065314592 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.083717847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068955618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086261042 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066688105 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072513035 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087236757 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066766855 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068941 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083748239 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066826459 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064862217 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084872303 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066369211 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.083142228 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073257603 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066130653 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.086326528 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066522656 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066753021 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.085462062 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068835716 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083130894 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066454374 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067131034 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.084555079 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07028304 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082210441 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068237994 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06586549 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.084189818 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066520525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065191996 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083494528 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069007427 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066516511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100718548 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072458146 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082983897 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068511296 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066571022 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.086122073 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068019107 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09764722 seconds)
  done (took 6.25900408 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.124396502 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095621956 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087023697 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068708827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082081119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06763495 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069148542 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084457124 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068155895 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090356398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067096758 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066900577 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086820131 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081254646 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084862596 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068595068 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09018823 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065542229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06566364 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087706575 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066759711 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087449316 seconds)
  done (took 2.642705466 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.198001296 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090700611 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.114606678 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09601435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087701713 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077686201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089306782 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075174138 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071843005 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09053203 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070295179 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090467984 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070732136 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08881843 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071192784 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088812897 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073340565 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088437779 seconds)
  done (took 2.52042199 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081139476 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067603148 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.111266862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067470734 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.087084709 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070792253 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092660947 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077387558 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089468577 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068864921 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096041354 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071455404 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088132514 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06970478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070642823 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087030865 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070439462 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086717076 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0788083 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092203254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074235326 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09713987 seconds)
  done (took 2.684688039 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085479747 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069439887 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106562008 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088736413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065815829 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066908085 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.094112078 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068792549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093137313 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071600801 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067913593 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085799964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0738922 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086887309 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074282417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087072828 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070932744 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085805973 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071754923 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064620319 seconds)
  done (took 2.469161287 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091505033 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087544978 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071049814 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097000308 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070933229 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.087946663 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079912306 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087715473 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07067714 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113061151 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070262978 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087040482 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079431593 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093202228 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070418301 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097042177 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077728513 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097974014 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070171008 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088939066 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.111657964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070954021 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.205370045 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070131222 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08682487 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071628454 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069953971 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.094709467 seconds)
  done (took 3.365962481 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069850506 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068150785 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083929913 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066631668 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065561893 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083941923 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066553583 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065627719 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087222626 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065986363 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067479953 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.086869676 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068584631 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085606452 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069458457 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067756385 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086190561 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066610993 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064950513 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08441016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069380035 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06727717 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.087148159 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066256422 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083202762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069797682 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066298843 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084479668 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06897904 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066340215 seconds)
  done (took 3.096424757 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080648402 seconds)
    (2/2) benchmarking "in"...
    done (took 0.094587049 seconds)
  done (took 1.071500383 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068194333 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083810058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085358701 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07293246 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09262502 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069385231 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.095810309 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076342725 seconds)
  done (took 1.538646421 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085992348 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080395686 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088976888 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081675541 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.100129057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086026309 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.162523843 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088746012 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076092293 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085128332 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084235435 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067300322 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094057449 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069150808 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093587453 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075779951 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066571117 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09372769 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07167776 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.086231214 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070725007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098203601 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071692058 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08275075 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071314077 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077547469 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099561366 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070264962 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091202851 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076570756 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091830379 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063915531 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067868895 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088328513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066444293 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097007878 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084319663 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090484412 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078496462 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087844749 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081171166 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081450567 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074850122 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074798952 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097958231 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069708937 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087342051 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064907315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065623003 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089640175 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064142117 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086708472 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06522749 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076036818 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.090773413 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080650184 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086467316 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071323336 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089642925 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074007717 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075353047 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090045804 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071869033 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.08643277 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077207813 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073320195 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0985357 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063949767 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081398283 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067843964 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.096558847 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094124015 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09350821 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071299351 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070185148 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085625737 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073315202 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088667719 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076137565 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093061867 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070796844 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073931076 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095345711 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069029831 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090284072 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077104541 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.085654133 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071736943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066915883 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105334922 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066923017 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085650774 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066881896 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097755177 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072403687 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067762503 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.085891531 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076101566 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081583204 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070874281 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068897371 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089150222 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079533016 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093758391 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074205437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096107556 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076802161 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08786722 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072869824 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.082881205 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070938222 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067611281 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095828909 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06369549 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088968383 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070760867 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069100719 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.096999977 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067447358 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.087803265 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077766476 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092041025 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068672807 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065403296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.090417613 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070243407 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090236903 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077914883 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066649065 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.0834624 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063534417 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089624677 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070154908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072193367 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092890173 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071055267 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.082204257 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067515097 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.09129059 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078935386 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086512274 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071331734 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074616261 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.089484041 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068238863 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092867735 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072572394 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067237549 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09349575 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069536423 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.08230043 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073642336 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071191802 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.086980178 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.0724991 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091819637 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071738012 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.087815589 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068752646 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073699481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088659046 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067860275 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086811806 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068762804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096600962 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072255475 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063594732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.084328243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076625395 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.084716393 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069891008 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068073303 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090062448 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069858466 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.084434934 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069358105 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069583485 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100122955 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073615953 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089436324 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075347018 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100138993 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068610439 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088748 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070068879 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069244165 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.089315399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078297915 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.093291933 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074276312 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089738078 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066360137 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07396558 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09657041 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068567447 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084707355 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068623391 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072004652 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0942907 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072384412 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089135861 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067013236 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086860267 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074413627 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070999794 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088231806 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068426643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092824258 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069187765 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.094080618 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070928048 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.097530734 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074098879 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064030253 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092515075 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067198251 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094247014 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065121556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066392912 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086732774 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.0704512 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085771108 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073601186 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063212 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095836235 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077304643 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.087321439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069294637 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068943383 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094611459 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070072826 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091631297 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073104385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093456779 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081177122 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06745595 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091467574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079490405 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.088387137 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063423363 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092255311 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068680978 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067935603 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086544151 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067544552 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071858395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097837923 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093361152 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06424292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071438458 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08616069 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068725286 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064229452 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.092680984 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071177203 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087750519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077775651 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087184018 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070325993 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071964736 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087357196 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070133757 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.088617172 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073115806 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069240337 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090118883 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068453854 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09075653 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068985763 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065997494 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090449868 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069375605 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086835927 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075647521 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068206832 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088858661 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071829804 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088572949 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069800295 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087020067 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06963938 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072227715 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08875315 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069627995 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071307911 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083377167 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076864046 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087970095 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077359978 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08675125 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066972806 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074561977 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091015415 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074337894 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089448352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07037208 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088227503 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069332996 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070741371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095032487 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067477053 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098506505 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077839804 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087981963 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.072938396 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068924789 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089536042 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068184236 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087774149 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071302064 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068584681 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08758937 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074483204 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090085661 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069940646 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070045186 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.088602214 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069481298 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.088998335 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064783214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067670837 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087833958 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069268668 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097958223 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070636208 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068121009 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087717406 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069631756 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086935036 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066442352 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094539441 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079948547 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087524995 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077904558 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067945105 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.089443081 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080016868 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.084980581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067435296 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066041387 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.086143379 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07745605 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089495449 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079284549 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087284967 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070031438 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066209334 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.089279622 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068912212 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063219604 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086166912 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073284305 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087231818 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069800991 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069226835 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091991153 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07155485 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098190325 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06902282 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088796689 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071029611 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066477044 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.087691938 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068429954 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090628285 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071503956 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066466964 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08516614 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070120377 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069453592 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090132624 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06878195 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089866991 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076771324 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087922858 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073812464 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072529829 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083325241 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07221332 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087099344 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070331715 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068211884 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092513482 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072452434 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088725467 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079580214 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087421659 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070827695 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06874231 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.086081646 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068639385 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087536095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070503234 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068280985 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089288678 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077701994 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085373537 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072921946 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067910442 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088930954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076589257 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.089115607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072335369 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095807397 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06962436 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070176542 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097288534 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072476715 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091383852 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071005232 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089821438 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075987667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067573469 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095441495 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06919904 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.089833911 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071530927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066247519 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088472596 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.06858512 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087417643 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076028354 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.087367312 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069126323 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06763088 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.086142509 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07062241 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090282958 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077674414 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071384188 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091642846 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064684158 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.084948169 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072484232 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066434172 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090103679 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072429793 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093287988 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072578792 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068872188 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087574465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078909317 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094057648 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073252179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084723967 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074301492 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069618156 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091089988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070866864 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087762112 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072763316 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073205388 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090449095 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068167042 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095628542 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072995166 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069079682 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090219171 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070295287 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087981631 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065368728 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069768412 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091228215 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073635983 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.090979552 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069608907 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098674662 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067807577 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068248473 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.093081269 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068427812 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093621604 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064744255 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069790942 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090138548 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070392223 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084748829 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068722446 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066608689 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091401067 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068628176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082718291 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080843903 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09725807 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073479426 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066964282 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088002786 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064457264 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.083072247 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070686056 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070288703 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090053716 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079197217 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.087324352 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06890415 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064219151 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088128859 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07192457 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091537514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067430215 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064342325 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087614846 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072770523 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093775524 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069095864 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068771753 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092202928 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072834805 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085728677 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074142049 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.0650371 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09284319 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082155777 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.090518494 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069936211 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095011393 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077579399 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088857913 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065836552 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069729918 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09210856 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069947873 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089649992 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071368593 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10357944 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072648982 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067474595 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08746024 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071376835 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087671818 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078609298 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069016725 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.090274366 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073916349 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090986241 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078998266 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091403498 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077403516 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091996182 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073508936 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067039756 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088695006 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067392383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.086330367 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072417278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069273532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093715806 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07681525 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088044211 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079850043 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098167504 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071761681 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.084300902 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069759083 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06831871 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.084838764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070591555 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066395478 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08766005 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066888153 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087576696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.0710704 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073726443 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090031128 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069651947 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088193288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06439323 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070055977 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09121454 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070054831 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.085279138 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069819302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069410918 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09301934 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072623349 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08606761 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071527739 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070857297 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08925179 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064343963 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094888739 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068482163 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071293404 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088504085 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069872527 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089096427 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073438248 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09314269 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071096246 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070398954 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098483179 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071305992 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085757306 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067031545 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073775554 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.087346002 seconds)
  done (took 48.154957545 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11255606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086574333 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064330402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083941014 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078607821 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085184066 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065651206 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064889329 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086201962 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067892653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08389082 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064946844 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09252613 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090755656 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098621983 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088195622 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065316022 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065543859 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084455038 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066239041 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093601194 seconds)
  done (took 2.635963087 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09133291 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105336505 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079793574 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104576768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094339646 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081448729 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099686647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08056939 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104284828 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09479185 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084546737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100181851 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076996277 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096476209 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076416159 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097915447 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10266237 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076384922 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.101337854 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080058769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097681337 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080864189 seconds)
  done (took 2.949467001 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070281322 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068241384 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097774777 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064296706 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067809934 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083467068 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073504607 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085434156 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.074039919 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066958877 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087970114 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067849698 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089344031 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067527937 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067446303 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.085625404 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.136778798 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072442173 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.0872431 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070360513 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063600204 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090846651 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064249694 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063448037 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.087187219 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07206637 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089070406 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067019628 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067359657 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.087146291 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06822534 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085048429 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071550538 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068510067 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087119489 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067838678 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.067175603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.088779292 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063747045 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.086126048 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070210837 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063673431 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088766261 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070429555 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085310162 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067972356 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069475013 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.087873378 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063785718 seconds)
  done (took 4.707162254 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089061167 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.135926448 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.091507777 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.113271032 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084333035 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.097243819 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072756479 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.116894663 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065342891 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088892218 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104815981 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085475437 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089232784 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074905277 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091059285 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069994453 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088935584 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069978742 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072646208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089680178 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073418984 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.096219306 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103608206 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082755482 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093791045 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06837725 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087794253 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074846638 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.102197061 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073040842 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.093777812 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074165829 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.10498362 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.093184655 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070028683 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.070145725 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.106859593 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088001976 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072433467 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065953353 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.091778943 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073553223 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095526893 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104979092 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069727429 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093227073 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06979386 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064835912 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.103309072 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069656567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.097925802 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104323079 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07215768 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.08888171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073316936 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.105070825 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068869455 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087237918 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072451552 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.101853604 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066261042 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092652634 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083293707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.09151016 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075778432 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104120526 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093286377 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074260194 seconds)
  done (took 6.961453274 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080088051 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095041125 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084925499 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106345592 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094786012 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077557021 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09510341 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076111566 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094741452 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081066927 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095353772 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118701868 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.07114076 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098133691 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076217004 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096203498 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076136385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09678918 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093369017 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077642124 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.094846954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085018977 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096785695 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.105190928 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107606344 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.090566504 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076296793 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095842917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085499106 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.096777059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108598522 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075252671 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.096799922 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104651238 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088171392 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.095567885 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068703453 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094798994 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076101881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095358378 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070486255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105258925 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09454019 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071427086 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075166741 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.097343472 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105245212 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08776922 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098995508 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100130998 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076437016 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104881836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074268616 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096180858 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104560003 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110206056 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105239683 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104786468 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075104639 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105308831 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10377216 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110864766 seconds)
  done (took 6.663598389 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092542842 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09900893 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100627551 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065193463 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066163033 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094608321 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067550703 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085168449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079926215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098850142 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081508657 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093531464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075870541 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102563686 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092480746 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077479527 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092679837 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072784689 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099250911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072864985 seconds)
  done (took 2.666385851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079438981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106515621 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071429912 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094820202 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072499872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074369905 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092728967 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071013468 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090260455 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072380945 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100350198 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080198674 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090457064 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075634613 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100143281 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074786382 seconds)
  done (took 2.307417476 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08286233 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100510464 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084238923 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090168917 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.0674059 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085935704 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06976936 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064357655 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086440031 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.08291964 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090698248 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071526183 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088831083 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067571852 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064539929 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093280862 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065518654 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086777002 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068189277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103497874 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080441095 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.087520476 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069972692 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089673289 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070627109 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074178993 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090759292 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065714936 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087549614 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068851325 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089552367 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076993848 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.085287937 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068135442 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.0664266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086989311 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068411477 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088848953 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072263402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08891941 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069073141 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068342747 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089371246 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07035569 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084778504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069738114 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064627782 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.096578252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066268591 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089650148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.068366496 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090456497 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070223547 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.098996203 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073165394 seconds)
  done (took 5.328743999 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08437657 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07168138 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085492958 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066795999 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090991329 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071250605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071519551 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091874052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071242301 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086636099 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07170354 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091337308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072488007 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072188123 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091393253 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073194409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.084249802 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071128319 seconds)
  done (took 2.386261537 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075810769 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06894358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097265721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06919918 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089410437 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072885357 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064474674 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.089118682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067950838 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088396213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071090723 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070722579 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088175312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070894655 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088825826 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069916117 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069760912 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087944189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068845188 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084642687 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072684193 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067066074 seconds)
  done (took 2.662012089 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075617712 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.094885822 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.168813694 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111058511 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084208539 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103417691 seconds)
  done (took 1.605926985 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094743467 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103741168 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069445371 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110508694 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078643073 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090776276 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07190906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090291809 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082056141 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106546994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069967061 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101786117 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099296059 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083678546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09760898 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077169387 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091403905 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06959408 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089692929 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110158581 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072719453 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101469989 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071364755 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091877943 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071568705 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100822018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079663155 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107004667 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090645951 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080547042 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097767107 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070595243 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101321085 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105247994 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073234326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101560694 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071528436 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111241848 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076251175 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103031816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091213003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078873081 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100303662 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076418005 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10117557 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070481062 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09681614 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090462496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073283527 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118658423 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07585013 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100916368 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09742393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081508202 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101779194 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118604425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085061762 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101927769 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097047182 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08451595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101191889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096928313 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079518915 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106646465 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097107872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080906261 seconds)
  done (took 6.942938709 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086279251 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10898054 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071144722 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106772799 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099350579 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07264528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091537326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072320486 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090457567 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07146079 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134334098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0714109 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101552135 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100333444 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071483839 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091337895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071591531 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099912778 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070202067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118411017 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091493099 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079874306 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101631666 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098916701 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085115714 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098056853 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07071248 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092397752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070757958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092061533 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076950389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092736859 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099068023 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071217199 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100860021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07227628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091285244 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076784946 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091303828 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07693004 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101744066 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110238218 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071067217 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09220213 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10444522 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073147788 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089907005 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071442303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071344585 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090970431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104975852 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086375252 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107148079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101104494 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072293768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09138147 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072037698 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091894934 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072011086 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099060176 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078895791 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091628456 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118356648 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071531327 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091838666 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080014263 seconds)
  done (took 6.815069292 seconds)
done (took 135.344637381 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.204959375 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187987023 seconds)
  done (took 1.357930158 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071921479 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098326281 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102558559 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129695913 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089980603 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101964579 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121439163 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082944372 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068338531 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090935207 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069538946 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090101243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134276333 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068681337 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.090177644 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07080637 seconds)
  done (took 2.45438928 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107351588 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202002837 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113053841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067468996 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104068528 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081179823 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088213818 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079722606 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095763176 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068939545 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10066911 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079762035 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066149442 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09922962 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074207605 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.101896648 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067075993 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.102511579 seconds)
  done (took 2.675835114 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109685472 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149915265 seconds)
  done (took 1.234167366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206135289 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.12696677 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214026609 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.49304836 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.249894132 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.289313965 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183825441 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182719765 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166028822 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.179899057 seconds)
  done (took 3.263274281 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102759677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177108605 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325234214 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142972423 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091851716 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.121317882 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144150562 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112231684 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087122851 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106487758 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103943226 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082042178 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121717904 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079072287 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.097893534 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080292489 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125226143 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076522333 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097904022 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079223441 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122678293 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069172763 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.098002275 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077131186 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.102168255 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.082692034 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088963183 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069422677 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078138448 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099049656 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081639967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119114333 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102654178 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.138874451 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10598001 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.140693012 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080091039 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095475668 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078108318 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.094760027 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08176713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101105872 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.088006617 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100742409 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068458521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.101593557 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068587304 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066718965 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104883224 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07995142 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.104473725 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102744364 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.139535645 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08043378 seconds)
  done (took 6.551078568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774491933 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.138340486 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075465341 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.837248812 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118615855 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086702025 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.767184726 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097195266 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218882784 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.790507664 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115291076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081873715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215500906 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.221514794 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.912829143 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.272868261 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680797325 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.085051045 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.135896838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137586265 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148323891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.16228135 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.178402467 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413589026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.079336897 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09289747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.146735415 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.080163177 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.146055724 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109412964 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074740692 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184979372 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233106864 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164933363 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099729162 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072164824 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093531747 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.154290524 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.229503055 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.202828768 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.164174617 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06952026 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093373786 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148239433 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136780678 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069206138 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.147888481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.181319343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.158363954 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074903321 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101925357 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15027304 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.146277588 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.14926221 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105441977 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.303287654 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.300846463 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074409153 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126251505 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087103995 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250095379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105945298 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.18857069 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.1434784 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197434055 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071986612 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788161931 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154499159 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070982388 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.10063971 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125904277 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077165994 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.167290164 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.128500851 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390059256 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.171373657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076548629 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071736571 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.21267209 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086385192 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09407904 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146994134 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077004563 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128433503 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.173936244 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155424599 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.155757869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216100185 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148865838 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.168794233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076405638 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129098886 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100071225 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.199898829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.181202652 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.169003649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194456033 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147628329 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14879737 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.153803698 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102746667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.157630474 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125876541 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084080159 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.168137154 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.179091746 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.129935965 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107716282 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076682025 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.168084164 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.109562157 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111235664 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.147852192 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.155418295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461192605 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.155530574 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069119138 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111102505 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14755751 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146496887 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0998042 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224530542 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129515087 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.152592831 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.12688575 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.091110323 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126254746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.149973258 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080701379 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128944261 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.167256632 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080232169 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216170396 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.202420261 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081096091 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227051096 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166710824 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078657976 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.15633443 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126415951 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152576841 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102087701 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.146163984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098404614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7581575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.149558353 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127744001 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099383815 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169587733 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072937192 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105813844 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085129535 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090309329 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778259531 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111326148 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.082162935 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.108503473 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077275435 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127256259 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.164800908 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076263108 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146642472 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216225811 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078867793 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125715392 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108196311 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144758668 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.09920146 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086605783 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108283375 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085635853 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128483279 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097594201 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085590261 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.177155109 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.149357234 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.181944693 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.581173628 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07180244 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108495383 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.213656625 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073023896 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274665893 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144500228 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211486624 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.149978198 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082845289 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304578503 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.150323005 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171386891 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110616327 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.161957612 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06975752 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.142855634 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17351157 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074079358 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07668946 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.170348844 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.155787264 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.150856023 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95049793 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072705335 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.213377583 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.092970441 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157284885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077903159 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102612267 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272097227 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073031483 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.15432698 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.173076922 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076455606 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.107198114 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.834167097 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10703963 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148042974 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077941237 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209236413 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149350087 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.144600235 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.167184847 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080751203 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.147091642 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194613859 seconds)
  done (took 42.213416871 seconds)
done (took 60.723382089 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275729071 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.187424159 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261452198 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.150876346 seconds)
  done (took 1.950517718 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.156017285 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108931206 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122808314 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.08848819 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.109678094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089104942 seconds)
  done (took 1.674249373 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.438363239 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.282369726 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24328516 seconds)
  done (took 1.965404689 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.296941645 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.222903483 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468118672 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.31258778 seconds)
  done (took 2.41270876 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.185188741 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118889245 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068633848 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.110825623 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173511846 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.277890111 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136314045 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201384427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080399136 seconds)
  done (took 2.401615355 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20884375 seconds)
done (took 11.611708319 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.128007232 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.282617574 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.290697825 seconds)
    (4/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.228289856 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115750237 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100990646 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105072556 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.201507215 seconds)
    (9/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075914896 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.216509656 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.226722733 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.105334564 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078418343 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.098360606 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.242688676 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.228333812 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.182257487 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 0.216467551 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.192977776 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.137198123 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.086562818 seconds)
    (22/309) benchmarking ("sort", Float64, false)...
    done (took 0.152310868 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075167831 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116047668 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07679249 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.158929564 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078017501 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.255652388 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.168201479 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.143375355 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.252934943 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098486125 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.10126861 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094896176 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.269830204 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097895899 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.093909739 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.135008613 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096683917 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139213122 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07681682 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116777225 seconds)
    (43/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079481381 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084559075 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103096441 seconds)
    (46/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053212757 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.100042081 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096032745 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.115355425 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09576108 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.074444336 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.161929812 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.098194968 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177186792 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149166475 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092686305 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.218853339 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12538039 seconds)
    (59/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.132877809 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100461626 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.260383557 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.135342555 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101210092 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.100872737 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.295027088 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068379134 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 0.067530224 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.259836593 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.090116271 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07456099 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071387396 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.102565548 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.104242616 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.096871474 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.244688725 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077883136 seconds)
    (77/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05365088 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090200266 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112562517 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.25923731 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083238989 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.27219169 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099028154 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097199002 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089497332 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074454358 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075250543 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.178409194 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.17581507 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129515117 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055229852 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082675681 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.092856662 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054060806 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054761959 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.091654442 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081296105 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.244350293 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.17958107 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074976497 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.115984879 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054252277 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101666873 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075551252 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066984681 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.172262871 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.053194127 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076022564 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100024799 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 0.165089368 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098345309 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069246965 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075381693 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.257772182 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162398553 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075589456 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103229389 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068297063 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.203598939 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067560511 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.096964664 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09148274 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.097852471 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.101819922 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054152908 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.1120372 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.143099312 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.053714433 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080703449 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.132838724 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055338224 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.098492786 seconds)
    (133/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073051024 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077483187 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146923773 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136427445 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07848255 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053692048 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098221127 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071524172 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074655984 seconds)
    (142/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106253221 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.117132486 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.098278257 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068823741 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064241951 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.091290669 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076722535 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.258299099 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167783752 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071460579 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082361256 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.101779621 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079105656 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076181536 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072972712 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076790634 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.273240422 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.075065285 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.05561989 seconds)
    (161/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.12120309 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.256368213 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142440259 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.065432973 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09152578 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.143123769 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.200325164 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078857692 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076298682 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054517057 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.103265667 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.252789543 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19970197 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.246971221 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149899497 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097176705 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068560418 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054305342 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.16259995 seconds)
    (180/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.111434269 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10027503 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.257443652 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096035438 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054000681 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.10219777 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075120224 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.118918944 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.270318396 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055170568 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076804212 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054504351 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.206208373 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078671926 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097191265 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077775791 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068075089 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.090998378 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097467295 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052715332 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092467889 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151064773 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.087614639 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172827009 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.087234767 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067398712 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.100489315 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.146262339 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136683747 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054997498 seconds)
    (210/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068885715 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120932883 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052460703 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109549156 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.138912907 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053514366 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.242571737 seconds)
    (217/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082088817 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099628907 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077505883 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156911427 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067771257 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.263413757 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068671554 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 0.155224775 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069214747 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073094638 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078415377 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.263173361 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137183689 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093126808 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069346689 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07319162 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092905237 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053461416 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074834617 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092464363 seconds)
    (237/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071357547 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053664291 seconds)
    (239/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.077240902 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067739036 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06711685 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16657168 seconds)
    (243/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074642536 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.077507415 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136252208 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09259079 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.054833159 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.120344187 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.144092628 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.095178371 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092662119 seconds)
    (252/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09361113 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056825453 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06911088 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075780616 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.2225191 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205559177 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090431848 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066407519 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069945321 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.097512604 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053962388 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.068431119 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.09946457 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054006387 seconds)
    (266/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108892657 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.077458162 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074464314 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062519627 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13336642 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081809366 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099278163 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071220168 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066966022 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.11628296 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054454752 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052334928 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.095004973 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079735323 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075854533 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.071196392 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.0536611 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075416709 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077742938 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.0668338 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.090025056 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.055128184 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091234506 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.090116916 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053171201 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074934951 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093554398 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068531887 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052798301 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098024194 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054129782 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094803213 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076057625 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092784107 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076810465 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070520912 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053058014 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.091783247 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067916836 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052650201 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103652151 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074587984 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099364163 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069794053 seconds)
  done (took 35.985198788 seconds)
done (took 36.9935163 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085092614 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118329285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078490041 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.118796086 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084152958 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.103749151 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076386796 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.104406642 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085414916 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.107802174 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083841945 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056006229 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.101318059 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078521657 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101511969 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096480494 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10497015 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075406664 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075550056 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091963369 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07635296 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.091777439 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070731315 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056044963 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.104176741 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074862367 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097476514 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078986648 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066554397 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.092360874 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071837519 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074485271 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.091756672 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081001097 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.098855189 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077475627 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100592575 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079695889 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070022991 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.091094952 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077439589 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066619016 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.098586142 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075846057 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096001534 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074328373 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075949101 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.106503823 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094817385 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094086773 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076167604 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.103216616 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080204593 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.096495521 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072850671 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076157627 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.096319562 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096512486 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100473015 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070882029 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075449408 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.101428136 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073799 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099820438 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076983542 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100027431 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080955554 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073662675 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.101473887 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075183474 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092364046 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07800927 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071525699 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.093339432 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078983355 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078358063 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093564498 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073971704 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098214934 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075307695 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06682452 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094304647 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070383897 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073585828 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095405227 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057192146 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070836901 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.099181205 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067400465 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.100410277 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07453944 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075218055 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.093945005 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079984311 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.089830774 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074066068 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068406487 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092235151 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070764781 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071587113 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.091828242 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070357408 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076098304 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.09422871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074624109 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.106416116 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068040935 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074199268 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091544009 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068182722 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108326641 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078811086 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066779774 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094797198 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067803941 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.098009944 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068711991 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067479242 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.091821969 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068888645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074343225 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.092502276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070767434 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.074846558 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10602781 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069702094 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.095256414 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070737293 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067118913 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.097655487 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068106021 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067387548 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.094825126 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065596354 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092793204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069878207 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075324683 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093551653 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077766973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070251698 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101709004 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072335738 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.096800615 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075150106 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066643886 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.083843323 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071072448 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069522756 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.093872224 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068249037 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069069179 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092196341 seconds)
done (took 13.740726989 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069299281 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.177484618 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131816849 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100146919 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.1162236 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067957506 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.104709994 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.134259684 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071441218 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.132553215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091144125 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.11171902 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119800041 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.091408562 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068192648 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09495766 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071734461 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.116615306 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108327487 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.113687071 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149118242 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068626296 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127086705 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.094306611 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.117587985 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122113054 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069805343 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072027397 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096450588 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.107250228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.114266699 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07181716 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.092401772 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105379039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124108814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111848006 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069718836 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086740865 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094031997 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068037184 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12077571 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.127688045 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.086059034 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109886786 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072435879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094139132 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071133042 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112116541 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.095302995 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108117614 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.091441204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141602455 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.096007998 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.08621477 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.091353459 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091597916 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.110391977 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070346058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.092354409 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071456919 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067049965 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.096096441 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.092480181 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.121603945 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.095763285 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087650111 seconds)
  done (took 7.619588414 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088401018 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119397621 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088587233 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111276824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068872127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067972495 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.093675663 seconds)
  done (took 1.70826867 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.07018276 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091377432 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117082943 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092103948 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11430943 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090162613 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103649083 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068834647 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.112611862 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07045769 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113519391 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110346519 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.094170347 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078046463 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.118421097 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070422324 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093002257 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094180013 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072576821 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117829953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073185367 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114049668 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.07269889 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068650587 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108791419 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069293336 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.143398921 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073851033 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094147848 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073436582 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06699003 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146787391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108257497 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08129753 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068071567 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.110329442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084427215 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092207337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086918595 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098701821 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084489025 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069116639 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096090366 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067507132 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097974093 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08219584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069962656 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.095250424 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07260523 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114406721 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071027085 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083394841 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094325256 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073522254 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093895053 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076383395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078814048 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.095600268 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091046867 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094601599 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088391539 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110629226 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085542851 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109717406 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073534305 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083032187 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10976725 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072435732 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094779574 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074499206 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085808195 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.092332976 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071458505 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105244518 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071994633 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092569104 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.119063129 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070243707 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.105034905 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070078251 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092893799 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071115536 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093289663 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098550783 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06989303 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097333841 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073306478 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067025003 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.092933651 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073141965 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067040331 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.095438367 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073234377 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069176957 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09695972 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086743615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.095072933 seconds)
  done (took 9.70717868 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073226905 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0701683 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09596611 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071034811 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069680833 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.094746055 seconds)
  done (took 1.552658344 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103599195 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096656836 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084924713 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099203528 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111428182 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109487858 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.0861398 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111448802 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088442745 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.108086421 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085460098 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110671978 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091151583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.101208461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085662839 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.100582571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086390146 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.104113461 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081843564 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100647338 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092023772 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.101059457 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077611297 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110619667 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073713608 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075191583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.106464349 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082334731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.107076404 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.109604495 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077628403 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072460238 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09996712 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086295222 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.110835428 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073737714 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.100772782 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074031554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10436782 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073670049 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110389349 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076967946 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.106106725 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075250383 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.110766266 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075100408 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.099226829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080929263 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108898172 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075440688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097792347 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076571265 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073449405 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.099208718 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075632467 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111024355 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074213295 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.110241769 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07597207 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.099667096 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074252003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096734739 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086212591 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09762314 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084379519 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097425534 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075754044 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074712396 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102642043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075315485 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.098771276 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07313059 seconds)
  done (took 7.694428559 seconds)
done (took 29.343422535 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668321173 seconds)
  done (took 1.745412249 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.801937057 seconds)
  done (took 1.880703251 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.254712539 seconds)
  done (took 17.337547292 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.661321004 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.839361107 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.85677998 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.166780852 seconds)
  done (took 3.602290314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.916327453 seconds)
  done (took 2.014480807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24948676 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258816857 seconds)
  done (took 1.592792797 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.77618602 seconds)
  done (took 1.864753884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.31501908 seconds)
  done (took 2.398012165 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.344925803 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.191138573 seconds)
  done (took 1.628180245 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.541041833 seconds)
  done (took 1.63191057 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.044476856 seconds)
  done (took 8.139439497 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237662032 seconds)
  done (took 1.342987701 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.277991181 seconds)
  done (took 1.375016627 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.384927364 seconds)
  done (took 4.480527359 seconds)
done (took 52.124089749 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081535754 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083014505 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108733259 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080987895 seconds)
  done (took 1.445664639 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082078777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075526569 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105316662 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07446011 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.105605564 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076081271 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102205916 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080878548 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073810855 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102158196 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075111092 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.099948937 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078565197 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.101584059 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074286837 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078042823 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.104279996 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074772588 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.103616169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076848103 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072473963 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.103054232 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077930643 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099373655 seconds)
  done (took 3.204201912 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082074421 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075240182 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102208951 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07546174 seconds)
  done (took 1.434847076 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080595667 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.118807173 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093988725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103731673 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097464341 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114257608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073080637 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070568517 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.099498472 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080116909 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09389716 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103638944 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.115908182 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079092694 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.105883105 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069766546 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.069856835 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.116489903 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078542581 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.105991802 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073588406 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.103199801 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072160374 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092745616 seconds)
  done (took 3.321123571 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0806425 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106162742 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.107852971 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091164458 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.121592891 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067043864 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.105020073 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093447292 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.156496594 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067040427 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099104408 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067956197 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098795272 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069592167 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078733336 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138896621 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140367152 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072845171 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09957371 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.093582537 seconds)
  done (took 3.066449591 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079861509 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071785977 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.092801119 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072393985 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078065966 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.101077213 seconds)
  done (took 1.607622135 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072177046 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069409332 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093615526 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069930776 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073099869 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094889027 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069219584 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069282624 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.095327176 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07003099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.0675887 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.093771782 seconds)
  done (took 2.044930667 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464336241 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071131222 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095265318 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069461122 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073260257 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.094015738 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084540194 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069341841 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.119634013 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068527097 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.094603202 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071265682 seconds)
  done (took 2.487106199 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278197485 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081038972 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.342248187 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173329185 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145394366 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16328787 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10722055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146574179 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20654831 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143726636 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234843777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210131031 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139652672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175465291 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119370469 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13842925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195864786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231120215 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134401214 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209984752 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217162319 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162965734 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188332019 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133587282 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141162615 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151814414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09935105 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085192862 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243972071 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168627744 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212054787 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143886939 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124814263 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244072765 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207031062 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206128101 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167586164 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088022394 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162798669 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174281318 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.271537755 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119119017 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230767709 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138720621 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085721842 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179086547 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152213608 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.153060221 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.142574977 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119229292 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208852471 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225698169 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199490083 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090914618 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142458809 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145510661 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.150507195 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133659223 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256449775 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229646592 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167210708 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073138068 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126821906 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195355933 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191722733 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148781602 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161899441 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124157239 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17784542 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195666938 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148568651 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21043904 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16448899 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119537504 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15376571 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177525359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161775698 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240900933 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161255086 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1012926 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158780588 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132281434 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085143652 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17286561 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077905755 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244480798 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128911246 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144632061 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116504253 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140532496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142327163 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231946425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212496827 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111500047 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094132569 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108756528 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156162455 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212824467 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117077133 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11395422 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181064135 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083582435 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174817696 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.104268604 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15975524 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080519976 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185642424 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170731736 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078708554 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159403565 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13341328 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132626955 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172860048 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231818959 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094411113 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112912057 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237728754 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164986803 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137616363 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184605026 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223575727 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.109852627 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133027503 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213332912 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257307361 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093768162 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234744031 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137414341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086796844 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.118627097 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161296214 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146672563 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155446411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111451583 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16254116 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23560042 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079763861 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126011108 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174260299 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08445899 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111968024 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147687468 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131949989 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099036043 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133044196 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.142094362 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204027415 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163545819 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114360019 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188059427 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130512594 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207086841 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120845948 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.135785247 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11025887 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099914456 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.172984876 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228721146 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082953522 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238729448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162115917 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136121287 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155645111 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111216042 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179608642 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083051859 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098476813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181643157 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144984022 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143075464 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193664695 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137391513 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162874357 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158470875 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197705835 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170921552 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169441922 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139273252 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090021525 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146067912 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18874638 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076722448 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125432893 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087359528 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13557918 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126876594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110693147 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182763139 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163176007 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129452668 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146301129 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101873045 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216723507 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079819891 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194756319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154563981 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099931116 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224988862 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199815459 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198723988 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131479843 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187499211 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072871949 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103809415 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118772161 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166153385 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086620857 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114616551 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151467212 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186962954 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190455107 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177974331 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141966486 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157770972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19792218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099813913 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121397316 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216614015 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162594939 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139630205 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119115985 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129671203 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184197572 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138051184 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258512246 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150281205 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160341118 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220176972 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133675923 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08496839 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13702099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176952866 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137645809 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219741113 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130897056 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094456436 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14388993 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110951534 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137637401 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165034375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15435934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171863707 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155882875 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197732261 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081744289 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15119091 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15815166 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157745821 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.093459835 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156747904 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233559784 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100612284 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153269951 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224627112 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081657548 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.157862645 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250324289 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21106415 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089385356 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142416309 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157023443 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165941504 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152966404 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205333287 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142112331 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17315992 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143954162 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08987423 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119303859 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129693406 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113817352 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127951098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14592996 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152259852 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.127066003 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169313164 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146157369 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143502437 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154347463 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129075679 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095559503 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130625771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247415694 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157184922 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250697578 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105423719 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.219239703 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240292519 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078612221 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110323294 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083896324 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20572265 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090067877 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170930265 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.12876532 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137583751 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163538302 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181522047 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128840936 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070373882 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143479403 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198502816 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118755487 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131374842 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139286243 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233979742 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109601529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110704615 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161803367 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135593785 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109137773 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248854332 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.091547123 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101382289 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106328556 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08385089 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16686765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226275442 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114525027 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135055006 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152916227 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184627861 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168095539 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131847351 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104123355 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146657948 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213083728 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168401931 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096046114 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147927759 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195057509 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200929304 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138924688 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127476779 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243233535 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200390685 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.23585186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.118746241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151699709 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150678026 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11956703 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210828129 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111804262 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213477329 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11492434 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175845013 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153952614 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124840395 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16457663 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.127751935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092496968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217135693 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156197992 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113284179 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083770436 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149021378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158801845 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136750485 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.104343494 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181542473 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074753283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204255318 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212170665 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112963709 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139129998 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101050639 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114038736 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14008363 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137032055 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117106433 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.126666845 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248173221 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123923524 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192603894 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209539115 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148979492 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177141861 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133964897 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670548597 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107789932 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198086734 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153916066 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252643798 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130935318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155009273 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144985321 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158565708 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181247427 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140003298 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.210162932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16873644 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.182946345 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084450277 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137128871 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146568142 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119315563 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114885595 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148812154 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150109023 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134136745 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157237064 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192515252 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087303242 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128380636 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201047607 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154624776 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212368557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179703287 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115983307 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155330942 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182006015 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111416384 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159319622 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22738611 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143586341 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105105821 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112960711 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140868884 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245049224 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07728896 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23412286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16072208 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146477254 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14901665 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157314589 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170896152 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14119536 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187887062 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102207512 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147088383 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151530363 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116714651 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080595895 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140467022 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147630136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.132235005 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137219742 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125753924 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221992051 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074178657 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127689629 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135111608 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184002931 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251776918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12110699 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086899091 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155196588 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148450687 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151300018 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187397488 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.087671496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113430107 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087054471 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.143777028 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146147962 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14997459 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110703761 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146112614 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240573605 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.115044268 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231041581 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128898021 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142561247 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07228352 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111175417 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100957573 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128377804 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138902281 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131127674 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218672993 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.130172283 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.123271914 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125376705 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078190953 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086030939 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194832792 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146831297 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158887049 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101960639 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.094085418 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142613833 seconds)
  done (took 74.77191575 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.140379751 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.11062224 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.125124726 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.180288188 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154490116 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246953857 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.188332865 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232415091 seconds)
  done (took 2.564204639 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072169166 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.123784429 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106485576 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.121105986 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.095601844 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071670154 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.317541081 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112696384 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069153455 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121298245 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.124674689 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.097205315 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.500522064 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067448568 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097723192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.0905655 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072073615 seconds)
  done (took 3.441536871 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453758275 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.652403853 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.474563125 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075584555 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.974313318 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092217576 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.510355151 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.169845445 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073894882 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442825407 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.747531171 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137909823 seconds)
  done (took 17.995235169 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078387585 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07065449 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113414443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086719491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100801425 seconds)
  done (took 1.644779384 seconds)
done (took 120.12310062 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083260104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.373913834 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055086494 seconds)
  done (took 1.65279424 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087632375 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086462447 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115829622 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085242403 seconds)
  done (took 1.572830295 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077877914 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078382252 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115041368 seconds)
  done (took 1.465387295 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299544691 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17083887 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093803346 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086595516 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079012232 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106846351 seconds)
  done (took 1.468546712 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076577581 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076906434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102867066 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078704737 seconds)
  done (took 1.526246104 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080088985 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055017557 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055651551 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085174609 seconds)
  done (took 1.473229839 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094478928 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.108865899 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085147446 seconds)
  done (took 1.481892811 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112407604 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.116050477 seconds)
  done (took 1.425716137 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08607783 seconds)
  done (took 1.278059866 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096670036 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147078356 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.167961688 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.142068572 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.177712809 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142546025 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089819059 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.120709637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.108239224 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.11885092 seconds)
  done (took 2.509332193 seconds)
done (took 17.690620355 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082570079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.492591801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364048762 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121047904 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672513277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357723678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.013480598 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122081961 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129379593 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.099415706 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085937913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.679015828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974621192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.447975285 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.961891382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.351197832 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654429055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070507013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097233351 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070924893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.995793832 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071785362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069844462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09702217 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653053412 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.400262289 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072324184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32565522 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098488535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073705299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35662329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098285939 seconds)
  done (took 16.350939702 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07384851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147744641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077490294 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085305376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102209788 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071967953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101346287 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071695824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160701381 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07025641 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115237515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070379472 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101159655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071985662 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088686082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.098310404 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070611842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097748415 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071347784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070502966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.117755808 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069942054 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.097461024 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072541082 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07027764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111063448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07137775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096924245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071722702 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072110051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100838517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071224576 seconds)
  done (took 4.045945012 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120179689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.15940549 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077680264 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132992414 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142998288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073903222 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175994603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097377984 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.161848999 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069981037 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.115760063 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070195364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.133302297 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07135301 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.118455704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071117115 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098259054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073139449 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070052902 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098867886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089661982 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096898651 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073058957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070577888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.098651399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084808505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.098212661 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074565775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069486116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100549557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073554325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098441112 seconds)
  done (took 4.370346478 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075716401 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076534962 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112586937 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08602373 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098501981 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075520405 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074297154 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.099939798 seconds)
  done (took 1.901511204 seconds)
done (took 27.86131098 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083555966 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072202642 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10330537 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083497417 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103132287 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083052689 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069719633 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105018797 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077312377 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074239975 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.106974005 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069577213 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100983411 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07018773 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076316096 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098752121 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082584104 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10152192 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082939056 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.10973319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073580565 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077166141 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103954298 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083032964 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108941726 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083191755 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.10870565 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077729485 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070740901 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099785418 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080973572 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114492605 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072310798 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081846521 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099273024 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069912074 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09575232 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071251509 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08193029 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.105231659 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074423144 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.104833981 seconds)
  done (took 4.893942091 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092962288 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091995188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.117010508 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063994746 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097857944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064610713 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.091789289 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090976624 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060837663 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118270519 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058776649 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059104972 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.060289233 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.084360211 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059647581 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057927968 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090116449 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058994143 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059381448 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059508428 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08812417 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055841864 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061165576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.089042721 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058418166 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063751159 seconds)
  done (took 3.164655035 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078681211 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08458861 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118705764 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130843864 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.137414177 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077242903 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110093505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089073613 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.115436659 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070004254 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073282002 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.128065045 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088390013 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104497063 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069942713 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.122836466 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085609016 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071080045 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105290726 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091269582 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.114718559 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080547924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118821416 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084118586 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068636005 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10065323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073809721 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.111518812 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07621404 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078529456 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.10319123 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073372587 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.099253878 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082546953 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100242337 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073875234 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090093889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108232108 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078911721 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097181028 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075557508 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070779337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.119128458 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114410398 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.098067215 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078105372 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076804145 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.108958857 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069940899 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.117022686 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079657442 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068487329 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.101713639 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069481947 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096871534 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084584653 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071057125 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100993173 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078938282 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100559437 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08371721 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073285882 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.114896384 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070578774 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104844046 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070340885 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070542703 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.096853051 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09205302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097458646 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112544316 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097904662 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072824278 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078187391 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.105868856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076007711 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068904982 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114004824 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079282882 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.101768304 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078319944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.099624818 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074678559 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08807568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.10001766 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071234746 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069579848 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.10534116 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072928308 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098189335 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084853784 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069264912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.101563421 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086689351 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.096638974 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071888336 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07522721 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.104073132 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06889578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109954426 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075980995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.096804825 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080876328 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069658558 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.101438277 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080040985 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073276699 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.097930738 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074415269 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.103836712 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070790733 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070310815 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.101678722 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071471474 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106690867 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077239582 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074550676 seconds)
  done (took 11.712728946 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203450721 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.193047719 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072514593 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.185850467 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081268091 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.111635315 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188501959 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10168011 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.100426215 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070371921 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099403696 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110778196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.131942748 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147273247 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084054145 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069366228 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.118493221 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110711052 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.189481307 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.182166799 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120154362 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077736931 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101020033 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072163242 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071861813 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109514725 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086647469 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111206353 seconds)
  done (took 4.533140804 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085775829 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131031999 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076836174 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118750757 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096701129 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069503467 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.104727111 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071406604 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110389306 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083548017 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098688483 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078244588 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075940489 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.108725298 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070353836 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107877143 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080548407 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070517346 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102456397 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074219389 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104516589 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084125621 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10240923 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070878547 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076528799 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.09819753 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067705048 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118530516 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069743354 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.121387961 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068402247 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076105263 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.110120907 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070881214 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097784079 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072635612 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071454499 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100745306 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071750485 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068090249 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.097901327 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059315 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095960882 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085140502 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075462882 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.090614819 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076662658 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103466863 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075954177 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067488324 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101521669 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073501644 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.0725054 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.106555607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074843847 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103647523 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075090397 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076467501 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105776017 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.0729925 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065567698 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.09763091 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07550544 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097559419 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079137117 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075066759 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097804606 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073132985 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073332252 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.106853306 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072170806 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.100758399 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068864195 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071962253 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103892989 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074770784 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099678685 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.07038658 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069525304 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098160055 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058194783 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06930356 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.082897795 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075339302 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068508596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096793787 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073459991 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077970329 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.113249161 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071190531 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.105248699 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070401295 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.096741392 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074405795 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064637307 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101318184 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085468519 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115608792 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070270267 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067409655 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.113608738 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074296489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.097658976 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06880678 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076141898 seconds)
  done (took 10.206597393 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096923862 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093565054 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.102177985 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083532465 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124724814 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095089443 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106484842 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077005904 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070531125 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116297635 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070846839 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106081869 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075016488 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077891349 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125859267 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077304941 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09991898 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079755854 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077499233 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135971106 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082606249 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.114181443 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080992936 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.09861383 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075773781 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082164675 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128476146 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080223976 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.107928541 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085536046 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080752173 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.127930182 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085740327 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.103952614 seconds)
  done (took 4.467518701 seconds)
done (took 40.180655276 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.324784814 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.509475172 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.279142627 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.219573491 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.327717135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.304985455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.291812913 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.282077874 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.995480477 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.280071744 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.537576666 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.954611175 seconds)
done (took 60.534037629 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.293347732 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.41861151 seconds)
    (2/2) benchmarking "String"...
    done (took 1.560940107 seconds)
  done (took 4.208726389 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.626447576 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.272012085 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.567880398 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.293694358 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.28129604 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.726138488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.986820361 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.149570921 seconds)
  done (took 28.500432133 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.285032071 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.660735949 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.787643757 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.801361896 seconds)
  done (took 18.759764197 seconds)
done (took 61.611950846 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.291164269 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.320110546 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.296709157 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.266312313 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.394392283 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.301617433 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.624750259 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.5217464 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.285621886 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.270897683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.308202576 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.282380573 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.293471327 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.638531264 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.296088067 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.281715295 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.354920925 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.74878556 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.672119462 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.291344114 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.311825715 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.304286339 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.311831693 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.282755674 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.300851237 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.283598339 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.282513146 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.300151388 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.625076035 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.287664014 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.380867922 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.336826335 seconds)
  done (took 193.976720661 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.282209483 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.439062408 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.540748793 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.311363603 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.836647455 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.482963339 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.420704826 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.91545778 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.30188301 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.310170612 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.420297216 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.283263617 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.466974222 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.266949324 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.291586297 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.291677556 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.629850716 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.490522849 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.299802378 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.557413834 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.292189948 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.309529908 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.246578428 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.400696517 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.293666273 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.349631905 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.294481629 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.313849584 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.474368771 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.5675691 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.288698253 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.309644346 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.879258889 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.141814208 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.28288312 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.290001465 seconds)
  done (took 152.80432941 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.573301658 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.283067419 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.282854244 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.283663847 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.315069324 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.284029635 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.831796247 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.834922162 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.791882722 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.736018943 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.346145903 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.510027874 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.284763234 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378337584 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.295795119 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.285639091 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.299433089 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311263861 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.286608593 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.284669504 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.832514433 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.29855765 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.3295712 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.292891351 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.285529643 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315402831 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.679519185 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284525067 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315219102 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.6026399 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332789263 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.285641267 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.60716654 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.155864468 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.394163066 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.286701821 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.316630965 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.285600655 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.55398644 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.285184464 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.286431903 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.288539973 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.892591584 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.28679678 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.833566588 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.287925448 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.185986572 seconds)
    (47/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.286435953 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.286740085 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.28662168 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.933582373 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.83185223 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.287791397 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.285975086 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.28848309 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.285987128 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.286613337 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.317230044 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.94879429 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.385663423 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.287038783 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.28917204 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317461621 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.286247521 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.286553725 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.287039941 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.34454587 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.343924704 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.511969193 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.066925103 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.838651006 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.289682896 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.380111886 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40591705 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287152618 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.287547833 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.288279969 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.287613122 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.287604346 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.395190321 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.287325529 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.69048901 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.294697025 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.289015807 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.347522998 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.381009775 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.287675261 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616860011 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289320095 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.287192247 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98705586 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.380532964 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.288024715 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.287936004 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287543986 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694307118 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.840179759 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484860777 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.291312867 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.198633464 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.293454222 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.707763053 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.81779568 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.880339908 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.289982461 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.396349153 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292771157 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.288125447 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289637155 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.287971003 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.317782401 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289277595 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.343841963 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.288917796 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.685914366 seconds)
  done (took 356.431418076 seconds)
done (took 706.00956367 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.981110852 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.921507712 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.058614501 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.93631525 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.918141896 seconds)
  done (took 11.047751677 seconds)
done (took 12.278664134 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.480843581 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480389165 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.348640975 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481872011 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317148861 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499358338 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.460650166 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.308189635 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.392002522 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.366839465 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393737338 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.337811072 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.31597766 seconds)
  done (took 19.415138661 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.655766912 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.653687774 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.352678687 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.655036815 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.329887461 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.654683253 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.515241882 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.544134636 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.522373381 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.302723625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3026517 seconds)
  done (took 17.721682362 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.673134547 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.667616068 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356703864 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.6662976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330895454 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.642395534 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.517353965 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.528800449 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.509832146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.303326168 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302943487 seconds)
  done (took 17.730994367 seconds)
done (took 56.098021675 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.300103761 seconds)
  done (took 2.532540452 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.335706036 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.502464271 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.315770447 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.303448365 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.299662905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.299487125 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.304209751 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299403181 seconds)
  done (took 11.894722806 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.296046717 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.298965467 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.298846239 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.297269598 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.2966038 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.298455487 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.299395108 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.296627674 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.299442689 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.298011721 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.296598739 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.296462691 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.29950771 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.298827038 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.296839509 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.299835067 seconds)
  done (took 22.003143796 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.298195627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.295922095 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.296531945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.296989616 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.297551195 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.297889107 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.298005958 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.29540772 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.29624145 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.296831692 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.297424558 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.296663049 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.298622949 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.297208253 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.297692963 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.298020815 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.297756129 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.296997093 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.302690439 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.296714734 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.298124973 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.298102753 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.298286057 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.297975814 seconds)
  done (took 32.379295222 seconds)
done (took 70.04173812 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.343928612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.920267255 seconds)
  done (took 9.499225973 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.301073257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.299982862 seconds)
  done (took 3.836559781 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.301509756 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.300052218 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.30056874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.299852697 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.301144106 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.301010429 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.299880364 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.300773597 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.299676971 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.301185203 seconds)
  done (took 14.241389298 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.301052801 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.301654675 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.298441164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.300500603 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.301962849 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.29799996 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.301543367 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.302134042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.301159253 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.299314388 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.302493635 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.299271481 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.301584722 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.300051183 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.302704416 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.299549557 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.299253916 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.299997308 seconds)
  done (took 24.64812021 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.301591932 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.302422836 seconds)
  done (took 3.841073651 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.300253049 seconds)
    (2/7) benchmarking "second"...
    done (took 1.299944964 seconds)
    (3/7) benchmarking "month"...
    done (took 1.299817627 seconds)
    (4/7) benchmarking "year"...
    done (took 1.299089734 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.299031926 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.2992134 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.300048248 seconds)
  done (took 10.333841492 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.302781248 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.486243454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.563410657 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.872430556 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.304636514 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.307051816 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.158483473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.305698451 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.308004185 seconds)
  done (took 14.846023011 seconds)
done (took 82.481682143 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.308895014 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.296345167 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.17784706 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.302895304 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.311479443 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.638828432 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.307146907 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.421090719 seconds)
done (took 38.002804088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.314408997 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.296057869 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.297100098 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.297719676 seconds)
  done (took 20.129295688 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.287662484 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.295720404 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.285674161 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.32577253 seconds)
  done (took 18.434489492 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.919090177 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629428081 seconds)
  done (took 4.786005409 seconds)
done (took 50.902651698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3045861 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.303868165 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.301415399 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.302928816 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.302023959 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.300778 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.302354427 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.303951016 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.303678353 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.303276845 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.303986552 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304023652 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.301871699 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30165242 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301233874 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304330329 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.302122862 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.304162401 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301049842 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301789581 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305311327 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.300300272 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.301789961 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.302034762 seconds)
  done (took 32.505218723 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.304966144 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.302687026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.306540845 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.304340934 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.302739894 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.304715158 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.30497931 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.302455597 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.30426383 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.304686657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302228059 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.30195803 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.304877198 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.302402997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304638275 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.303041317 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.30463416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302015492 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305996081 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.303043418 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.305818261 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302512358 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.302942245 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306101283 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.302479394 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302536567 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.306104195 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.304017985 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305439971 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.30429444 seconds)
  done (took 40.362279365 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.31038156 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.313518275 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.306295187 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.306066814 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.307249779 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.306301114 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.306807665 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.30734779 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306110759 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.305999142 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.306592845 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.307249078 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.30656558 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.306220622 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.306875231 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.308147833 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.306406706 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.307841543 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.307809174 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.306645458 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.307188596 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.307489688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.306541047 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.307662787 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.306537081 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.307916008 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.307067153 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.306974194 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.306602179 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.307407646 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.30723599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.307373829 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.307322814 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.307626354 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.307710085 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.306938219 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.312748118 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.315265905 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.30715315 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.307865205 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.308117749 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.308941747 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.308234809 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.308043033 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.308288739 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.307793876 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.308300269 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.308240557 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.307832634 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.308408065 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.30861362 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.308182057 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.308519701 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30905125 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.308245544 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.309508074 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.309363743 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.309332431 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.309813724 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.308770678 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.309436906 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.310179073 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.309619475 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.308026505 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.309492857 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.308537706 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.309688299 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.308677607 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.308605118 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.309676856 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.308971309 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.309265784 seconds)
  done (took 95.43528898 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.31068572 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306811625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.306518045 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.307885105 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306680555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.310129767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.3069692 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310125964 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306819441 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.310587117 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310455443 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.307295479 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30659508 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30987036 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.310173516 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.307352807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.309880314 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308341145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.309621747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.310841482 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.310812201 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.308105983 seconds)
  done (took 30.038619005 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311540235 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310555984 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.307987377 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.309643504 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.308175139 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.310406323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310922333 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.3103164 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310008318 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309535124 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307611882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310335401 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308826385 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.308368638 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308966942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.309125568 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311457261 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309407382 seconds)
  done (took 24.819592352 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.309393378 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.309062358 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.311341097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30862112 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.308362623 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.311319991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30890675 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.312347439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.312128251 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.309325686 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.312546507 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311468862 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.31199654 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311283727 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312107642 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.309926328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.311727025 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309403199 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312941468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31023885 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.311008054 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.312053451 seconds)
  done (took 30.085271068 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.312592019 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.31238552 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310397202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309762719 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309914156 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311724924 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.313253058 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.311149086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.312982572 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.313496929 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310925094 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312497491 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.310154092 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311616297 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.310768968 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310595549 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313661398 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312225389 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.314009339 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.311118139 seconds)
  done (took 27.48387684 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314825693 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314983168 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.314795674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.314197777 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314777376 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.315845935 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315095723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.315096557 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315130909 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315842638 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314690257 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315521951 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315240727 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316124664 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.316035501 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.31529277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.315347228 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.314854119 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.315099513 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315955324 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.317279272 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.315692427 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.315992636 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.316113766 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315648379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315480462 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316163514 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.31664988 seconds)
  done (took 38.085240652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315952266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.315805884 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.313967963 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.313074764 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.312820541 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.312692329 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.31329957 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.313373918 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.316360554 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.312786692 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.315336258 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.316443534 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.315694413 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.315878328 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.316425388 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.316005046 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315761574 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.313442852 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314816806 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313872373 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.316125108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.317079279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.316260257 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.313165433 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314570499 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.316281749 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314686366 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31403784 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317101862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313546816 seconds)
  done (took 40.700135068 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.335564296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.335455127 seconds)
  done (took 3.922466388 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.314657267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317251805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.317454896 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.314516547 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.315020888 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.317793158 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.318478927 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315429214 seconds)
  done (took 11.78259111 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.317480039 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.31862212 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.316662615 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.318435544 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.318417494 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.317980535 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32361335 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.335137211 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.318153967 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.319482768 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.324622122 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.324738107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.320512573 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317921111 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.317487804 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318295563 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.318787555 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.318664539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.31873528 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.31928845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318275767 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318903962 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320052577 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.31610471 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.319986809 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.32903551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.322505738 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.319369354 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319249775 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322143823 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.317924611 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.317267786 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.319552905 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.318788102 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.319536722 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.320065117 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326810437 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.337170692 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.324808209 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320407574 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.321518989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.318057437 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.320094708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.320879588 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321144459 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.320201458 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.321014938 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.317623263 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.319665607 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.322844008 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.325785158 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318722768 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.317739968 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323964905 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.320636118 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326901534 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.33874585 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.324266708 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.329259602 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.330094348 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.333160978 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.329041468 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321655987 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.32179865 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.330453582 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.344118496 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.327358689 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.335659952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.319372767 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.32243135 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.327723018 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333695274 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.331101433 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.322476156 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322217506 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.322134143 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321392434 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323092915 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.328631634 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.340800779 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.322339803 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.322544289 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.332194378 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.344303119 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.322024805 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.323432628 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.322831322 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.322560227 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.324173999 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.332547411 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.340016859 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.322340649 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.320954996 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.321868418 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.323391827 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.322644273 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.321887262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323404933 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.320029186 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.323608689 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322362734 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32602032 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.331784487 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323656819 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.324029506 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.32764547 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.323802952 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322384039 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.329071939 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.324649191 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323692192 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.325055386 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.328429437 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.32215037 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.327394395 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.331747591 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.323496486 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.32506268 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.324398912 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.32488263 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333992816 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.347966958 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.324145454 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.32455262 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.327966835 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.336485835 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.324042108 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.325921819 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.324434072 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.322157928 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.32197809 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.326575516 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.32632202 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324029341 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.325541553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324759986 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.321585008 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.326053251 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.325500933 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.324604642 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.325035443 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.324913771 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.325599598 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.326884463 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.326064277 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.326832499 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.330572162 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.324975538 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.325799674 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.326640934 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.32325275 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325650894 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.326747769 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.326513695 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.326812164 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326681682 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.324206804 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.327203796 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326770312 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.326620576 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.327579932 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.327193314 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329947917 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.327184774 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.329153737 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.324977074 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.324898748 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.327665598 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327478885 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.326963705 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.327194341 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.325896596 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330812711 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.334501101 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327027843 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.327414506 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.329182389 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328840825 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.327186424 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32749275 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.329808038 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.333187646 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.327696098 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.333220145 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.328068509 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327351555 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.327021397 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.326907144 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.326813493 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327396798 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.331047483 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.335390141 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.339888323 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.336397862 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.329497084 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.33204782 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.328853105 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.332548817 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.331169155 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.329265667 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.328100681 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328488494 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.328024714 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.328896926 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.329369633 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.329150791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.328281167 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.329214495 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.328675148 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.330341307 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328863341 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.329174436 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329958998 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.326691105 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328678644 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32920168 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.327921051 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.326849234 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.327082764 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.328033347 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.32995536 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.329652606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.336343462 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.327662035 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.330654998 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33022676 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.328666085 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.327922001 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.329637903 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.330168942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.329608551 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33510885 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.3466576 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.330868838 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335274345 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.346429808 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.328654874 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332084306 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.32992552 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.327949469 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.333125319 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338104493 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331343995 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.330310318 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.330111498 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331108428 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.330953694 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.336220886 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.329003211 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.330878809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.330698936 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.331986595 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.328998128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.331833078 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.331617594 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.331935196 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332658722 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.331769436 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.331371582 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331930325 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.331561965 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.331109042 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.331613929 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.333512533 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.339548441 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.335767776 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.332199929 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.333286185 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.332436967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335503357 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.332250044 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.333330217 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.331890171 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34309759 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.341201029 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338317905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.333637146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.333098276 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335959208 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.334059201 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.335018841 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331774634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332773585 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.331815389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332500314 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.330356318 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.332645766 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.332054661 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334525964 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.333923259 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.336525716 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.332999634 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.331683446 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.333755141 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.333130525 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.33215787 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.331017887 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.334652677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.334477752 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334850174 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.332624359 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.33323268 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338727574 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35119063 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.334590019 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.332472576 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.334362246 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.332549284 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.333993845 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.334484863 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.336764509 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.341898972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.337485798 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.343506889 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.33648008 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.34162039 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.33424548 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338821895 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.34275391 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.333326937 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.333726628 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.334558046 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.335757125 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339728771 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.351963599 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335938491 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.339434392 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335459135 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.335905004 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.335389823 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.334414064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33626029 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.334083078 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342293855 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.354695632 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340127107 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.337481953 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.334366187 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.336083876 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.336531798 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.33412512 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33834427 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.33508089 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.33673021 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.335472462 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.335362735 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.335849406 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.335331128 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.336284786 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.333453649 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.337281242 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.34267023 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.355349033 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341325458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.336244217 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.342423989 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337177883 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.342136926 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.354580881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.33683667 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.337395539 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.337336002 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.337303436 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.33659758 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.337666399 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.337257915 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.337967606 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.340595451 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.337718608 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.338475539 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.338143015 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.338419908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.337321634 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348702517 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.361644409 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.339935761 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343137381 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.335265541 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.340461776 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.342965074 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.338928516 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.336712589 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.341288133 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348327144 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345670808 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.337190632 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.338797604 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3387869 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.33931836 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.338408368 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.339996244 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.337847751 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.338312012 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.339435373 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.338572505 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341730726 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.339694882 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.339231238 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339239039 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.340319282 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.346992105 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.339733933 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.339356957 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3400311 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.338993311 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.339341681 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.338538573 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.339595509 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339831945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339719858 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.341614472 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346099273 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.345800714 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.341333897 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.33929264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.34015242 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.340815131 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.340378879 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340239433 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.340002597 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.340379932 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.34066119 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.340037628 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34109581 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.337928639 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.341975058 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.340950109 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.340647134 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343612231 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.348320977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340433349 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.337505272 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.341916083 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340943894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.339784979 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.341577242 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.347249613 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345496374 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.352060461 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.349079538 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.345411429 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.341717869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344157568 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.349496754 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.340558713 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.342422954 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.341520676 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.342547645 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.342087605 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.344339159 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342354059 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.346761594 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.341488384 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.341201106 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348832985 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.360023135 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.342310185 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.343608526 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.346943181 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.341227723 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.340645266 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.342774328 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.342375565 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348370141 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.361080759 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343067042 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343820938 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.341349452 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.34379268 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.346916193 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.343996618 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.343941678 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.341180678 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.342921055 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.342434388 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343506171 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.340277405 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.342788125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.342669219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.345385001 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.349484097 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.341098684 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344938644 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.342646169 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.344209907 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344460151 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.343058251 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.341011021 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.341243836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.342602319 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344997504 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.344173553 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.345943678 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34286559 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.345710182 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.346441444 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344713282 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.346695524 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.354387933 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.352396186 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.341922124 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.344459045 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.343892981 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.346122407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.345093599 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.344472627 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.344229009 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.345421339 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.345109107 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344438022 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.345030026 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.347629184 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35876899 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.363007195 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344225289 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.344865393 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347875345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.346730756 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.342835623 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.345874285 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.345582496 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.348170754 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.353604917 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.345774691 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351701362 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362076508 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.347346136 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.350307775 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.347630476 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.35297774 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.349021167 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.345170364 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.345795568 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.350140677 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.359984229 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346985548 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356393194 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374648552 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.365373168 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.346796448 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.346965162 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345328727 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.347210112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.349040249 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.34818535 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.348187436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346910737 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.347141434 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.347566422 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.353180687 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.348069646 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.346837711 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.346674717 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.346224708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.347552699 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.345381362 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.346487082 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.347726489 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.34735426 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.347335037 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.348632711 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.34791217 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359056139 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.357442839 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.348253464 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.347817501 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.345163798 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.350003911 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.351155637 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357889733 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.356189105 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.34885086 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.347769692 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.348661073 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.34831684 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.345246484 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.34837256 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.348034207 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.347042128 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.34620683 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.358943917 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358429054 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.352026253 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.348195611 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349055179 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.349172349 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350452499 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34863902 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349214461 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.349370778 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.34994592 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353191442 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.350110034 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.350034161 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.352756091 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.357499004 seconds)
  done (took 797.423139288 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.347526126 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346664234 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.347255576 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.34703287 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.347387443 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.34675823 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.346423808 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.347076493 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.347614962 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.348220171 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.347928274 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346777521 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.348096062 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.347873915 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.347644022 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.347518914 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.346822915 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.346722629 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.347378059 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.349240718 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.348170725 seconds)
  done (took 29.580924218 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.351303984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.348598128 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.348666488 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351499715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.34873458 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.350251571 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.348053473 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351035068 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.351231071 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348590246 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.351508099 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351677601 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.347317259 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.348204844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349003448 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351560906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.351618615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.349454267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.351906061 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.348790417 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.351198816 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.349063059 seconds)
  done (took 30.985147379 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.352101094 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.352507805 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.350952076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.349798262 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.35236947 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.349671526 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.352188483 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.35330182 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.352908388 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.351218518 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.350723132 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.352938321 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.359732084 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.356526041 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.353112195 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.352656568 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.497084105 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.352868717 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.352747353 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.352629554 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.349971659 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.356187688 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.35042052 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.350376588 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.352121586 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.353147243 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.352217418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.352250153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.352897248 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.354031187 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.357341679 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.352972388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.352655397 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.354737126 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.35306944 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.354347011 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.357801319 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.353738495 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.351447486 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.354320024 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.362394765 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.374714374 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.355067946 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.359689252 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.35457136 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.354642958 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.357586749 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.361715407 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.352193468 seconds)
  done (took 67.786919237 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.35402565 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.35456855 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.35226922 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.3541625 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.354895798 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.354133101 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.354059211 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.353280636 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.351514757 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.351175864 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.354977771 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.351793309 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.351593902 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.354904251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.354821607 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.35218593 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.352399942 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.351713874 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.351467615 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.352427204 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.352243609 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.354235408 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.355199619 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.352167773 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.354927787 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.352441462 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.352059391 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.354119086 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.352582435 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.352825199 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.354193912 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.35603816 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.355844279 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.351830912 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.352702107 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.354903536 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.355485342 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.352678032 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.356131746 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.352365378 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.355811144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.355370258 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.35654853 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.355170619 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.352772403 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.353915685 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.353426479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.354382541 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.354204756 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.356424568 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.356241897 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.353821276 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356607481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.353667585 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.356039345 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.356344733 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.353447324 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.353975656 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.355550268 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.354928555 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.355704064 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.356875845 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.354835024 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.357638938 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.357458017 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.355019964 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.355290326 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.356854208 seconds)
  done (took 93.380537673 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357807942 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.356767091 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35686409 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35858693 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.358026514 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.357741761 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.357048793 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.357900769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.357878043 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.357296701 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.357057556 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.358492208 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.357175859 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.358302441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.35824556 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.358837716 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35856488 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.357550069 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.358525775 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357398347 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.358256349 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.358289679 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.358533206 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.357927843 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.359394251 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.358360717 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357951038 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359201024 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358382533 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.358211738 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.359204245 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.35870719 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.357968405 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.359117526 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.359776656 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.358993006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.359204789 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.360705166 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.359003857 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.359050856 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.358905482 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.359044385 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3599892 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.360262942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.35957088 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.359754943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.359074089 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.360249813 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.359719777 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.359773682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.359193805 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360071252 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35976971 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.360211324 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.361080547 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.35994698 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361032909 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361321355 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.360874314 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.360736506 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361701293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.360216853 seconds)
  done (took 85.552274317 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360286557 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.360421673 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.357771783 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.357483257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.36001087 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.358715915 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.360715665 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.361020541 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.36042969 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.36206228 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.360742454 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.358530404 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359322679 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.360455081 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.358920457 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358715058 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.358089488 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.358969333 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.361977359 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.359199609 seconds)
  done (took 28.489328595 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.359850954 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.362080526 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.359288824 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.358490699 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.36175218 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.359533871 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.36147208 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362175796 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359208171 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.362063851 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.36159852 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.362241407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359448715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.360344618 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.361950125 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360077342 seconds)
  done (took 23.068465078 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.360179822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.362229047 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.363121378 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.361868049 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.360765759 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.359618762 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.361648333 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.359779137 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.360027659 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.362733205 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.362751577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.363114756 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.362427848 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.36273238 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.360406086 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.361786871 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.360485036 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.360518406 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.362504873 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.364213262 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.362065772 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.360548245 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.363547988 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.362671983 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.361954624 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.361331094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.360908584 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.361109201 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.360422759 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.362799987 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.361956212 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.36161668 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.361738671 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.361750713 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.36354356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.361055732 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.364386134 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.364139913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.36443017 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.364701339 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.364993694 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.362482013 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.36399348 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.36503207 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.361824398 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.364283681 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.36279302 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.362781143 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.362660203 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.363524771 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.364491682 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.365294559 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.366245199 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.36538071 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.365881025 seconds)
  done (took 76.243223407 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.364905048 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.366272359 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.360514506 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.364935736 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.364971729 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.363275913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.365503753 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.362975656 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.362151114 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.365147285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.362851894 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.366406169 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.363206318 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.367107586 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.363745274 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.365042578 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.363553558 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.362825595 seconds)
  done (took 25.855837434 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.363467279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.363911018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.366494044 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.363415377 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.363551134 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.365802312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.362779762 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.365892796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.36629342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.364246518 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36427197 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.366812418 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365514606 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.365973742 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.365114328 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364905546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.36710369 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366364516 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.363577655 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.364796656 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.365940544 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367032989 seconds)
  done (took 31.334820229 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.364974598 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.366749323 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.382771157 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.408068013 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.395893813 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.365472096 seconds)
  done (took 9.584026111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365740769 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367163058 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365096385 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368715538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367142866 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363970451 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364333601 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365370979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36684605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.36501472 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365136025 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367735432 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368120249 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365854723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36771688 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368202283 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365722842 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364392398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366483276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368308779 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365820208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368302788 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365259672 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.365312049 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366459082 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365926849 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368647598 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366714216 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365714912 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367891205 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368214842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365662347 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368242191 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366692222 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370656859 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369394518 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366684741 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369213819 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370191798 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367120035 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368864786 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368163241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369424853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366486352 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370168578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366776814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367088048 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366984784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367247473 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370351976 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370123506 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366487675 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.369771499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369827314 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368971094 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370843053 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367475324 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366921449 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371183307 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36800404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367830403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370463031 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367863185 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368446281 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370759327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.366833748 seconds)
  done (took 91.566626508 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367947767 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.368131643 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367515638 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368479833 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367591802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367793066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367740703 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368090953 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368888437 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369055295 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370829786 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369215278 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368117467 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369366028 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369120967 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368730833 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.36884091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368373356 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368638158 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.373194736 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368713423 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369330772 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368894654 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369031148 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368628168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37161075 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369554287 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369472789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370163307 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369683444 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369244911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369129409 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369351209 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.369955014 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368659075 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370058584 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368311723 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36946807 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370055086 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372425383 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369484248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.372161827 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.369390914 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370195334 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370364009 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.370191901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369843802 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.370348313 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369242718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370380344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371156892 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.371188754 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.370216243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.370447621 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370158785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.369871603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37019584 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370668046 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369954642 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373640561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.371059146 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370666986 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.37390185 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.371234306 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.370021312 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.372253306 seconds)
  done (took 91.716670637 seconds)
done (took 1859.028930719 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.371345305 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.453715725 seconds)
  done (took 14.130984386 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.536131793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.488653182 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.371909786 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.372055248 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.372703972 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.394908202 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.373713968 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.373678735 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.371263774 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37166078 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.3722981 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.562744153 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.371851131 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.372671146 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.372410935 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.465031306 seconds)
  done (took 43.85865656 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.399944669 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.379469736 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.495171251 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.393354819 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.400224916 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.570853177 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.433847389 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.379327538 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.55597941 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.416922826 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.976447748 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.400860239 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.377864377 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.513813395 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.396474644 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.571533243 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.627483788 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.982021092 seconds)
  done (took 31.580673272 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.844388264 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.38708735 seconds)
  done (took 9.541245089 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.390444786 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.394367184 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.370473527 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.378043559 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.415206735 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.399061412 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.455871988 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.371086958 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.391301574 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.388961459 seconds)
  done (took 65.270906054 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.398627787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.376904832 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.3779627 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.37622264 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.369629122 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.37056403 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.377196144 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.378652624 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.159613534 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.511846737 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.39513432 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.384011888 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.377524754 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.380337752 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.376537013 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.415292279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508039043 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.377193507 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.375151183 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.382926707 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.378672024 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479274051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.421762405 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.377499458 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.510016053 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.177968391 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.383068316 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.384413154 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.491148874 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.377413724 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.378605726 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.379193241 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.381221521 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.953424229 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.886685056 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.388653402 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.404606648 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.386950818 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.377813426 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.507689245 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.379929596 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.384766556 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.372700137 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.870346473 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.54218411 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.497270951 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.632101281 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.381655955 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.38091052 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.441490225 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.380670555 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.381802327 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.40973555 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.149424786 seconds)
  done (took 114.217148647 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.403709716 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.864832829 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.542943126 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.395699051 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.180187851 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971488933 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.37363995 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.670956898 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.421492028 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373426188 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.715555819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.886389954 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.374702599 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.38139552 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.547730001 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.45511233 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.374178008 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.105737262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.374628353 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.380245443 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79699877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.391109094 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.373970143 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.544488274 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.415765832 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848709614 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.897686576 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.842088767 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.377448922 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.373450069 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84859403 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.376629111 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.41725899 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.377621795 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.655105053 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742484352 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.721249686 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.373647603 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413344383 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.376716383 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.409590845 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845168427 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.730208814 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.375731559 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.374741907 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.865052061 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.374692154 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.384139298 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.381295811 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57844721 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.330844025 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.376479204 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.904261693 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.376027233 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.72983675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.463381283 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.423076631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.876767771 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.375634085 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.471187265 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.421255575 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.375987487 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.377656877 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.379157454 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.377685862 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.734512682 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.702400104 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.376613638 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.735893675 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.84345443 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.376736783 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.909173639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.310731994 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.388751598 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.459782617 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.376138387 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.918730141 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.877830761 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.397840765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376552072 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.719659398 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.377144811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.703169512 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.390855927 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.392349465 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804403238 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.401988534 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.407807964 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.377182532 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.378010074 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.009712941 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.38130606 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.653628 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.403037145 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.37851987 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.377624135 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.382167825 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.377990877 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.392189161 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.385423271 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913365554 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.38567119 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.690768558 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.397916236 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.386216666 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.379031627 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.378899122 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.378896712 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.596621672 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.807864672 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.378389407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378202125 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.378905581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.381810787 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.523073321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.385357775 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.696544302 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.379930171 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378462045 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.379336067 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99765952 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401077867 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.380200019 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.382128024 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.244380075 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591205904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.397997219 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.378078371 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.380372432 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.395817707 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.778473571 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.379164207 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.407322182 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.382626046 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091881086 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.42075346 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.412267293 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.003340603 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.385341725 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.394668299 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.384052133 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3784748 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688881586 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.665414456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.646922224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.382676633 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.380209146 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.062091865 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.38305927 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530523215 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400217665 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.389882078 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582606864 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.819341151 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.379771103 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.959544849 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.380493146 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595811286 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.380378147 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.701730885 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877720488 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.381925455 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.386800935 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.08823713 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.068718455 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.033841114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.386328191 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.720484225 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.39616447 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.834963207 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.379693311 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.380760559 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.829998639 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.383540722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.384662102 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.380725122 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.38170119 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.528637612 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.558506086 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.155044268 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.38464111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853940829 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.39875713 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.382349302 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.386892375 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.384749159 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.737938127 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.45024553 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.387276718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.384962443 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.382704378 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.386540643 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.867473251 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.352438341 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.383893555 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.537510912 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.025832847 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.382562485 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.383165022 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.947049595 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.596541426 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.902819802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.432275935 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.704374909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.391843717 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.424330391 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.119723405 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.441402254 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909639874 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.38451132 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.384258265 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.982642307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.384396699 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.73975997 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.384260457 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.396321258 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921889057 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.385247403 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.383933045 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.79541012 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.384500308 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.634220199 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.384723907 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.396927944 seconds)
  done (took 1123.032749499 seconds)
done (took 1402.939319909 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.384789199 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.386131288 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.373816638 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.387188614 seconds)
  done (took 26.856325162 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.392555292 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.389842919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.392125161 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.390903546 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.391782995 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.390580267 seconds)
  done (took 9.671661781 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.475888836 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.388351593 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.386447947 seconds)
  done (took 19.57497814 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.620491456 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.703293494 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.778985443 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.676455832 seconds)
  done (took 11.103329522 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.392066835 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.391272725 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.391277318 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.392369972 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.393526782 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.394671944 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.392676536 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.393605091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.395355607 seconds)
  done (took 13.859610186 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.459802541 seconds)
done (took 87.849836423 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.693747039 seconds)
    (2/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.371571874 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.292008119 seconds)
    (4/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.879565193 seconds)
    (5/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.421299637 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.378964536 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.652687754 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.651262415 seconds)
    (9/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.488653655 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.384467315 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.917710612 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.440998777 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.412016727 seconds)
    (14/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.46831292 seconds)
    (15/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.962782986 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.684870658 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.044340764 seconds)
    (18/309) benchmarking ("sort", BigInt, false)...
    done (took 6.385832215 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.214264171 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.042980846 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.238740863 seconds)
    (22/309) benchmarking ("sort", Float64, false)...
    done (took 5.714713857 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.84187417 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.402207505 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.483871285 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.370206977 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.968968095 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.176282014 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.300640234 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.920993915 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.746764222 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.810365973 seconds)
    (33/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.430064045 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.455921196 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.415791626 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.511505239 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.396422331 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.879584579 seconds)
    (39/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.434344891 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.938361354 seconds)
    (41/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.429176067 seconds)
    (42/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.472040628 seconds)
    (43/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.472227541 seconds)
    (44/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.799166846 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.413451466 seconds)
    (46/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.602795871 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.514742459 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.649336097 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.449215078 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.936787328 seconds)
    (51/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.996475285 seconds)
    (52/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.482867105 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.239208324 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.491831585 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.388973174 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.446078829 seconds)
    (57/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.580613876 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.435922757 seconds)
    (59/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.762517518 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.333170932 seconds)
    (61/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.373216411 seconds)
    (62/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.817261668 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.104791989 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.80514876 seconds)
    (65/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.602356214 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.060860677 seconds)
    (67/309) benchmarking ("sort", Int64, false)...
    done (took 5.629504398 seconds)
    (68/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.388832147 seconds)
    (69/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.471128476 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.613472296 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.471131188 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.398420561 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.453484403 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.177461291 seconds)
    (75/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.001131709 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.416647444 seconds)
    (77/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.480217229 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.990222995 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.7248311 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.387610844 seconds)
    (81/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.551966609 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.828789053 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.401690566 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.884282584 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.812482382 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.877243824 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.415705831 seconds)
    (88/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.079934975 seconds)
    (89/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.37622725 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.435369996 seconds)
    (91/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.381854932 seconds)
    (92/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.975717806 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.391139304 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.051810915 seconds)
    (95/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.374349913 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.859714181 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.517776506 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.707413828 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.421013483 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.607315949 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836163531 seconds)
    (102/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.008744333 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.47854954 seconds)
    (104/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.417335583 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.755539937 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.406746576 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.784152036 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.378706127 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.359723178 seconds)
    (110/309) benchmarking ("sort", Bool, false)...
    done (took 1.908960794 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.414036669 seconds)
    (112/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.85344564 seconds)
    (113/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.672850923 seconds)
    (114/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.261986331 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.416899173 seconds)
    (116/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.407314308 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.390131908 seconds)
    (118/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.652612525 seconds)
    (119/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.407801953 seconds)
    (120/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.339540328 seconds)
    (121/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.179437937 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.022821469 seconds)
    (123/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.650818883 seconds)
    (124/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.583643447 seconds)
    (125/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.014282631 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.00596351 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.378262866 seconds)
    (128/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.891191876 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.502339246 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.389644514 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.377266508 seconds)
    (132/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.513941189 seconds)
    (133/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.456066643 seconds)
    (134/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.451108793 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.488220751 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.453352479 seconds)
    (137/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.49594664 seconds)
    (138/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.25260132 seconds)
    (139/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.419003606 seconds)
    (140/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.456947332 seconds)
    (141/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.158044275 seconds)
    (142/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.123353958 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.472386441 seconds)
    (144/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.418906898 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.048845793 seconds)
    (146/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.692179403 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.189055214 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.419212403 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.091546838 seconds)
    (150/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.317839626 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.499818065 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.517484827 seconds)
    (153/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.494031876 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.392125892 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.27553875 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.457711637 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.415666784 seconds)
    (158/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.822670843 seconds)
    (159/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.722842002 seconds)
    (160/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.247597517 seconds)
    (161/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.393130562 seconds)
    (162/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.711772032 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.467449678 seconds)
    (164/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.742108864 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.243533776 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.46652894 seconds)
    (167/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.392239633 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.407235372 seconds)
    (169/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.378985151 seconds)
    (170/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.669573688 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.442015795 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.536057068 seconds)
    (173/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.396337618 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.759635659 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.41693264 seconds)
    (176/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.520502849 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.355956126 seconds)
    (178/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.935825328 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.397133335 seconds)
    (180/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.744210655 seconds)
    (181/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.39460866 seconds)
    (182/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.669555096 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.440035148 seconds)
    (184/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.836998387 seconds)
    (185/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.414467732 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.436656494 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.858422979 seconds)
    (188/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.592829465 seconds)
    (189/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.430960892 seconds)
    (190/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.030435429 seconds)
    (191/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.789031905 seconds)
    (192/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.397157261 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.437446056 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.443845517 seconds)
    (195/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.102159354 seconds)
    (196/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.188843475 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.395336694 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.279223495 seconds)
    (199/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.828582949 seconds)
    (200/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.915446749 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.394209293 seconds)
    (202/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.765052861 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.507422231 seconds)
    (204/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.791022628 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.454403271 seconds)
    (206/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.514427703 seconds)
    (207/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.3954664 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.392156569 seconds)
    (209/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.395259207 seconds)
    (210/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.482628581 seconds)
    (211/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.401111902 seconds)
    (212/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.736932045 seconds)
    (213/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.930385333 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.382027523 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.697482838 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.565061645 seconds)
    (217/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.128395453 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.048644659 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.633294044 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.504442257 seconds)
    (221/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.513732662 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.989913982 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.7785942 seconds)
    (224/309) benchmarking ("sort", Float32, false)...
    done (took 5.424290764 seconds)
    (225/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.453975372 seconds)
    (226/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.484484441 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.887007628 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.98058946 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.540044282 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.564672669 seconds)
    (231/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.395762743 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.421116451 seconds)
    (233/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.434886017 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.894993224 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.454845571 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.440356604 seconds)
    (237/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.041460675 seconds)
    (238/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.381857752 seconds)
    (239/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.056386508 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.212785598 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.300550934 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.397401539 seconds)
    (243/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.407767691 seconds)
    (244/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.752673232 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.398831833 seconds)
    (246/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.436090341 seconds)
    (247/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.051464459 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.827106416 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.316965307 seconds)
    (250/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.417196055 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.050122496 seconds)
    (252/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.055190805 seconds)
    (253/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.398143376 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.411022001 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.836574456 seconds)
    (256/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.717611881 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.39736191 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.633951712 seconds)
    (259/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.398439411 seconds)
    (260/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.527514328 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.426630896 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.036835686 seconds)
    (263/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.402308707 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.792471138 seconds)
    (265/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.271042667 seconds)
    (266/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.776317713 seconds)
    (267/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.595409689 seconds)
    (268/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.427865834 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.19691436 seconds)
    (270/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.796342248 seconds)
    (271/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.753349839 seconds)
    (272/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.429203145 seconds)
    (273/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.49643383 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.32591788 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.83937364 seconds)
    (276/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.085050395 seconds)
    (277/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.286193726 seconds)
    (278/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.333500164 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.436695665 seconds)
    (280/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.837052976 seconds)
    (281/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.489153529 seconds)
    (282/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.400604702 seconds)
    (283/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.226159992 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.488027071 seconds)
    (285/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.259385679 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.486242208 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.621461811 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.604260843 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.531383517 seconds)
    (290/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.732855094 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.215964567 seconds)
    (292/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.463172969 seconds)
    (293/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.418387742 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.831607501 seconds)
    (295/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.528990052 seconds)
    (296/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.365142386 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.461374703 seconds)
    (298/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.431004319 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.275388848 seconds)
    (300/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.600098199 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.489814465 seconds)
    (302/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.35397238 seconds)
    (303/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.435035132 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.13635666 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.09085975 seconds)
    (306/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.445498033 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.426869875 seconds)
    (308/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.428835804 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.404493575 seconds)
  done (took 949.387498252 seconds)
done (took 950.713251281 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.439433198 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431922453 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.415526085 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.436358881 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.527805455 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.446809916 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.425689857 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.417161864 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.463600757 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.465344676 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.415022459 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.446998772 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.416799556 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.416724317 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.414553286 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429489607 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.513308767 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.417496497 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.43349064 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.424726567 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.43233345 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.416067507 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.464502731 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.447938705 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.419258264 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.4189548 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.420083615 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.436947075 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.528410144 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.420602607 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.419361491 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.427428217 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.514263919 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.415341778 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.411368197 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.436203984 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.428738911 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.425583879 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.420650104 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450170952 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.974351862 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.419561019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.419582852 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.417370719 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.418282838 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.422227896 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.418436598 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.424120523 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.430606912 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431802373 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.99406527 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.435826768 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.422393186 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.417309857 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.429632811 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.41863498 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.420721459 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434872111 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.438165256 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433409387 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.506070572 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.422644395 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.419367991 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.434569256 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.426839054 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.965085541 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.414210675 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.42253853 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.991145144 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.425506515 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.966908069 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428146874 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.418979404 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.433932334 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.452050109 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.519541046 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.414384078 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.418020504 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.427512766 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.418952214 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.430153786 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431553284 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.423744527 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.419825801 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433935509 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.450700262 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.429837028 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.420887627 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.428349223 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.439009032 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.427890656 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.431723132 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.423337533 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.415476179 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.430135346 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.423250821 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.423765573 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.424539975 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.424309398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.431672637 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.944528431 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437216501 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.417270922 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.416493129 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.419106003 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.434715511 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.943551171 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.422563478 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.44302984 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.468497424 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.422272505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.510837295 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.4251493 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438408012 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.430656546 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.42389403 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.41602892 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.510385766 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.939154237 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.436110464 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.422412008 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.420527848 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439056707 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.423543759 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.417359867 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.525282821 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.421915669 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.435943905 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.543282682 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.432305024 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.454993613 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.421820841 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.424380697 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.44979975 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437851065 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.454976591 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.424696605 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43924634 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.437711685 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.420045286 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.433746449 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.432889206 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.422716324 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.430405865 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.416483551 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.4509075 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436407877 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437949059 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.44553408 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.543590081 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.420580215 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.509873987 seconds)
done (took 239.971802695 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.48149457 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.415711835 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.502593196 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.419167819 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.520181093 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.518639693 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.416626855 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.417549476 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.416591225 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.795327751 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.417537661 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.417509659 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.418883727 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.417708925 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.500839983 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.419724919 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.417394656 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.758353188 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.420153699 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.489556967 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.420682317 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.418162043 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.419506141 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.798771104 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.418703377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.417450935 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.491427584 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420407672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.764826066 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.422381589 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.417610359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.766426011 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.508389049 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.438558848 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.42979963 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.427203351 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.521237121 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.438504483 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.501667707 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.501164626 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.504247173 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.459662098 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.420613306 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.414174018 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.423585854 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.421555255 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.41884888 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.447842552 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.414978387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.419810319 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.759820058 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.431550556 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.418996688 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.420220076 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.419372157 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.451191015 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.419482302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.422305327 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.51063461 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.422728897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.483475498 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.800529592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.796710585 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.423011959 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.41763645 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.421099493 seconds)
  done (took 154.24560947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.48647191 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.496013821 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.537671484 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.423506309 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.472425174 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.54334397 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.423249384 seconds)
  done (took 11.736808887 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429521538 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.424091698 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472057272 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.472130861 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.423236558 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.569699168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423027981 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.433941225 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.421045286 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.475939183 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.423543864 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.423622657 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.430596781 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.423808541 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471356796 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.433586135 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.537598071 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.423102854 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.423755103 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.574454754 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420692691 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.431013592 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.475181711 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.43475602 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.423938058 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.429570723 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.993340913 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42377772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421074368 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.424558179 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.421941284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.462316399 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.424968704 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.420439797 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.423165091 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.539255966 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.425674357 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.422550452 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.424782369 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.419523176 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424570003 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.424893589 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.423864483 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.422871817 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.425050608 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.448583238 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.42538277 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.425095934 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.42478793 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426350485 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.475747037 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.425799289 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.423407086 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.422609886 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480919331 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.433243453 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.426736467 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.423668318 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.425487914 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424753779 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.577088485 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.475115401 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.425601372 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474522141 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426079456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.427166716 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.426661352 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.4255175 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480754541 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.426938747 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.474512503 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.424030104 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.580593422 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.449241747 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428056447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.429032967 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.430251918 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426534291 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.421167514 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.431703444 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.424928851 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.427768874 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.432253868 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.424733161 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424378236 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.528959035 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535256934 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.425093448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.439392489 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.433376534 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.424228704 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479974182 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.427323212 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.425131526 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480150493 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.541489038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.481112215 seconds)
  done (took 162.187840297 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.431814407 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.434449671 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.427941576 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.443130358 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.427706563 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.427549932 seconds)
  done (took 9.952211485 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.430679236 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.429725608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.427742181 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.428306648 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.42787901 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.42850589 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.42914008 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429938376 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.432890324 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.428190923 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.42807893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.43003615 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.429573984 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.429678547 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.429783373 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.429491598 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.429098382 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.427828743 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.429289033 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.429319531 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.524417201 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.429012937 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429391746 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.431249922 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.434356475 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.429096097 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.436821525 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.429951342 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.429378537 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.436467744 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.432873463 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.430461528 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.430959648 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.436745833 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.43413918 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.431225687 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.434954235 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.430322327 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.427120429 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.429681087 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.431352069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430704664 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.430738141 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.430521557 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.432767854 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.435756788 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.43431791 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.437734217 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.431573075 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.431898291 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.430588241 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.430871493 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431133324 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.432206853 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.43353029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435605701 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.435713107 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.431889491 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.43174572 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.432669691 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.4319598 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.431653797 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.434262781 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.435919109 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.438579794 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.432073469 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.43255727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.436166634 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43174372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43255295 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.432736888 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.429314098 seconds)
  done (took 105.53374021 seconds)
done (took 445.005362278 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.878206001 seconds)
  done (took 8.240928327 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.610325268 seconds)
  done (took 7.973235643 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.105818196 seconds)
  done (took 23.468833696 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.496395794 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.47670711 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.441056125 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.426201033 seconds)
  done (took 27.200752016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.016961174 seconds)
  done (took 8.376329609 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.435328153 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.434792858 seconds)
  done (took 14.229376788 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.67168282 seconds)
  done (took 8.03054986 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.119389439 seconds)
  done (took 8.484114753 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.444046521 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.435649263 seconds)
  done (took 14.508488917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.408074599 seconds)
  done (took 7.768123447 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.609436774 seconds)
  done (took 8.968964729 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.426849814 seconds)
  done (took 7.787925444 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.447787002 seconds)
  done (took 7.807089107 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.896993704 seconds)
  done (took 10.25640524 seconds)
done (took 164.464515818 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.421423046 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.42338734 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.423422834 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.424302456 seconds)
  done (took 27.052029495 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.462523695 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.462790806 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.464171691 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.47333309 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.466192184 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.464369431 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.454993531 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.45468112 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.473384516 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.465875872 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.46548709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.464661686 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.463300569 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.455179234 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.465686543 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.465112256 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.474983667 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.464770107 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.455439519 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.466879727 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.430374866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.475497898 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.468119137 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.430867274 seconds)
  done (took 36.45108547 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.627253395 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.503803173 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.586883165 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.485415898 seconds)
  done (took 7.565271815 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.482780317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.483999201 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.496369849 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.538823404 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.579998568 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.494422938 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.457728604 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.452508126 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.43918981 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.483906612 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.559408668 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.499482397 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.622077157 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.431053712 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.637066627 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.431042407 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.431025933 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.48349862 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.535464585 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.548478987 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.431269248 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.48372626 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.489147879 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.499664181 seconds)
  done (took 37.355966936 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.429698793 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.440371074 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.436412167 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.431672879 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.430436604 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.431320696 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.437321911 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.432538827 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.453140787 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.432562207 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.430910494 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.430509416 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.430084552 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.431444666 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.430381702 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.44329796 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.444700075 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.43158488 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.435525786 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.437906168 seconds)
  done (took 30.066869215 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.42729022 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.27962922 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.777285274 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.68243364 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.425589018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.426198368 seconds)
  done (took 28.383087864 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.509855784 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.651952693 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.433186006 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.817908345 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.893254169 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.43362338 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.43313704 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.691306587 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.023277569 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.028948909 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.493881533 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.504649313 seconds)
  done (took 21.280821015 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.439050913 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.429124489 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.436059047 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.445208676 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.492170374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.437511033 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.4395731 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.426748823 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.493665108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.49670473 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.437726908 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.493682557 seconds)
  done (took 38.832999241 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514686724 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47901318 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.423496675 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335590686 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152835962 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641783495 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339658606 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.900848276 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.432370223 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702076365 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440959325 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519436415 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686725396 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444836344 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430687742 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.522694977 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655624935 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957539417 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429658442 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.683924485 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45646597 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439142773 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.80266063 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.462269064 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642367603 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.412486446 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.689858149 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.208723176 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.736949217 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.441184569 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440435671 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429614421 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70350749 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108095835 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525184169 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440050279 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.368059634 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.062078468 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.422853559 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.693664972 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433329475 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434284414 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441930094 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4304658 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365538818 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446198605 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908403252 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.435189377 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.141564228 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430922873 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441739145 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524946897 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.435040376 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.423421671 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620556446 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437078123 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.428679531 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436673237 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998390763 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.272820004 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451240049 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.366272326 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.985099108 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.769413515 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130803566 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.535223348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.435357154 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436255834 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366064966 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.744955682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450197007 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570348351 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.457684632 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093979116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198794152 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435182894 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364276375 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024336236 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444712302 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.369261106 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661861808 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208651276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373067114 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.375856982 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368179817 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200585722 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442161005 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.89924199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439215069 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.904262132 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.443768258 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449745575 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457243583 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.657712981 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.318354889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432898746 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.434231325 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550526952 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455903082 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90471552 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367078568 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.436300249 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691340313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.645152103 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442254336 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.519945034 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66576487 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439054891 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.450456526 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.433562052 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.462671563 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.088418053 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448041108 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.277983113 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452484169 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.211975365 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240722173 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438897922 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.537462862 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439966719 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695285679 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.274161512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318752411 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502939542 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439668792 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.897719851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.787751776 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288681866 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.317215786 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.43633 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435004365 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.445407519 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.436226605 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.39637924 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.447145717 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449222675 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.21611836 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659730987 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451314404 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71155863 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369125033 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.573421726 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.451625688 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.658473492 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.710919889 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.43466127 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696626272 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443146192 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435688384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449883263 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454989058 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534045309 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457809694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.448934442 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.697208614 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.440005343 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.440232393 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.810769821 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.215382402 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44549621 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.441382905 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.409642369 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092122765 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409312121 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440506927 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.331152802 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.451269583 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505038688 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.442477613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.446868172 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.400814021 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473451014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.442645436 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.434879568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660490997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448223382 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.72829444 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518044791 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.663238869 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.091695903 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451861047 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.37235188 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.148490955 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.130060622 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437564656 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.634529547 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.438633827 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.448143859 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.449527798 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.177136877 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094096005 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440258095 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.725080673 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.44662118 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450047811 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.444069541 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438539725 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.377697783 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289389705 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450121811 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.450673991 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.583409256 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.452990518 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.372858353 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.955846801 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443886976 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.439542128 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.216154248 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472673686 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.733058368 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94743252 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.700444006 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.349206125 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450315051 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.913449997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.474330186 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.439793167 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449688977 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444448825 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.462988204 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466953693 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.450460815 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.781289132 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.890037773 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005216779 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230222076 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042762564 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468247937 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.451140299 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.325324282 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.918816139 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374117152 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.098392297 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642664658 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.918598394 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397873714 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669692009 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.743647265 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254694481 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450393545 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669775588 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463403274 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.45207878 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455472958 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653615805 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475220622 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441600989 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388019655 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.725943644 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.727608454 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441941244 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525349368 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91973461 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441741543 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.228340038 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.440391095 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.836339149 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632942082 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.990704867 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.836748812 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.446780422 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448816149 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946012974 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445307912 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97367303 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125535003 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457188989 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.673954555 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.381603834 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4538048 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.453891708 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.442967182 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.866001138 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.452506935 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.700953569 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454249928 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377119654 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.451741279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049873073 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.302537493 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.448112226 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44423399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.252576553 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444864605 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77200334 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.444276363 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.350076478 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446835828 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378376961 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377312446 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.13678431 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45197816 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411740758 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971534255 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.944346632 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576981735 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46600446 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295669538 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701249261 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.457867581 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104669184 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.672490846 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.471040599 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466915857 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.544153747 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444483907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.449377846 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.338000947 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679684754 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416120996 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668287626 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.433943332 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.348731585 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442995243 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.656278187 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.347083401 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.451661708 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707496118 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.156772365 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.446448211 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222106723 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470255397 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.452473296 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465005718 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.999502659 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45108128 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514762331 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.456404298 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.456196836 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.455777813 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635584265 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45972366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450498844 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.462104418 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54094652 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.329803088 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.359381072 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.218762475 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123925868 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245008301 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116246894 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460297824 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446018278 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447757373 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380236139 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595092113 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.974221071 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719322573 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.566014107 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.082586676 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46859283 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445635797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455863776 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659275977 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721778445 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321166996 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462978727 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.112212557 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.346302935 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458328212 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.659299637 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980783469 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046510718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.65215431 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.451465874 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.923158166 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.722312056 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.520205849 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448001275 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042228337 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.45715699 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.854698758 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.451842087 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448974264 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596571033 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458936057 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130740556 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.457012244 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.608640331 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.221244399 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.845182271 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708491632 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.995216298 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.460384862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117048193 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.251007859 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715222422 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519023565 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458837718 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.558283098 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594744822 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.453186267 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.345587307 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448649994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299029187 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.15931504 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.458447157 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121723753 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715789466 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.445972825 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.454589337 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471534724 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.459837784 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.673831331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230580353 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674904971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460031574 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.459195505 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.442100006 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120617079 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463830469 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384606046 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.452375018 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709172026 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685757835 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475718237 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.902840012 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.160841086 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04769187 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.425682753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472098151 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457838824 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.255458834 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122047105 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.372151575 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981698045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.110618466 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452805215 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726771745 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.455908613 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464059884 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.730465752 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.455410467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.454949325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.466249636 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.118794017 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273952928 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.459905512 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767438341 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.391051403 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.681674643 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227007767 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388258217 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451918724 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.653435927 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453331789 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570736098 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.462875606 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.463364151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465841204 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.187950719 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738337272 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.456468073 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.447247166 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.438613479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468652053 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461348418 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743180995 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4571915 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.172874383 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.802896817 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.710966833 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.464505225 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.437770569 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.456117479 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454357533 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.177536673 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430393093 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.181824698 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053854282 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.464721052 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.465350887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.457595259 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.670263229 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666202559 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.454710254 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.46853106 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458838084 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470339036 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.358151035 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.227524844 seconds)
  done (took 1651.52455547 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453700458 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.463855605 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.480571278 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.526010172 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478423028 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.508129338 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.54241742 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.546755749 seconds)
  done (took 53.391477345 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.467454068 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.614718987 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.486052569 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.467838808 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.46384713 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.465164201 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.948970048 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.454664684 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.46309304 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.464613581 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.45527231 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.4587473 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.184029703 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.464304035 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.466497574 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.440259228 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.461844117 seconds)
  done (took 67.623751969 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.453930986 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.776080472 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.473263585 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.454619254 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.749511824 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.469132154 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.678647326 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.485234193 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.455160512 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.644723591 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.127352096 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.48468243 seconds)
  done (took 81.646001266 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.463998374 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.463092646 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.463773461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.462871744 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.464398486 seconds)
  done (took 8.710459158 seconds)
done (took 2091.245424765 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.88519848 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.232809321 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171075801 seconds)
  done (took 5.796325964 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.603449556 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.651397742 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.810468114 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.806746284 seconds)
  done (took 8.26467146 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.732659841 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.820225854 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.645861483 seconds)
  done (took 6.590513551 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.992410503 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.45352694 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.599864363 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.456822273 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.457465059 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.455718021 seconds)
  done (took 20.762441225 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.460295165 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.463022125 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.459956177 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.462896798 seconds)
  done (took 7.2391837 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.441476735 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.180450391 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.44103707 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.46042061 seconds)
  done (took 18.91606038 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.222833186 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.216086417 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.203489281 seconds)
  done (took 8.035656576 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.461686648 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.294171464 seconds)
  done (took 10.149351032 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.773410981 seconds)
  done (took 3.166417566 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.59114518 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.789047848 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.656055683 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.493634954 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.682509122 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.689633807 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.243921666 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.803925947 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.483779841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.8129848 seconds)
  done (took 30.639974006 seconds)
done (took 133.884923038 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.509858265 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860370439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.659123514 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.481096979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.690986914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.658837939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.757064926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.448847377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.987311459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.976117065 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.523176021 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.690319841 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.703980402 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.860949875 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.704842577 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.484864378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.694716778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.539855299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.169029253 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.368575973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.756927558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.119031472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.35278296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.130442992 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.69244584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.610029352 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.693451658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.484143971 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.345764426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.711692303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.610927561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.457695054 seconds)
  done (took 198.132379427 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.457225372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.472598457 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.459916461 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457396328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.45828202 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.458298431 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.458180207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.458562068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.484440837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457754723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.459193746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.45795997 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.473721583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.458233389 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46089902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457771351 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.466374374 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.464247144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.459833846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46188364 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.460670293 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.479430516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.475413145 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.459546156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.459485936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.459128005 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.475609727 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.460475196 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.459751857 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.460521362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.459641988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.476246947 seconds)
  done (took 208.229137801 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.458515302 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.460052257 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.459275799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.466138064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.459366813 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.480792586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.471423256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.459666524 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.470759981 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.468377707 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.459502983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.468863394 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.459269285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.48239993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.460074539 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.461108437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.464482814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.463227216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.460853161 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.480155358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.462772664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.484408689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.46005631 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.476577157 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.460593686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.462222164 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.470539744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.461074617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.478817066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.461557413 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.479452334 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.471951119 seconds)
  done (took 208.344572227 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.666223817 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.469033294 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.469396171 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.424144682 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.469553836 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.469034078 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.463079736 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.660628137 seconds)
  done (took 15.490125118 seconds)
done (took 631.590073336 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 6.461893331 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 6.461423138 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.672075319 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.489195303 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 6.462193839 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.488578439 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.489350916 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.670524619 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.421781993 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.675290135 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764411764 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.487671643 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.91297846 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.488419105 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.749177438 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.589922658 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.356566477 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.473137888 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.816921776 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 6.480353993 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.754510683 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.00967943 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.669232061 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.437691976 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.913706359 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.006878317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.235461188 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.358657577 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.490224586 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.820949508 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 6.46670033 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 5.784370964 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.533878414 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.534205295 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.590328417 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.571680919 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.457004456 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.533211259 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.674886799 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.768926326 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 6.464032145 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.249594153 seconds)
  done (took 118.141600895 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.459444981 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.459091397 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.458362304 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.459399196 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.460226539 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.459436418 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.459140625 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.458669797 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.459858455 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.460014398 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.458578277 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.461055103 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.459265037 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.461127575 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.459379493 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.461969017 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.462374336 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.463375554 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.462356958 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.461070723 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.463211398 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.461812334 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.462172515 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.461576764 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.462103299 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.461597278 seconds)
  done (took 39.381532236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.47599859 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.733368175 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.909946519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.482432938 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.47455761 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.479515165 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.559598783 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.476213416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.478737416 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.47870752 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.649663437 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.478682058 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.510614667 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.934679057 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.477745134 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.486092719 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.476725787 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.476498983 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.742494015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.485300077 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.560848891 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.477248086 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.560108791 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.485393519 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.478719424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.476857365 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.48255133 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.037961467 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.478384635 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.649781878 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.345612257 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.559516115 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.997775373 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.921705933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.346491486 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.480323136 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.477695189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.654726732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.478828103 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.476827184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.560033937 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.478006163 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.921370787 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.132276341 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.495994306 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.47987633 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.060926968 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.656571899 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.74538697 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.486318503 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.944605136 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.482889066 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.480153863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.479802068 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.744105177 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.486353953 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.47722749 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.079441636 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.503035168 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.560644887 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.479463864 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.479629757 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.751523966 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.479914017 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.739644131 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.482077651 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.48724046 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.479561585 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.929912394 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.484002705 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.151687062 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.497417318 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.479359504 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.653181331 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.739454739 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.093862612 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.483230591 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.755221213 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012639934 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.562320803 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.483673765 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.029569187 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.565920813 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.484030958 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.482842932 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.482303999 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.481678541 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.534900152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.561720284 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.079260866 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.145090423 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.097483924 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.584267657 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.495069699 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.480694036 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.078653619 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.499649897 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.481854328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.918518759 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.15477218 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.499332017 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.49010238 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.142209102 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.50191315 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.565920106 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.485858807 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.933094308 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.483013523 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.535671954 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.482400587 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.488246002 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.485207927 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.565928529 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.485183325 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.482396837 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.127007192 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.680378363 seconds)
  done (took 194.146112922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.475896991 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.476172812 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.490766435 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.475111036 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.47553569 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.481665326 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.475649653 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.474849633 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.480860123 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.475601431 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.47622913 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.476408746 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.478104925 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.482248838 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.485291392 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.482963352 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.132345822 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.477297657 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.479795419 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.475817351 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.3053926 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.476617857 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.47885121 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.477492317 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.477680047 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.477528664 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.482445681 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.498567494 seconds)
  done (took 156.318142254 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.485239828 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.091562347 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.484755264 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.625373483 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.63930406 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.481083076 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.623247929 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.545997823 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486073454 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.481541243 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.482066172 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.809436982 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.48558196 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.035778201 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.693109533 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.627118984 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.036936523 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48532441 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.482048271 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.483173468 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.627040342 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.692294103 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.810887607 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.095452231 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.485314527 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.094249791 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.6081617 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.50470552 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.484455099 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.287398112 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.482464036 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.813169429 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.56731087 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.548179909 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.095457868 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.03813976 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.038657995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.643044558 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.484107588 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.483241421 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.483154355 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.4731162 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126103836 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.48740897 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.48467379 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.120210755 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.505415832 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.487498818 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.493971853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.483730181 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.547960216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.549575563 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.989661619 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.153620554 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.570215533 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.506248481 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.625464459 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 6.464809025 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.50618293 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.038352618 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.473087269 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.317770791 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.490380547 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.473822156 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.485886396 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.491953602 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.647943074 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.627724674 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.039707747 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.487132228 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042458172 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.648301289 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.484502471 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.485483602 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.4886326 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.121461296 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.042322739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.648288211 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.63079158 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.700575012 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.477717029 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.48596985 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.673741456 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.56943149 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.485545687 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.133011006 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.045819558 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.489313587 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.489887976 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.487866086 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.488414317 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.681305051 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.131841885 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.572172381 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.035266278 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.848217165 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.833188305 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.490478984 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.551378251 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.487253199 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.832828661 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.491304971 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.550074085 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 6.466984654 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.850702617 seconds)
  done (took 187.448660341 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.753518087 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.724534652 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.582542722 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.606511029 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.114076539 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.062620396 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.762809431 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608917463 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.602626161 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.73951987 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.747644247 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.576923146 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.667588973 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.56446435 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 6.483381489 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.560489103 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.586947967 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.614510211 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.589020178 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.523741586 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.188211405 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.793605792 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.667364749 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.602979897 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.58790028 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275799916 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.052554151 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.051000616 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.677558374 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.873751257 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 6.484887998 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.623536915 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523587418 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.203092605 seconds)
  done (took 79.50014141 seconds)
done (took 776.335805201 seconds)
SAVING RESULT...
DONE!
