cset: moving following pidspec: 20882
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.369810267 seconds)
loading group "string"... done (took 0.602807098 seconds)
loading group "linalg"... done (took 7.627153102 seconds)
loading group "parallel"... done (took 0.179308019 seconds)
loading group "find"... done (took 1.238389554 seconds)
loading group "tuple"... done (took 1.934413894 seconds)
loading group "dates"... done (took 1.299512547 seconds)
loading group "micro"... done (took 0.24175832 seconds)
loading group "io"... done (took 0.993593626 seconds)
loading group "scalar"... done (took 40.999851505 seconds)
loading group "sparse"... done (took 13.294268817 seconds)
loading group "broadcast"... done (took 1.049751236 seconds)
loading group "union"... done (took 14.502026336 seconds)
loading group "simd"... done (took 5.024329435 seconds)
loading group "random"... done (took 10.105974492 seconds)
loading group "problem"... done (took 1.961472794 seconds)
loading group "array"... done (took 22.975028711 seconds)
loading group "misc"... done (took 2.057194494 seconds)
loading group "sort"... done (took 3.41467811 seconds)
loading group "collection"... done (took 19.297158036 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.557530392 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144400924 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136819217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128064 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190489132 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133201121 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145965336 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088932684 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.88235704 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160054529 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141071684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.519444116 seconds)
done (took 4.942353589 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.193418031 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089892768 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099989874 seconds)
  done (took 0.84855307 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067937573 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129581388 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082189887 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069613939 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07014398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.084160492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068616943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068397213 seconds)
  done (took 1.242159103 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07584172 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071176991 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.087382241 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071939482 seconds)
  done (took 0.976363994 seconds)
done (took 3.998884742 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.937202712 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.26057232 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197834481 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4927636 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136908899 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.195005733 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664416059 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306542717 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.217089322 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102599535 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109161357 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.39377132 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107910059 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659266897 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07675033 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107275492 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.161027767 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420062009 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080386966 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083313207 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104020078 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140138168 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.10293547 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079171054 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167264641 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07011937 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155499825 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094440454 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069234368 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.250945915 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190230586 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.672645221 seconds)
  done (took 10.514844671 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100050664 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121173949 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07292802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145879948 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125443956 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074103085 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076611487 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08649701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097156843 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.167477729 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122048568 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.128775715 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068952263 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073196969 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105511577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235786216 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09485819 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105082517 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074766117 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094245472 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113546549 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102626433 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083257075 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.098515719 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.153545573 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194671781 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102569831 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113190165 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071567133 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098273258 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132572005 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136339138 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070228847 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085133302 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.16286243 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098861812 seconds)
  done (took 4.669106063 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.109436482 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.179126893 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097756331 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.161140535 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08941152 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134661479 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068246145 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102598574 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258422965 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.162221359 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.147359374 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.490115337 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130749578 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09205103 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071994098 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.089563635 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07103132 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.628774374 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.1506224 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127825897 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087720683 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095656109 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074522639 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364087569 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08424275 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06901511 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072418716 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.07918301 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154504814 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068362963 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089108107 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.265436375 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.113882412 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072177533 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126698335 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.184772493 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111157902 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129795885 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070399668 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069557288 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177094466 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092512619 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069844858 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.112197984 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121010523 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109141162 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086506424 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07095566 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188543874 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070503301 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103038015 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920205411 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166401131 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098292748 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069351677 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305071791 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105472108 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069940834 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.084250218 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069393391 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.239726258 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.187571061 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086189116 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069932273 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086767293 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071750688 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374896864 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0702295 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.688917991 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073339084 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081490995 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089544345 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070003229 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092472933 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077531584 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.105593803 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06965586 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072375931 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086472683 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069687563 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083368182 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071767109 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106239213 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.211887807 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070207587 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.086364828 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067981819 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089529086 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117457346 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.088114459 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068897106 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117789134 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073959915 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070948381 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125508598 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070715282 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107909298 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087100998 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116894119 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.08439783 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100924327 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068939122 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.117846537 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078513618 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114592583 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09896545 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072441828 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161591297 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067712489 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085790331 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069967736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085393237 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071326633 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071632252 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103290772 seconds)
  done (took 21.613686572 seconds)
done (took 38.574717312 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321439974 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.095986041 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.096115127 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093475334 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078807865 seconds)
  done (took 1.438359793 seconds)
done (took 2.159896479 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152696624 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105898314 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082513315 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098453235 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082356924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104662905 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118856165 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082966212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118982791 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.066148191 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114487211 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06595408 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082220235 seconds)
  done (took 2.025812316 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082879986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08771089 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087252913 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084623782 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081426044 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085035243 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082357062 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108559044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082289519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090680077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066736775 seconds)
  done (took 1.653348189 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081506871 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086318337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086853289 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083038572 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.081439285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08457454 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082213736 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104663179 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08289038 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090439867 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066378158 seconds)
  done (took 1.647962411 seconds)
done (took 6.039138234 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079599009 seconds)
  done (took 0.793368058 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.74597405 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.37692888 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085196613 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139374051 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.230637018 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.162977244 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.466061369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.114807465 seconds)
  done (took 10.249421327 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104145025 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087692045 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086357172 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088949304 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07278204 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.090743427 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074062056 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074560512 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088126034 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072540108 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087711571 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075069937 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084604485 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07332362 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084858476 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073542977 seconds)
  done (took 2.105064334 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10748301 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106847394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.093482821 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080015009 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091251463 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075150174 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09486646 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077537572 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088904706 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077118601 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092500717 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077860714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090392956 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.069768009 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092575668 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080263947 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088175388 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078843505 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.093468721 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079197206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092879571 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068959187 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090150645 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07851946 seconds)
  done (took 2.896673247 seconds)
done (took 16.763764885 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131827797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07834253 seconds)
  done (took 0.927731257 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084308425 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099960535 seconds)
  done (took 0.910614946 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084411636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080364096 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093576532 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097178613 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084064916 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068931796 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10507793 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070957231 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083394349 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070348096 seconds)
  done (took 1.563720471 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071530403 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093451469 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072690501 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098652987 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077343991 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081827804 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078062235 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085969373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082969063 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079592413 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074305485 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10086333 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07471198 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.10153336 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091490788 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072092788 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088524752 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070695303 seconds)
  done (took 2.224849181 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068400562 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068610979 seconds)
  done (took 0.86500669 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067975097 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065718276 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083654062 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070007831 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080216257 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066359754 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080915674 seconds)
  done (took 1.243443634 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.417665012 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112408417 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269907723 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.0744657 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10863627 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.29668095 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067999555 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073719823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.090545901 seconds)
  done (took 2.283401436 seconds)
done (took 10.741959167 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081092331 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088023426 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11207251 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.442280995 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10813354 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069330256 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144716725 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21850132 seconds)
done (took 1.9956118 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127587818 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626484069 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419874864 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.236553328 seconds)
  done (took 2.019819467 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385655257 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.094120908 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074122835 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069709118 seconds)
  done (took 1.357190336 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068007062 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071585324 seconds)
  done (took 0.876398875 seconds)
done (took 5.115964584 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068656878 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06847377 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080839233 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069048166 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066647492 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081405846 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102450494 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085394816 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069338039 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.084914047 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06979473 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06921887 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082790459 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066799026 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069605181 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080656119 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067165041 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069127692 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081655319 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066133364 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081095656 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069708515 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06755951 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080984472 seconds)
  done (took 2.575621223 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087039067 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083435134 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07492387 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089997502 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074381628 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089789698 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.078107871 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069296995 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087996649 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072445151 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087942448 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074063895 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.086177999 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073406959 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085641801 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074412107 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088961914 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069738409 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085727802 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.074350607 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074733637 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084186959 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073479772 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089998603 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072502535 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087967699 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072040935 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.084665638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074024604 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088097267 seconds)
  done (took 3.147040823 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07259942 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065658875 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081889663 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073681839 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066694668 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083276825 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066551609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082489801 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067868355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065946476 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083056483 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066945499 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066444573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082503806 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067495335 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084959913 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084951481 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068288533 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082338659 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068666797 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084657409 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066446287 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067162421 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081878178 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066726534 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066715358 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08137611 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066612771 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081671747 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067587944 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070273491 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.084872531 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067399986 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073500994 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085319224 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066769148 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085338832 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066005381 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068384275 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.080649894 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066481072 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066440486 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081171883 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073544344 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066954571 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083844542 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066414611 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08246935 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067259453 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069918215 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081190813 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067104577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083452506 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067912765 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07094746 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080691174 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067490726 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067419374 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082722304 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06656409 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.080832151 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065946382 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069573836 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.082725455 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082426031 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087802723 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.066420477 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068954616 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.083461388 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06955751 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068031252 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.095801571 seconds)
  done (took 6.083825252 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119027279 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094895916 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.08464467 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068598042 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080571123 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06816781 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070654999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081377069 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069477294 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08802077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066815935 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082659072 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068519631 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081899752 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082809744 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068766194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088285177 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067672512 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068269117 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085714739 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06837233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.086031332 seconds)
  done (took 2.488927613 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.19065235 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087851737 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115816595 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093504796 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.087367686 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078413802 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088768203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074382849 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074064835 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087257148 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073529459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088059227 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07228094 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086262687 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073554697 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087178129 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073994968 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088514375 seconds)
  done (took 2.369130033 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080070134 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068208261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107713189 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070814545 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086533295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072333179 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091840707 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079646931 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087993326 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070631813 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.094877996 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.184659257 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.088486627 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069659185 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087401011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069856887 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07215524 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085081641 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079452792 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090846876 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077134735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093507952 seconds)
  done (took 2.658100536 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084069217 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069939654 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103569895 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08708985 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065699511 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06824552 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.092154377 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069015772 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091477923 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071979347 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084782636 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069877876 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074987288 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085050591 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075779701 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085276945 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072415585 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084525226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071179363 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06651757 seconds)
  done (took 2.324353685 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09038012 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085266441 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070600676 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094810819 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070857158 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086407848 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080534133 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08611056 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072032805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111020466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071637728 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.086833869 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080306758 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091294824 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07117504 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095382962 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095271361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079525469 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085732902 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071880082 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11169252 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07187767 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095820077 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070791409 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086923673 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071501999 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086045337 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07679798 seconds)
  done (took 3.103594389 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068070889 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069254874 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08225954 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066793545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067770267 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08209596 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067210848 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067107693 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084882675 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067303564 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083615745 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.068960101 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069133075 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.084571111 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069063664 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069609205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084944146 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066252924 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067856001 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082906192 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069749162 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084040517 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069023779 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067351273 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082416409 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069663267 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066662078 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081908805 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069194573 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067508988 seconds)
  done (took 2.954428668 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078143985 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091288967 seconds)
  done (took 0.927068511 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065826831 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083860647 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081856913 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073687183 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089490951 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070109749 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09386554 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075301822 seconds)
  done (took 1.388799477 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084522494 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081624743 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086866967 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.098713215 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.08060895 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086120877 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161029508 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086451839 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077225957 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083748654 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0837957 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084025615 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075419553 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069739689 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091702013 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076772771 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08252343 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076066727 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072152504 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.084311269 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071800904 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097809274 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072671592 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.082626678 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071857224 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.079353146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097827514 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07196251 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08916731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077930702 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090912001 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064949612 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084797056 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071009847 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068553867 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09570767 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087103009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089811427 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079559162 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08771409 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082447549 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081515951 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074476995 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09159561 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081308621 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070665806 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.086573546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066031404 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08311681 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07192415 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066687565 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086618628 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064838825 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092997147 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074816379 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095342444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068744761 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.07123873 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.089191239 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074218299 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092915823 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072798727 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072415831 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085735375 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078572174 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.090310833 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080385385 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081297904 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064300209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067735241 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09704338 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094497445 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092161157 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071310218 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086882056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067146136 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088504912 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072103033 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077021084 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092178346 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071058531 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092134604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079037124 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085213699 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072282678 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093136464 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068002508 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072019645 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083692848 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088752402 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083701152 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068296911 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082799846 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080778479 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073696029 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.085472284 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068538889 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092945374 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065471357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071473473 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086746113 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07102292 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.097333814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075484156 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091761871 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079939842 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093825112 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070069576 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089391679 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067908573 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071261781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084113707 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077761542 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.080066909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073818801 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071695776 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087363673 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080895672 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083472324 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071000748 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093609768 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076715958 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068504979 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.082399958 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074048481 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.086813032 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075107718 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09458847 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070057454 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065209281 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081177356 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074326344 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.086049607 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.073270552 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.091727221 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074087076 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064693294 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083860348 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076291693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.096297801 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071303471 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085798234 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076439815 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07133808 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.085387885 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076786064 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088600414 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06865033 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075292941 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087551628 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06596696 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089343652 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072841306 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.084604595 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.073782209 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074485634 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.088628674 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071244007 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084581014 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077072522 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087060761 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06927081 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069992367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085249457 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082038854 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088576633 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065408211 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067311919 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09513858 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068134361 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086071555 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069793413 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072243733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.087565316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068783159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085950246 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072077549 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099089624 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075124565 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08650734 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075976952 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097421897 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070455307 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073086887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.085516682 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071691126 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.087418777 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079341664 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074830475 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092080295 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073097718 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.083152068 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077148542 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094748548 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069891247 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067633626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085725208 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.075108832 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092028706 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073911787 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087175883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068971322 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070919999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089968535 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073550844 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085621041 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069970596 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090676593 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070394649 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.09346908 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071506451 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080685676 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089031401 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065911204 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089505547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068725555 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092094138 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066668633 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067373239 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084988856 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072237674 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06824226 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090041866 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064538394 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093060022 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078171406 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086552881 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069686275 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069801604 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092668501 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072036283 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09081357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074009427 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093689669 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082395374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069652805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089766245 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081645135 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08663139 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06403156 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091764784 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069657385 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069789503 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.08479485 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068123816 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08931809 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0799928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09350099 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06434267 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072854281 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084875338 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068723535 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081109627 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074684933 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073778803 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087508082 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078059938 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087195658 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070729556 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073782292 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.086686627 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072120575 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087223435 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073620686 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08782438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073960166 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070049386 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090159723 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069668306 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.084635428 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072674865 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070683638 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087083787 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075424797 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.086210343 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070227418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072600055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088149894 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070512684 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087604886 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070955418 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089614691 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071423946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071292354 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088344411 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065185078 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093520711 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070636225 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078629002 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086494262 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066678206 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.091999122 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072887319 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.091380432 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071759789 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071498327 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088519147 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070171749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089506016 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076820399 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067796205 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097954823 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07870543 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088546769 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073363414 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086887535 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07278307 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06975532 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086328865 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071985479 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08624779 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07023576 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090294038 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074374484 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070879286 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088918358 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071507465 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085776207 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071101983 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065605472 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085916531 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070741827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085599992 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081127634 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071173132 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086803811 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0701436 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087570864 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069133995 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067001146 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0946791 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096774379 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.07238296 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077820347 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086878767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071762947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09872156 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068204327 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.085478452 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068746841 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069851548 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095401142 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071587739 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095860265 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070470057 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069691925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.084106587 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071661328 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086465036 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.0645334 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068470429 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091695315 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070018178 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085293547 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070858088 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073852812 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08737938 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081052246 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.086713881 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070450533 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087314012 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06716662 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069315897 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086271227 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073131275 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086950711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06893856 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068172926 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.087957175 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071405759 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071250302 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.087096344 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072069297 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093881302 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070167008 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09000469 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074907957 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065509958 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.090244993 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069596077 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.087518696 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06959745 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075164202 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090810476 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071868306 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095939387 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070739661 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087501571 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071071722 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067862891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.08657193 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071328705 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087117485 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070068547 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072094303 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095896712 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069420447 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090036422 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071050799 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086832721 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078215139 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071027831 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090011491 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079052854 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086810395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072452058 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.095523956 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075321461 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090314325 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071338958 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072016825 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093085729 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070336603 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093381974 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069934409 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071648512 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089071902 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067806243 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087217406 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071307373 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069820384 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092856442 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071564478 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087483911 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070022535 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068325866 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088063733 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07483353 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094727023 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072844262 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091074855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065837639 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068275426 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089858438 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068677028 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.088988979 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074280832 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077001568 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090288317 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071127565 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.087023423 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080198951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09351127 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074328796 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068854102 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091134422 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072458148 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089921212 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072440937 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069739138 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089249101 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074526254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.089314855 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.071072103 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095196553 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074195866 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071370555 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089117399 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072253974 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.088009939 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066274217 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071901304 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.089100427 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075562043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091268632 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071256716 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099537034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068138221 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070313516 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091504614 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070484109 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092918027 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06562474 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072928939 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089283019 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071695833 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.084154383 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070321109 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068720947 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090842841 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070712905 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.08418449 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082311566 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.097507795 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074520319 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070478736 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087809485 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066310275 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0831777 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070722852 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073153685 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089971979 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082279298 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08746389 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070655436 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.082800617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071494512 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073851169 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.091683082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067970065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.083582803 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070271742 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074436649 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094460128 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069537458 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.089139139 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074314002 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07303089 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08695362 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074200987 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.085646451 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07606652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102339303 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072169779 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071171144 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096008082 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080313719 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.089311939 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066854537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.089044188 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073761633 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072044194 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.089513405 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071807903 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105119357 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075305231 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087927108 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070153965 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073095382 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086596947 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079945661 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090159522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071205087 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093455592 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073449343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096690735 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073593145 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096536137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.075326386 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074213418 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.087059725 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071712344 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.087094764 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069322877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072100086 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.091092272 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07573068 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096444553 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070222824 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100705963 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081475149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090303625 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06783805 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071162331 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088530614 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066994716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072820538 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.088635484 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069222639 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.087060199 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.070514002 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071443777 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09529042 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073334202 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.090666115 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071316954 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065465584 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090881481 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073294206 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08996345 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067132623 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071180026 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08985839 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.075840933 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092917063 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06879104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090304627 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073909072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072068048 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.084499986 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078471671 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087081244 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073899965 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070229539 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08998206 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.072070144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092276463 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.077103176 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089619134 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072945593 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.080255415 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092442573 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069031326 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.08755442 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077521043 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068405186 seconds)
  done (took 48.266628657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112040539 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083251622 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065183862 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082465639 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078190057 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0845211 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064676839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06651317 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082569023 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069142837 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082482288 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066828073 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093179885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089175171 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096068185 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086186974 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064054256 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067397472 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084015571 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067494541 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093158573 seconds)
  done (took 2.480302412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.09108465 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.103529923 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080885227 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101247646 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093992234 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081083155 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099198126 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080635911 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100761463 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094959819 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085151077 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098668976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076906278 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.09465251 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078763144 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097325199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101536943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075621207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100193671 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080222731 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095268769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097919547 seconds)
  done (took 2.807147629 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069672048 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069292105 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088934035 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065642369 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.071015609 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082958103 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.0761073 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.086495081 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073848852 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069187481 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.096789467 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070005016 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.090953242 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069509695 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070574792 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086205329 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137433292 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075163583 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087787784 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072146731 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065021508 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.091508216 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065960229 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085025654 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069891849 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075420829 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.089904705 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068519795 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.087455425 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069113169 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070437223 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.087275003 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07271807 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070630453 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087390094 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06960003 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.089701353 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070090657 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065592686 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.087699451 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070382055 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.084201624 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072143512 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071994168 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.086708644 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068954165 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088811169 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070869331 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06576214 seconds)
  done (took 4.628947801 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088250593 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.14465496 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090020594 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127005475 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087219116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096731805 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074161092 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124236914 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.086119262 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.069112604 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105486986 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.084295389 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089073059 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074247993 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.094769319 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069757249 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088838324 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067304645 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.092532979 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069197523 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.092056249 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076709552 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102318782 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.101727752 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07487457 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069562753 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.089581015 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075281462 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103825936 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.093256725 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075544804 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094095878 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087251899 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095234947 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070058795 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091119786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087787325 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.089325458 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072918237 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086332462 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072475582 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092129444 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078702005 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.106980187 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071489277 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.094851476 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07039257 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.085314602 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084301543 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091790245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079780575 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.105437221 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092869214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.071500888 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09342912 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.088033832 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.090204842 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068940948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.091575548 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084077342 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.086131524 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.074614881 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.102658383 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073662025 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.096914519 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086675478 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.093527693 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075965065 seconds)
  done (took 6.892923735 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079448148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093910825 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08525129 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104049873 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095657109 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077526016 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.096048346 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077274335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.095410844 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082214457 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095206261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118180652 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073556614 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.097948498 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077997789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096302314 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078766665 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095167934 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094797331 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078193557 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09491146 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084748626 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094948494 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.103471715 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10587309 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088896622 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07643439 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.094358129 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10339619 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076271322 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10666912 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075519762 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094415018 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103139654 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088129036 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094131738 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067872918 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095018255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076702222 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094852237 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07201019 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103484797 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09360545 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070803686 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.096487382 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075055487 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104157265 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107361079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079241524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100811005 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07663335 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103166259 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094228878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077150713 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102640458 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.127995128 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084985239 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105084416 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094691379 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08483101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104009461 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11170402 seconds)
  done (took 6.495777224 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09141879 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096650903 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099738706 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064576056 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068161647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095304381 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069287021 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.08670134 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079553716 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097530522 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082539538 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093986858 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078520401 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101243693 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092804367 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078397495 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092770613 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073489191 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097280016 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075552514 seconds)
  done (took 2.525777683 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078206764 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106345085 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069996881 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09596074 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073399443 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077420893 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090997882 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074375951 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088830536 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074115553 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100963328 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082314429 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089671822 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077794873 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10048153 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07782505 seconds)
  done (took 2.174487941 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08176472 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.099528337 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084964901 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.090145113 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069180479 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08728739 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070913151 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066758902 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08500659 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085405548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.089665902 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072986401 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.089230191 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069898386 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067040688 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.093395185 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067195983 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087044139 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070948663 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.105516536 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.083194938 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.088140665 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071518975 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.091809426 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071978004 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.095717174 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072659995 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069082178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090053434 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071740616 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089813499 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.079671114 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.086058547 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06998864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088150965 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069620553 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070617062 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.090296504 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074479272 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.08830915 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070625083 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089106577 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071435559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073448601 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084983607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071558796 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.086109764 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076850398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069598432 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090661669 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.071382262 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091830769 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072170053 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100390508 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075194081 seconds)
  done (took 5.259728402 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083883951 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073591869 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084925575 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068533653 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092819451 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072527289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075569131 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091800052 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073513352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085891891 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073701681 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091457229 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073203965 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074027445 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091699106 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075402812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085593318 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073734789 seconds)
  done (took 2.2618791 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074395832 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069497925 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096178599 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070309631 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.089063178 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072103719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067525652 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.087766409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069582717 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088627549 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070505736 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072853529 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086983101 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073533076 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089667773 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07058367 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073432283 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088246671 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070892345 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08522556 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073580796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069440834 seconds)
  done (took 2.531425026 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.076044673 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.098813735 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170111122 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.110548808 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08600412 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103933678 seconds)
  done (took 1.467206287 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094391175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102577205 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06973885 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110638399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078574005 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090365162 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070790892 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091740113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08161538 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10558563 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070719718 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099644156 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098836329 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08331304 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09749697 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07830388 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091046046 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0715418 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089420997 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11039303 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070844174 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101310078 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072664105 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09080789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074094771 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100507923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101263305 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087081883 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091688503 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083127871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098451423 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072862668 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101818313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104729244 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074565282 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101092873 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072669114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110707728 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097355683 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080128803 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092381553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079913009 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101368532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078269977 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100376119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091822213 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079190319 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091063896 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074278651 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118388351 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098035508 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080497082 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098319482 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100425066 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082920207 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117425186 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104676142 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079953622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096371349 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104474263 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081822614 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095646493 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09925744 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086077268 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096947553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082427596 seconds)
  done (took 6.808607044 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086546994 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107676897 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072813944 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105527475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098400501 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072751474 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091038252 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071754562 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091708636 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071496036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132828821 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072653614 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099927235 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099460186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072010639 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089991773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071320248 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100153497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071496844 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117169553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09103743 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081583964 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099967393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100244802 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085811073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100109574 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073991823 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092416322 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090818725 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074535732 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097308621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075161737 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102342679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073232078 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100491616 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074794517 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092701136 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079335999 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093734515 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098442036 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082566017 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110737547 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073386381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092119565 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106637031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074011765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093549822 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073636878 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092659722 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073635922 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105537596 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089124217 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106985783 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100379878 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073883355 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092873307 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074632391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092333884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073205557 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097282027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100991231 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073121379 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118481915 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091458527 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073080974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101328506 seconds)
  done (took 6.742386335 seconds)
done (took 132.099140644 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203158347 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186322159 seconds)
  done (took 1.211440915 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071419821 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120633497 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083962622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132928869 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088530536 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104181591 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.12069713 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083126409 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071249692 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089135495 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071513517 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090834385 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137382883 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069149738 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089493399 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072779389 seconds)
  done (took 2.3258823 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107217425 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.206877753 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11379266 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070346953 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10486135 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.082729169 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089702297 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082707483 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097514983 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069961511 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103331292 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080870716 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070106499 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100696191 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095561014 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08388034 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069456601 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101626709 seconds)
  done (took 2.564933683 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109516005 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146579351 seconds)
  done (took 1.089323054 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204286536 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123602041 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206997308 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.478495967 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.245266589 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.300671036 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.181587226 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182986251 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.16377304 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.173815606 seconds)
  done (took 3.088137339 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101902148 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176256568 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323168969 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142112017 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.091525112 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.120463838 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.144762775 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.114001209 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08568707 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.106254462 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.105810081 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082972599 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124346879 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081532463 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098931328 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081196003 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126664703 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079320141 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099254352 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.080705142 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123110565 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070715242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099477905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079170837 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.103439408 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083932963 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090829828 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071864685 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099351421 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0805817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104134029 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.119684874 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083594859 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.137635081 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106127244 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.139256547 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101131373 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077970788 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080192354 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096071325 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082947708 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103496204 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.109271398 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082245892 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069900307 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102745827 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070501938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.090342714 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085475843 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.102389548 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085381173 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104194455 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.136300211 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102450686 seconds)
  done (took 6.477615203 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.762202208 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143112361 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077328525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.836279168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121105029 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089351463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.754960797 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09979045 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.240843333 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766986111 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11846317 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.08246295 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.213153491 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220790554 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939560247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296677628 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.649157727 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11096013 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114251994 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137112631 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165125162 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160309244 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.155186404 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43641093 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098431369 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074591037 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145641904 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101352169 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144072847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108651955 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077323204 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.161025362 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.254601063 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.165091813 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098969418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073174096 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07388742 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.176116566 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232212266 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.198314453 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163456414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069796787 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095594909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.148751205 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134295274 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070694817 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148640202 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.178609334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.154616422 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076175318 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.1010351 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.145654055 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.145646619 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148904655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104662001 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299195526 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.294788902 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073566026 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1278443 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087587607 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245682254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.106021301 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.189472105 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143135165 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196137772 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073972466 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762889909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154227063 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09473948 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080859852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125787719 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099409758 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149390369 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152118236 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.375344604 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.150648603 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076729594 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095428235 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212905765 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107372976 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073822181 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147874857 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099181222 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12843406 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151759136 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151959704 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152478586 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.24093725 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.150527367 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146318257 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.098117045 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.130168234 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.078247875 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.198278721 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.201198023 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.147474288 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.196012745 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166473784 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148338423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.154111062 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081026876 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.176314119 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124133514 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.085130252 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145515634 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198982771 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.129561688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106443972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077690363 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.147025726 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.13311353 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110048334 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.146323222 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.156583714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480191285 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.152361704 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070432663 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.11129881 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146536382 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.146522014 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100666718 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221370896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129415151 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.154579609 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127558891 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.090237548 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125329837 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.149169821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083176286 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128922235 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.164005881 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081470112 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.220535954 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.199379592 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081544652 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224747642 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.166325255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.081464165 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.154983779 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126535941 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152729967 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102990237 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.144514587 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101062011 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756037126 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.170155864 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126495093 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077888017 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178463766 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073585392 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107039207 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.088442717 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089504178 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.746844982 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108509823 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103008946 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086387161 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09899204 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12711843 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143939916 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077506593 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166573168 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193248067 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101095061 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123763492 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087502904 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.144878833 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097548223 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.106964323 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087368993 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108810736 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128912908 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075526652 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107465497 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152395516 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.147832335 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.203221392 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.550927901 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093962616 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087463344 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208806844 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094439128 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.25132105 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144709513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208482497 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147094867 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103958387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289793599 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.15020946 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178344076 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.090029064 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157943903 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091227526 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143407331 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.150009149 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094151074 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078780976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.150270658 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.173160361 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149955814 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943441387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073500742 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.210769308 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090847597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157076133 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07812755 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103131049 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280493714 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074176176 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155638807 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.151510198 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097385001 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106928506 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680531701 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.088764479 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16632673 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078842184 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205206847 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.149559275 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141860547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166277715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.081712424 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.147225695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.19229358 seconds)
  done (took 41.883684776 seconds)
done (took 59.465935566 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28557281 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217069425 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.235608825 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148991651 seconds)
  done (took 1.822464443 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149551918 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109247378 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121831622 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089328279 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.11171154 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.090025641 seconds)
  done (took 1.531160959 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.425563115 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279293562 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241165823 seconds)
  done (took 1.807121041 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.307765848 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.241666742 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.466389577 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309171848 seconds)
  done (took 2.293346508 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.202845069 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122204987 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093359536 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089771941 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.189825543 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.243721004 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131051797 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.192725586 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103004116 seconds)
  done (took 2.273684781 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.185975148 seconds)
done (took 10.772162711 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.190102382 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.316619488 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134436437 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095839091 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.155074777 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.302110197 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08733004 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.321597097 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.088227989 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.099896319 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.08359774 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.102691193 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.085255352 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080311894 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.122510588 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.270861337 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.301123781 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.198723676 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.148016705 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.056095804 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.103469427 seconds)
    (22/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072821768 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.180212218 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.20902011 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085634153 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.284657661 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078033159 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.201767715 seconds)
    (29/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.079031972 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.125102968 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091870924 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.261424477 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.215190945 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218710913 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.177640533 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.283735608 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078729122 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138823362 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098741065 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.104529888 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07579022 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144600592 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077237585 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098761295 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.175202463 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.294753339 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.077174779 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.239156746 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.135623412 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.248636791 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.186248862 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.103499258 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078812352 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055121642 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.103774484 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099334382 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112669082 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125821676 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.280334317 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086088455 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.108457397 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.157872042 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.178271531 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.093656146 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123355422 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136295261 seconds)
    (67/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.113414261 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.267149655 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079975052 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.122076295 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.246534615 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083386853 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.182961445 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104004651 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078997396 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.209452284 seconds)
    (77/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082909557 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.22224334 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076917802 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.24754302 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.263861677 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056455999 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.263111882 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.101451918 seconds)
    (85/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.116660034 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.07975937 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 0.093523541 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101465215 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.077520994 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055852522 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12349574 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098052935 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079176611 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076981625 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.069947635 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077916303 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.11818178 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080067583 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090829898 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079186346 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091432033 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087076882 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055065198 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102893124 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082599984 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178331579 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056250564 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.120708977 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07884675 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.178077336 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071026971 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105278324 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070338434 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.099245874 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071869959 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071284664 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101472931 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080461451 seconds)
    (119/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.123362143 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174166274 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057052219 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055355798 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077511536 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.131401407 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073881371 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.093297539 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055816429 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055737688 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139756795 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093395197 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.078664141 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180120765 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.16321817 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.166312813 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079107824 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.094010539 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055598918 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078045838 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.249392027 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.077539761 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.225328149 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098411729 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077758462 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077336458 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.099484935 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.303675312 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.091965425 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.258793149 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077626835 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.097855003 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.123953266 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.092665185 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.160794608 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.095695337 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081809821 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055745187 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.092436073 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.24724973 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.078345839 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.076910137 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.162932772 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077365529 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100416959 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.103006278 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092124597 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.056307846 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070579787 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.096248181 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074897577 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.252324238 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073235098 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056276379 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.100081089 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071855406 seconds)
    (175/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.119606576 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07901237 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064897243 seconds)
    (178/309) benchmarking ("sort", Int8, false)...
    done (took 0.170441552 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.254871784 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.080259023 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09473042 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055253067 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.129414842 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104431266 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079606041 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077449786 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.12533406 seconds)
    (188/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.118682427 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055624361 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.103673235 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056590421 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.0696727 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080458836 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.152596063 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175350074 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.197318138 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056707758 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.128552509 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070176891 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091535588 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070106977 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055207973 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.093073347 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055798777 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069779875 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092304795 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.07693836 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079575196 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.247048142 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078176856 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.171260242 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080385504 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091511546 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.153864798 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084418845 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.156351848 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.142485223 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076652549 seconds)
    (219/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07450178 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.078821356 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074042216 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.129448958 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.106535515 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115031066 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070455589 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064475375 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.102836281 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055565548 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070323704 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0779835 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17735669 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.200372807 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.168541686 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140079023 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.116503412 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.055069128 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.078750586 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.056866652 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069890161 seconds)
    (240/309) benchmarking ("sort", Float64, false)...
    done (took 0.155635979 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072436708 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066464311 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.101197857 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.119893122 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171196099 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.106696153 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09230791 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.11897847 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070372542 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064642006 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093152416 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.055045152 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056223424 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.077785508 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055410996 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070232714 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.092395346 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056995731 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.143962491 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070425497 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055620637 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098639642 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187030389 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.090411928 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056675471 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077531579 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.089042237 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079380643 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.092947783 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105714091 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071047855 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.082894049 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057586654 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092195865 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058823281 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09207483 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.093378784 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084231606 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.175768368 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072529753 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092945682 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057364908 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074056594 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.12043916 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079219195 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.16033828 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06922195 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079884243 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122832898 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069769381 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.091793836 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071587606 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09952083 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056720169 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071460945 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.094085729 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066350639 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075282291 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.116165318 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076955835 seconds)
    (301/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.07894179 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077537196 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069447296 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097999692 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05549341 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 0.157018249 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098170845 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077369039 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078189139 seconds)
  done (took 36.649092384 seconds)
done (took 37.508521481 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085610685 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12055187 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080434387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.121870152 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087199999 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.105575325 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078449162 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.106380609 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086390532 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.10997671 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085097067 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05880819 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.102635114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.08112235 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103456427 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100290218 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107434146 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077342855 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.10193308 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070573663 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078781714 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093034405 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072313666 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059305456 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105778081 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078556265 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.101900818 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080754727 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070142198 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.093255171 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073894671 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.101088005 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071642649 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083824933 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.099861106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078124662 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102834865 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08136057 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072228227 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.092586929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079589645 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.092803208 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078084331 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079305654 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.098776746 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07624813 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101541773 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086329301 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121511655 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07377104 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.103152339 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083835958 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082986082 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101941262 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075096209 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104794232 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075746334 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123497747 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079926992 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073226926 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101753156 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079799809 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.098637399 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078796019 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079409371 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.103576484 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082405827 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099298795 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080803814 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077023486 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.093575922 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078770417 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096415593 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070301375 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080895479 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.10477047 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069851004 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.099220644 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077681423 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076700738 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.092405061 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073598238 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072743171 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09908182 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073865226 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05884515 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097081845 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077794961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.092466297 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079688098 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077858049 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099891129 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073247452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.10474086 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070142036 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076054995 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094011997 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069959871 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073515858 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097971478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071512406 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095930005 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080763688 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.07259634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.099098766 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08639023 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09289278 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077678061 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070861883 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.092991292 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087555264 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.103576895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070299881 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073520417 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092614619 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078195498 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070362289 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093618 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070234788 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.093065005 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077453098 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071031088 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096940645 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078170422 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084848685 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.096327515 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073821336 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096463517 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070701289 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077071988 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094209618 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071085193 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07238736 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.089615234 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07408973 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070573114 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101580975 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073643857 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.101934551 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073600638 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080184056 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098204151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076489688 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099264736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070834324 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063382591 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096414904 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073545018 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07320346 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093524579 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074452508 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071089658 seconds)
done (took 13.940108575 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06986243 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180088748 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.134372091 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103365576 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.118414167 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070604146 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.106797503 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138017235 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072903943 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135621652 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094702974 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.114583785 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148407912 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070611661 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071480455 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09789485 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071837284 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11923625 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.110586242 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.117735258 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150864117 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069931922 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129402263 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119085948 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097250834 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13511961 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071822976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.097391034 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074475388 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123507155 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092752202 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074042757 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.094706241 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131503749 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103111992 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117243769 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071183554 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114497791 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.0710374 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.092723658 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.100287799 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132512161 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11112597 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088511256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097714721 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073667215 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072790193 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.117857182 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121229194 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089176403 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.118792371 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.141025459 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07243005 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109962695 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067795267 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115584574 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.088452317 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.095050059 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071692451 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073896289 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094059718 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073901336 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119430221 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.123759266 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076011027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.112658394 seconds)
  done (took 7.647714236 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088673898 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.120172362 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.089857891 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116025208 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07108829 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071734353 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095258733 seconds)
  done (took 1.573814696 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070738739 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095866389 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119857198 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096306805 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.116331229 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093830356 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104902247 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071712072 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113505163 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073301699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117532432 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114056443 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.097299826 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08097357 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.122729488 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072188801 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098271232 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095649186 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075393841 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120650906 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075632044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.11735263 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073782231 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072389752 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111292428 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071946063 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146966805 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076128139 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097270881 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075612105 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069978445 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.148695473 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110450716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083406911 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094187031 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088342667 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.111302235 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070743766 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088547373 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101567096 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086728138 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096463342 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073286869 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070112432 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100496335 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083169753 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096782388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073345689 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07453868 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.117986072 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073610369 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110625174 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072196617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077063999 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09731776 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078899996 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105020391 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073468178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093909949 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.097534816 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091775399 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114949898 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088116117 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114214111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07465123 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110468648 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087582515 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074273349 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098370493 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074896951 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.114686391 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070672792 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074263989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107581163 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073678855 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121739895 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097705138 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097891227 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08384908 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071861812 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.097182518 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072157136 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.121204464 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076610996 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095145029 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077537289 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076030948 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094265943 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071230324 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075538767 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094464126 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073670371 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075353242 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097093519 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075298562 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114837784 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073544003 seconds)
  done (took 9.81950848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07159243 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073558217 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098344854 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073592539 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074074064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096683874 seconds)
  done (took 1.424771811 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102566073 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.09816521 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087644847 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.103082325 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.11600714 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.112687822 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089033624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114079691 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.092118423 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.111383983 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089374129 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.115130947 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.118416077 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080003029 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087754964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.103136999 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090085359 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.108323387 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.085859414 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104106051 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.095490149 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.103480049 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08010503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11424606 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076520553 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.10287919 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083582172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.110345859 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08665776 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.114074997 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078655269 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.100010419 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078047936 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113671661 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088635812 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102098258 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079757757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.102647566 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083847037 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077351741 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113779348 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08058379 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.108973783 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077754896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113958024 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078692379 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101670543 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082747798 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.112473137 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076735222 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102241028 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079936984 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.100513875 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07798607 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.100982041 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089121812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.100875209 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089594548 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.102850114 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077802921 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076449819 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100760669 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112583057 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076261003 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109800638 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077714963 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077857717 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103195867 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080589159 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.103377992 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078258064 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099588517 seconds)
  done (took 7.781788582 seconds)
done (took 29.163299435 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.657611359 seconds)
  done (took 1.587230822 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815172297 seconds)
  done (took 1.746721104 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.48599358 seconds)
  done (took 16.423783364 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.656582442 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.815247082 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.830266514 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160070856 seconds)
  done (took 3.392062831 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.884164714 seconds)
  done (took 1.835879134 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249038219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.256994869 seconds)
  done (took 1.442474967 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.728881324 seconds)
  done (took 1.670209364 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.301768499 seconds)
  done (took 2.238681556 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.343486759 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189740705 seconds)
  done (took 1.481037625 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.539789345 seconds)
  done (took 1.488252227 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.562247563 seconds)
  done (took 7.516830366 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.236897009 seconds)
  done (took 1.198268892 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276206422 seconds)
  done (took 1.227457588 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.276868346 seconds)
  done (took 4.228728235 seconds)
done (took 48.411004209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082352615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084925191 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107051606 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082373936 seconds)
  done (took 1.303668195 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082402837 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077059957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103949113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07591705 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104145486 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075924261 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.102417437 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082429816 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100088018 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077475316 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07918783 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102037464 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081491505 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104533353 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077143077 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081929625 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105316651 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078497639 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.105526633 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078924878 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.099426096 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081993514 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104244302 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076896097 seconds)
  done (took 3.099818187 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080706959 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075999537 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100442663 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074930343 seconds)
  done (took 1.292626599 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080715501 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119506655 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094673246 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103803728 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097085924 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113658736 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072977968 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073550293 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098076343 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080640068 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.094006496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103182565 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.116099579 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079575601 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.106590343 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070087762 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.096758605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092771925 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08176881 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103754414 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07426624 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102334248 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070657616 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.118596977 seconds)
  done (took 3.20667116 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080238883 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128921359 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083436403 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118811048 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096193098 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069707073 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.104176576 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096488733 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154504788 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.091398267 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074226778 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068941593 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100184372 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068571128 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081095592 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.138333995 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141523967 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072847657 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125190399 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069003886 seconds)
  done (took 2.923344426 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078046367 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072906092 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.093173539 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07379979 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082114877 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.102245579 seconds)
  done (took 1.469346665 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071270749 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071002497 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.094470496 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071288423 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076798303 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.094751534 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070541789 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071855356 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096734352 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072664954 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096088728 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071685663 seconds)
  done (took 1.924574885 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458646571 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073131564 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.096112758 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069513786 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07548659 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095139138 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085911031 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073275163 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.122544747 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072231848 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.095433556 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073624468 seconds)
  done (took 2.360084272 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276161232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081044657 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.338173069 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173376549 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143786961 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162878948 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133705037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122376063 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204252891 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143812351 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235314232 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230710078 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139261447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175683541 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092998095 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13717019 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220553129 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205727345 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134296321 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23330603 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215109158 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162360181 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188165926 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133881449 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139591918 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153323529 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076114158 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108965161 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242946501 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167638927 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209896288 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141911939 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124196099 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217636509 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228786793 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200759925 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16812247 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088776248 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16293355 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169742781 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267466368 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116313557 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228984172 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137713778 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08633639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180532615 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176666911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151689269 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141238581 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094025481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209299159 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249420794 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.176026293 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11513474 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116331718 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145744152 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148657905 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131778622 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251844445 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227722457 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165583061 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.099566796 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103396573 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220859112 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165077327 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149797824 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161745812 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123973162 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176903585 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219275838 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148811035 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182152108 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189661266 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118055688 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153704002 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181351174 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163044257 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24154971 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161047091 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076991173 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182678031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108312092 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110349395 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.175015329 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08040103 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24374795 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129334673 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.146142263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117930602 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141138159 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143492804 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2306106 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212728313 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110955284 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093214098 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132615958 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154986179 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184208028 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118513887 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142619136 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154598681 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.083435968 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201403011 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080344766 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161298532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10578178 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159896887 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169647254 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079713191 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182893813 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109089028 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131730913 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171783557 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229103224 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119884119 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086430363 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235374354 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162292168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135722221 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185146469 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223486562 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131266065 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131752046 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187377773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253047194 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120430588 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233629832 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111060894 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113021661 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.119033743 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163114777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146607507 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155743489 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087559939 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.160863103 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235599464 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102427113 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10044276 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197861543 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08665283 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113130631 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14528352 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131254683 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09998085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.132451184 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140014351 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17657669 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183962607 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11455908 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185105699 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105860671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229313188 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119181731 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.134516113 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134367257 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075552743 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17409999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229199477 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083707439 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235222225 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.162870323 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137062752 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151558812 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112612492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178690279 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0835289 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.100032051 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180763934 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142882023 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144126619 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217873002 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110753482 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18853199 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158987495 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170196795 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16779378 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16862005 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136633436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.117079743 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144111771 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161997606 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.101875343 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099586103 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113731368 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135538522 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125405203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087276437 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182034327 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188836464 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104699748 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145563857 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128921827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216858156 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.082658585 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168450364 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153643874 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126201262 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222208934 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201145909 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19667627 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105828502 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211574527 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074917101 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103230535 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096646259 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189487946 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088243609 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113794262 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150223033 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188290189 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189155754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175353813 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142127849 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157149653 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199044352 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099522957 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123933952 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216272001 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159863079 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157419768 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095993347 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.128815228 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185146785 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136725233 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257386223 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14798391 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183370209 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192411776 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135332542 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09032837 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134080285 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200243661 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137763716 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193058258 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132771889 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119293848 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144271954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.085718338 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136241633 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162185901 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1530475 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197371396 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150054947 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168932649 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106151071 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149772684 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158901077 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155708396 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068097892 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152726315 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230946885 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126317663 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152324043 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22209132 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084577883 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156461902 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251025035 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20807724 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090209288 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141059818 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156485173 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164941417 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177000043 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179760314 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14405309 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172112859 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143938269 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.09016099 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117988864 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130112166 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140281391 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.102125943 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147603767 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175374148 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099659631 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166301727 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145223294 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14341627 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153410995 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128629717 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096550875 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128692634 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243697155 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156897531 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245581181 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.132416807 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191053379 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234910861 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104507487 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083915708 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.111450858 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177215854 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113578003 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171434702 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.126765593 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110730813 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162365445 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205291467 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126445379 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072695161 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142795057 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171852326 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143565841 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129916793 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138063993 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207020191 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135017637 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108705415 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162213447 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111163798 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133602287 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245794668 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08976156 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102757625 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106537488 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086527769 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167251215 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224039944 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.112836612 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.133726488 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150452826 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182391596 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166717548 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132591197 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102551703 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144942484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214206458 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167845038 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.097404125 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147160443 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19394229 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199164707 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138410301 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.129717083 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240178415 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196015655 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.233742955 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119185871 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150374822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149037959 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145007722 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180335682 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113467206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238369065 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087113249 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202818439 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136354824 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124722028 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166460041 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102503816 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119108465 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231418025 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155995445 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087874853 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110641599 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149112786 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158741686 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134745437 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078361883 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205788256 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075950422 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174648077 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236534965 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111684452 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137480861 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103714737 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111262447 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139216284 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13639287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091835888 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.148741304 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244088422 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123408108 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193564829 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206866636 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149782501 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176327625 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132884097 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670095129 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107977054 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197099695 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152517903 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251076479 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130767951 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153722194 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143586965 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15836157 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207704057 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138546049 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182750861 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196972145 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157187672 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083577175 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135657579 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14392664 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120982135 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140065761 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148875583 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15114923 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131641776 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.156835886 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165727743 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111774629 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10140901 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227022503 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153507858 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181753185 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205025038 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090658724 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153122096 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207662287 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085557507 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.184482463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200328005 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143031313 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131657173 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.112004959 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138690112 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213211472 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.103167085 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231257284 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160306646 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143308017 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149895344 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.157329905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169971927 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140772479 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16021036 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127228493 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148289644 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150608643 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115059873 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083308481 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139351531 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146917886 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.133421662 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136142701 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.126580093 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217793864 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07529522 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129075988 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136855541 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189417806 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253031088 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.119230168 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08783787 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179097773 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146576411 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152111013 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162495841 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.088747201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115549002 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.114440178 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.120775105 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.144165429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150525428 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135349714 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146821143 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212353641 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.114719692 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.259039738 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102796568 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142068061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.098178344 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.084291737 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130404217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128624134 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137383216 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103277809 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244350893 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.128713141 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098902985 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128017102 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104145901 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090362789 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169294325 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145740731 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157597099 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128699736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067206881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141128865 seconds)
  done (took 74.504693337 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137995444 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.106765367 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12191734 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.177430173 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151438596 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24377265 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.185171572 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228679238 seconds)
  done (took 2.394077215 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072058746 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121691483 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109570227 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.123824812 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09516385 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073108068 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.318810175 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.116850712 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.096445203 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09877937 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128309947 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0959279 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.488424798 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070645856 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.099934632 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.092807 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071592493 seconds)
  done (took 3.304113783 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453339638 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.648168644 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.451753132 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.102321325 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.894223231 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110633223 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.40841285 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164412943 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093981236 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.428629993 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.727731058 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.15366207 seconds)
  done (took 17.677069522 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078329678 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.074854521 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117240577 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089308197 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104023976 seconds)
  done (took 1.499549856 seconds)
done (took 117.905214061 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08270815 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395780497 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058101899 seconds)
  done (took 1.523831571 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089561914 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091840495 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11866863 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.09037894 seconds)
  done (took 1.439456907 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077943694 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081264736 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118402935 seconds)
  done (took 1.323893511 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.302448833 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178189529 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095428419 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086309352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081155232 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.109407282 seconds)
  done (took 1.319719894 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076418274 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080745405 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10466104 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082604791 seconds)
  done (took 1.379301854 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079547466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057295671 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059754144 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.087391336 seconds)
  done (took 1.326688039 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093422969 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.110032038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085147371 seconds)
  done (took 1.329302603 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112876745 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117164447 seconds)
  done (took 1.27230355 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085229924 seconds)
  done (took 1.123271947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095851398 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.146913508 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.172056599 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.146522927 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.182977938 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.147506161 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.122723136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.095018844 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110900749 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.121684662 seconds)
  done (took 2.387172514 seconds)
done (took 16.116012651 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081917049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392425436 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366079262 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121477635 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674178061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388250979 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981914172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.127792538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116222871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102189209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090146491 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.681085784 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007224126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.35107719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994261569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330452201 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680784999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074214354 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.101383278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073936011 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964816667 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101012895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073192447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102067179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655591939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378673372 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101441955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329280909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100988538 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076065249 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361571844 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101211756 seconds)
  done (took 16.116651788 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074777977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148689422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078186444 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090139251 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.102688338 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075822762 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.104922927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074566895 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157371463 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072957368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120343839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072468491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104786605 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073893017 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094317506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102370803 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074463852 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.101013649 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074454499 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074695903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120575015 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073015392 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.100965655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074283068 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074161201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112778183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074197422 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.100891249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074206543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076481514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.103611419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074724548 seconds)
  done (took 3.981243269 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120569146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158902542 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080807326 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137536019 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.149141989 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076563844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.179292854 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.101142866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160237906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073672912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119094531 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074210244 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135604863 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074696195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.12110167 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07455075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.102234876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074883 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074617807 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.101121024 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093886344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100158622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074682004 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074489817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.101213028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088053817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103226333 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077984685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100735154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077387392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077782907 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10146161 seconds)
  done (took 4.31423884 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075084067 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078123414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11434236 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089117494 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102505674 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077881733 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07911626 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103305607 seconds)
  done (took 1.767649857 seconds)
done (took 27.215810461 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083081349 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075917351 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106527268 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08761273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.106283046 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085454684 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073055691 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.108279082 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081309967 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.105918746 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.0821277 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073847883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.10367172 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073357766 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080639503 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.101672604 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086818549 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103997949 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085843115 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.115005687 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075077101 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.081517845 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.107357484 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085934047 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.114523189 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086566316 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.113143581 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079566631 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075229406 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102837412 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083109706 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118754514 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074415053 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112931979 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073943231 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073612107 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100458364 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073216295 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.086546629 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108333237 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077073602 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108403523 seconds)
  done (took 4.877021741 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093460573 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099988451 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.121428678 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06791467 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101255835 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067087702 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.125641367 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065850417 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067363336 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.124049287 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060208703 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063566902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.093158026 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05870877 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062638451 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061659548 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.093498529 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061928503 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062454416 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.091620516 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065367867 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059184854 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.094014927 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065071615 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061358283 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06831647 seconds)
  done (took 3.107264015 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077926226 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08842438 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.122586645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136727207 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141144155 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080386556 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.112177764 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091626665 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.119113582 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073823089 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.104636932 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102737775 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093821415 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109128231 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073691264 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11810848 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08855462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074743149 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.108164988 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095346471 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.117303961 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083982089 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122621868 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085184926 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072207711 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102883649 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077093764 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.114728044 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079459411 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082950757 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.106338969 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077358291 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.102797351 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085127081 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103724738 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074976005 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09332655 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109497673 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081566763 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.101487128 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077563605 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073804192 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120578722 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118768912 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.10080709 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079595628 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109152843 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083989701 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0726783 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120153388 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083521068 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099868954 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077738338 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072639133 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.101050179 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087922941 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.102454277 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076510018 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083285502 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104316493 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08597378 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.103498845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089697717 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.0737757 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.109307735 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072845007 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.100758747 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071953549 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096183848 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10135626 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11550611 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.101603094 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074921178 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.109435325 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081369656 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079422725 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.10149261 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089723587 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110758416 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076735429 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082739652 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.105088484 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076296439 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118013151 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075996134 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074181485 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.100811607 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079649408 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103126872 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073973646 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087467144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100509705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076029062 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.118628819 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073046524 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075363603 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.107363539 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077954976 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112029032 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08699827 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.106021148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073707433 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082430002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09967212 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075772893 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.109512292 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077990069 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072304762 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10569698 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07969772 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.100519701 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074881312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075949494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.101865674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083109467 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078905811 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.104383613 seconds)
  done (took 11.950842606 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.203297265 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191568437 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073777601 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184559566 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083870972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11067931 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.189334442 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.107265594 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.103315416 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073746055 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.102036936 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113900925 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.136784263 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150246361 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084669531 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073190722 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.12101434 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.143755335 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19662159 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.159022576 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121585944 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081599324 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.10347319 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074783573 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.103016592 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083502341 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.123848482 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083792491 seconds)
  done (took 4.450315362 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084375657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.131506236 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076710404 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.123808127 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098245098 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.100635219 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077820668 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075580356 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113625227 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085315833 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101422512 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.080862359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.108805075 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.084073923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074045111 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.111238872 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084133956 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.102288144 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077498739 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078536028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.10721765 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08671222 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.105523742 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072537558 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079996245 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.10101454 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.07057691 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118232396 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073263091 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.124251453 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071833417 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.10747157 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084360137 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073802138 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.10207631 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.075983734 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.10361165 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076131312 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074808574 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.099912345 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072000753 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062833291 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.100825754 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085920102 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.108649528 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064747322 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.0790672 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.10532617 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.079664278 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.099090925 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077600556 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075701109 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.105819171 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080980965 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078664805 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.106830642 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.076397344 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100443589 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079525932 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.075550666 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.096878583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073277001 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077855351 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.099254203 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081480028 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.106939984 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072143891 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.074547815 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.105066154 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079413042 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.102909724 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075982473 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071607863 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.103170333 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078254947 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077354935 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.104576854 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072152945 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.099313574 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073440874 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061082439 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.099667351 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060089149 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077044988 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.098734813 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071638736 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075404019 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.110001675 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088423096 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.10238847 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080836584 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102345754 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072619721 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076872388 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.096278001 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.077269133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089913809 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119580307 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101566887 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071313346 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087996603 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.106697003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073052635 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061508369 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.109333498 seconds)
  done (took 10.3727987 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095417917 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.12496676 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073427199 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088271236 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127580641 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.098299977 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10861801 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079678393 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075363419 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.118029842 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074636907 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.110082284 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.077413579 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081421014 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125899197 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081969774 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.102499261 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083444739 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.109588143 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.112650053 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087460776 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.116572226 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.083479747 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101144325 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079032729 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.114296374 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.102563752 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.083848588 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109540782 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.086553635 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.111327117 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.10155844 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.1187948 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.078209487 seconds)
  done (took 4.400132712 seconds)
done (took 40.203660355 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.13123176 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.338692187 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.123976152 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.983478719 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.174033297 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.160168892 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.138986677 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.1238699 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.494781173 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.124594262 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.347906367 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.723704423 seconds)
done (took 58.936123519 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.237629239 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.260640378 seconds)
    (2/2) benchmarking "String"...
    done (took 1.398571927 seconds)
  done (took 3.728556172 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.499766713 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.082729965 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.409995218 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.12545897 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.125190252 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.572293617 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.701626753 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.947166478 seconds)
  done (took 27.033477526 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.130832625 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.483191187 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.461173276 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.467185985 seconds)
  done (took 17.613617406 seconds)
done (took 58.184467628 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.132859096 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.169759244 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.132434552 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.121026291 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.232168964 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.144094697 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.359059168 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.162296672 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.133866559 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.114658775 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.146349986 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.129405472 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.141246179 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.361673935 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.126546069 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.133460682 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.180841619 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.659125569 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.501397038 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.130688451 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.135894732 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.172772146 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.129019205 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.130946479 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.17715137 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.126111219 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.126781415 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.134101771 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.340648176 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.127316413 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.224158941 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.584504161 seconds)
  done (took 187.692285608 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.125691188 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.139101255 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.26896987 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.150647624 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.614941183 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.329165074 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.249373573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.686626209 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.144441295 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.14894477 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.438064335 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.128054225 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.440433655 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.179639201 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.136705867 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.235991489 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.441659611 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.437130577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.144358901 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.358780683 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.143863316 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.390367395 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.275581176 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.373676267 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.151206849 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.147962155 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.141760323 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.144385799 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.320674864 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.358924013 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.132789466 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.144684108 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.695195483 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.989541084 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.130234849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.145412155 seconds)
  done (took 147.554878488 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.401551119 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.127821765 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.12800032 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.128927908 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.159129161 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.127637161 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.663334408 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.663856272 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.633027634 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.529139556 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.13105814 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.186592533 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.387422172 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.130485496 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.220552431 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.1390661 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.128982358 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.142330295 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.15347126 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.131051876 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.128858095 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.662811 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.143539419 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313043384 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.137294988 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.129864652 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.158634215 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.521658311 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.129897252 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.129272054 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.15901932 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.443248697 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.171639358 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.127578537 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.440605836 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.44519965 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238778836 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.131464246 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.158666776 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.128879796 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.394924084 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.129363212 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.130730055 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.132404638 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.716798113 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.131158385 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.665626601 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.133517184 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.042469453 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.133482735 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.130527999 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.27350535 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.629899687 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.132038601 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.128637147 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.132001327 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.128831232 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.13002985 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.159773275 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.129716315 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.120571166 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.228699751 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.130939383 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.133634829 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.160053062 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.130244029 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.184208927 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.13022986 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.192358724 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.187941252 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.357306372 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.668452499 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.133736094 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.223057249 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249796879 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.130597456 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.131207406 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.129860892 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.130848531 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.237320506 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.130795957 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.130471464 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.522381402 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.136283164 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.132983382 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.189498716 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.223546535 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.130532216 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.446079401 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.134383857 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.130835098 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.887979172 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.227706901 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.130986741 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.131256835 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.132215441 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.523033233 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.667982316 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.337627108 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.135166034 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.203898403 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.134649264 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.539140229 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.644680621 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.737085231 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.13639502 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237989684 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.13628972 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.134062708 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.131369686 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.160758608 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.132468876 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.186716373 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.133190467 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.529383379 seconds)
  done (took 336.127683322 seconds)
done (took 673.847413486 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.81421796 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.76627738 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.892760057 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778716627 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.762141257 seconds)
  done (took 10.091791078 seconds)
done (took 11.169990412 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.311031001 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.312329892 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.1913273 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.311576871 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.164523513 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.327978022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.292002552 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.154187494 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.231364676 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.206119685 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.229201632 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.183434412 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.161998388 seconds)
  done (took 17.155922252 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.441121132 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.446688124 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.200372358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.444728924 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.174746157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.438030675 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.330860674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.338882633 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325112723 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.149950491 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.148712026 seconds)
  done (took 15.518708266 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.464495224 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.443667983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.202900042 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.455008614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.176183579 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452029961 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.341797994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.342558746 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326958392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.153115409 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.149128615 seconds)
  done (took 15.585818612 seconds)
done (took 49.340284991 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.144889911 seconds)
  done (took 2.222528597 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.178359129 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.339752543 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.161526992 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.15402232 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.148410924 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.14841169 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.151894152 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.148540547 seconds)
  done (took 10.510601643 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.142145765 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.141551514 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.146351083 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.143861109 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.142940764 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.145596181 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.145505359 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.14527969 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.146020647 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.142667672 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.145272097 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.147495758 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.141510793 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.142125817 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.143433785 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.145539334 seconds)
  done (took 19.387844181 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.143986544 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.142536429 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.142462427 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.145705177 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.142668329 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.143483636 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.14402202 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.142914682 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.142845396 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.143682827 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.143656348 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.142765059 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.144680964 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.142956231 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.142866248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.144294784 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.14332056 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.142366192 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.148079682 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.141939935 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.143301358 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.143568875 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.143804185 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.145213005 seconds)
  done (took 28.530171655 seconds)
done (took 61.731572151 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.219526191 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.718170249 seconds)
  done (took 9.019236761 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.145894078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.145794436 seconds)
  done (took 3.37497864 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.14699686 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.14563911 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.146302907 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.146458804 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.146001665 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.146307919 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.146801031 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.146255891 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.145039933 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.146915595 seconds)
  done (took 12.543738296 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.147605906 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.147467635 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.145923616 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.14713528 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.147064722 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.144424694 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.146494314 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.145938309 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.147396476 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.143217985 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.146445908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.145247717 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.147122748 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.144317979 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.14718842 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.144788559 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.144806187 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.144614882 seconds)
  done (took 21.708820284 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.146226971 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.147233521 seconds)
  done (took 3.376376996 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.145176223 seconds)
    (2/7) benchmarking "second"...
    done (took 1.144982702 seconds)
    (3/7) benchmarking "month"...
    done (took 1.143854222 seconds)
    (4/7) benchmarking "year"...
    done (took 1.144700655 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.145299845 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.146256451 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.145490333 seconds)
  done (took 9.098255349 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.147833407 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.330978804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.410136001 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.782011741 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.149440092 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.152699231 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.0074062 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.151179574 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.154711511 seconds)
  done (took 13.370073309 seconds)
done (took 73.573781656 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.136615292 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.138936507 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.044991007 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.153731816 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.158210892 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.484268038 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.173091674 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.261235692 seconds)
done (took 36.635202535 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.160435971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.833148909 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.837698686 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.149143537 seconds)
  done (took 10.903602875 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.136281434 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.047812537 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.13988281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.139571812 seconds)
  done (took 17.548924614 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.74468758 seconds)
    (2/2) benchmarking "read"...
    done (took 1.474195487 seconds)
  done (took 4.304190079 seconds)
done (took 40.00071592 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149140726 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.149432143 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.147539963 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.1502702 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.147936005 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.146989231 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.149993225 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.150757559 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.150078219 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.150023791 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.14970778 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.149861425 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149977624 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148109429 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149923475 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.148098549 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147594428 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.150321994 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148630493 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.147829729 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.147978618 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.151759636 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.146966826 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.148310706 seconds)
  done (took 28.661375444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.149507429 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.148812187 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.150416309 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.151441071 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.148522507 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.150033963 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.150662525 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.14926925 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.15097497 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.15001272 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.14773992 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.148652553 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.151935889 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.14851167 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.151090079 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.148950472 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.151685239 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.148033163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.151770825 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.148986207 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.151453861 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.148980988 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.14927953 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.151368071 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.149141848 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.149267612 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.151831253 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.149850381 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.151360764 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.150281345 seconds)
  done (took 35.586511024 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.155191738 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.158533475 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.151225351 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.152550238 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.150671683 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.151583661 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.150804862 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.151960396 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.1522742 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.152148066 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.151757304 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.151261906 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.152861385 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.152220069 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.153199517 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.151582406 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.152632563 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.152863556 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.153114671 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.151737006 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.151803029 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.152437573 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.152264194 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.153344721 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.152795967 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.152236871 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.152441629 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.15217414 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.153912818 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.153321287 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.15306177 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.153195229 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.152973064 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.152724252 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.15372809 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.15356657 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.158333813 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.160331906 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.154127501 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.154107641 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.153549342 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.154434976 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.153259614 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.153355725 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.154550425 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.15445869 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.15362184 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.153271245 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.153317544 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.154178375 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.1545529 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.154593275 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.15366205 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.153887475 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.153638967 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.153958872 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.154679209 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.153845573 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.155057418 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.153098498 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.153834081 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.154388953 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.154803314 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.154874815 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.155245764 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.154534071 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.154835598 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.154055065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.154794065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.15513499 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.155633179 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.154959328 seconds)
  done (took 84.14800764 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.154809021 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.152915632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.152622032 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.15358936 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.15286293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.155989716 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.151540205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155687136 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152235006 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.154385569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.155359154 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.153311741 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.152939927 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.15495856 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.155183227 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.153439967 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.154862707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.15380362 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.156144024 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.155891764 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.155549872 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.152934133 seconds)
  done (took 26.480789846 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.156077076 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.156030442 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.152781983 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.155979188 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.153591358 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.156065108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.15788775 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.155933249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.156669922 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.154393872 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.154426632 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.156817744 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.153672533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.154128178 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154506451 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.153910803 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156232242 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.154396103 seconds)
  done (took 21.885141071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.155174187 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.15506495 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.157466542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.154051754 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.154598027 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156311625 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.154577934 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.157746005 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.158017458 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.154529301 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.158030617 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.158245538 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.157218998 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.155927306 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.157457347 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.154964207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.158699629 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.155177458 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.158232062 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.155780332 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.156285922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.158740828 seconds)
  done (took 26.535138269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158713141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.158531277 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.156483299 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.15620778 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.156668776 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.157553668 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.158596371 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.156245238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.158319113 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.159655367 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.155943358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.158646693 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.15502591 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.156624562 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.155034562 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.154619663 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.157980776 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.155756419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.159355529 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.154831794 seconds)
  done (took 24.234310725 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.157977331 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.159003605 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.159564189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.158479408 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.15862479 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.160871354 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159169747 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.159112245 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159654045 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.159091738 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.159421099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.159642375 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.160045047 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.160310328 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160031089 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.159497156 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.160580946 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.159119538 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.160484852 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.159887678 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.159894292 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.159700618 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.159611201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.161242576 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.159397146 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.16033721 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.159360835 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.160544074 seconds)
  done (took 33.565010513 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.158422379 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.158963878 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.157126673 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.157687001 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.157050442 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.15794327 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.157035794 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.157552101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.159986046 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.156806876 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.159395913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.16005139 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.158578132 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.15987553 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.158998144 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.160227548 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16015637 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.157116535 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.156983598 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.157151505 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.160764833 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.160139622 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.160320719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.158542391 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.157885615 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.160211701 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.158217002 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.158807303 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.161790802 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.157631323 seconds)
  done (took 35.85795475 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.178363561 seconds)
    (2/2) benchmarking "in"...
    done (took 1.179674948 seconds)
  done (took 3.454493418 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.158108377 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.160733931 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.159926072 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.160208063 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.157546429 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.159636672 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.160309924 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.157771614 seconds)
  done (took 10.370384001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.158397896 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.161418329 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.160620907 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.160938551 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.161029786 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.158791502 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166372553 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.176692409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.160071375 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.160891594 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.166421937 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.16832913 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.162556055 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.159124834 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.158710118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161314261 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.160499291 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.161624002 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.161888281 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.16062012 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.162395383 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.162285574 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161413339 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.15779393 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.160200737 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.16978524 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.162690326 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.160421289 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.162509717 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.163260716 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.158732564 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.157409132 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.160589181 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.162091278 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.161367775 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.160195689 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168636149 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.178437559 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.165282095 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.160812927 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.160838807 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.157314329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.160347541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.160607468 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161050439 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.161104137 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.161068159 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.1577711 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158954659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163608228 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.166226703 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.159291314 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.158379003 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16259671 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.160635937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166925508 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.177469187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.162519297 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.167762027 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.169882653 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.173510142 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.168143604 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160530774 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.161469186 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.169423936 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.18277841 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168973341 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.175097424 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.15974268 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.161610536 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.168397344 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173541435 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.169600178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.163141841 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.161907202 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.16188212 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160082565 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162148484 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166748923 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179511981 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.162974491 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162088304 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.170860996 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.182095081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.160707524 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161932084 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.161191291 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.162789389 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.162858789 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.17122889 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.178459269 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.162851798 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.160945565 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.161438385 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.162860714 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.16303025 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.160948409 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162538304 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.160997481 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.163459606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162749997 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.16533135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.17010405 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162791818 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163580155 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.168774199 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.16469292 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.161371723 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.169407155 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.163403283 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163261269 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.162669201 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.167996429 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.1612174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.1670445 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.169842757 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.164199432 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.164071382 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.164574252 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.164226402 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.171995756 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.188243982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.164627438 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.165393053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.168712289 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.174443068 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165002044 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.165812191 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.165494448 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161068376 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.16124505 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.165776498 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164507312 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.163843551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164277649 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164673814 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.161277142 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.163438757 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.163994066 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.163770944 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.166592718 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.162897628 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.164077688 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.164923853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.165476956 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.164826026 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.170539092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.164612885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.165628065 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.166885643 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.163114986 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.165528752 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.164720006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.164191734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.165017646 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.1655522 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.163888174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.166942628 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.165633504 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.165187668 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165379242 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.165641801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168132249 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.165997037 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.168428624 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.163766996 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.16442904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.165393975 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.165460056 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.164353915 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.165738699 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.16325018 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.168181159 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.17400927 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.166601719 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.166200957 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.16809653 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.165563015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.16637545 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167042311 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.167825582 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.171497313 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.166187063 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.17401887 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.165590635 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.165504653 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.166040497 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.166014549 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.165308351 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.166083112 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.167597064 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175316389 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176533023 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172777726 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.166113019 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.169980429 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.166382711 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.170389724 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.168560593 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.166271373 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.168309985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.165909049 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.1646286 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.166015697 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.166592608 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.165869085 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.165565785 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.166174474 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.165642766 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.169265506 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166610407 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.164989387 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165919611 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.16277015 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.165568933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.165867419 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.163402914 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.165309973 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.163794121 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.163580257 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.166285354 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.166329171 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.171457801 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.164403391 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165243547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.165449068 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.167312207 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.164344742 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.166289755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.167245412 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.165569682 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.171300823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.180616672 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.1657367 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.172901875 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.180826447 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.164458861 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.168119264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.167187997 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.164934398 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.168827474 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.174156669 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.166363848 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.168332115 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.167644388 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.166680086 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166731499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.172930784 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.16517116 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.166980016 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.16787086 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.169379036 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.164454453 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.167249564 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.168495081 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.167174977 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.168689417 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16781285 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.166844299 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.167681231 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.168087876 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.16793027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.16788811 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.169744633 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.175413677 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.171027066 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.166712451 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.168903267 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.168247665 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.172013517 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.166287296 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.168346984 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.167097404 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.179712556 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.176136572 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.1729651 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.169216082 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.169809561 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172854391 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.168185921 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.171380437 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.168558259 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.167678882 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.168432138 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.167737241 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.165412186 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.168662331 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.167862998 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.168475307 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.169752385 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.172611249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.169162659 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.167960242 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.170214703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.16954826 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.169452655 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.167872207 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.169118368 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.170002628 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169013818 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.168411729 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.167554358 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174375819 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.185939659 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.169291506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.168103931 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.168333939 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.166667086 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.169119923 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.168805628 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.172198005 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.177293781 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.170530829 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.176966384 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.169619826 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.177983022 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.170407073 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.172407741 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.1772597 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.167488996 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.169712997 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.167833657 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.169072792 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175594653 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.185626676 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.169440472 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.173765461 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.169499332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.172145602 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.169532401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.169144961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170066717 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.169812326 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.177097198 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.186401041 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.17174719 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.169318619 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.168335845 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.168433502 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.168865177 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.16756635 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171774655 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.17010906 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.170148175 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.168725281 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.171770005 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.169698513 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.169413341 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.169896048 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.166930755 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.170035466 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176286428 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.184641919 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17342698 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170804408 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.175492993 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.169272254 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.174802577 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.184695865 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.169342506 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.169448468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.170025417 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.17072597 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.167481942 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.16969857 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169089693 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.168499493 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.172435782 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.169142476 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.170454598 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.168533525 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.170086875 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.167960445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.177968679 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.191713061 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.169479541 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.173547726 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.167643301 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.169737253 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.174448598 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.170844337 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.16754374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.171094143 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.178695452 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175969051 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.168286461 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.169733859 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.168988941 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169740332 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.169934489 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.169829828 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.169934882 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.169650713 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.168993552 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.169921655 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172506641 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.170421896 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.169544056 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170207911 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.17058144 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.178986791 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.171443878 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.170329635 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169762811 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.171085429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.169140491 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.169563426 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.170835673 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.170407021 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170185153 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.171315258 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176154058 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.176827322 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.17186651 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.16986331 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.1710749 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.170465249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.17059936 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170683088 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.172151796 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.171631032 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.172001586 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.17207324 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.171668578 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.169514821 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.170731097 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.170933367 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170319939 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173554711 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.177320584 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.170924551 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.170346189 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.172512918 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172091005 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.169317647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.170056257 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.178092137 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173370483 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.180959416 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.178637501 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.176012645 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.170568943 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174312482 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.17844399 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.169032124 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.17096233 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.171593906 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.172895982 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.172414625 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.173609536 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171996845 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.176780767 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.170770441 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.17104327 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.177802457 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.186050392 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.174438909 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.172581913 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.174080439 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.169608101 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.169159249 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.171606962 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.170229159 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.177792436 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.187838129 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175045969 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.171253037 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.169233622 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.171618274 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.175010803 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17166401 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.171294649 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.169364151 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.172460476 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.171142143 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172171642 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.168966196 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.169963878 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.169228354 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.172680147 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.176193312 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.168135572 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.1744971 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.169717686 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.170880682 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170768744 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171105208 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.167289423 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.168483966 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.170925739 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.172524523 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.170433225 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.17258006 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.170316698 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.171130781 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.172426183 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171625997 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172997464 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.180509161 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.179288427 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.170519115 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.170362564 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.171757982 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.173576431 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171566733 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.171790654 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.171326269 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.172387055 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.171715586 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17226396 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.172869337 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.173593423 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185970959 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.18735132 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170687351 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.172653662 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.175063624 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.173744073 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.170076462 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.173007679 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.173866052 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.17409656 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.179042506 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.172843145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178558224 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.18635529 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.17128441 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.176557174 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.175080582 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.178055551 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.174266187 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.173655005 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.174286294 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.176708447 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.186970152 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173825279 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.182385015 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.200235568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.18818585 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.173038902 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.173824436 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.172055529 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.174546425 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.174473593 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.174008786 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.174460549 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17465548 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.175046165 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.173548861 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.178276253 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.174798143 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.173358114 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.174427005 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.174243642 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.1743479 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.172705145 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.173296421 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.174945989 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.174062057 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.17548114 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.173769568 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.174358574 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185254589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.181783789 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.175312606 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.17510353 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.172440102 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.176641354 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.175503914 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183897608 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.181147981 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.175596305 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.174758235 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.175224883 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175412253 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.172994986 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.174389914 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.173944866 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.172393297 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.172610581 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.186682636 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183797455 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.178648552 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.17472723 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175487513 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.175480241 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176098967 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175310068 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.176323805 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.176237685 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.176484479 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.17986261 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.176179887 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.176239884 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.178086263 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.18390761 seconds)
  done (took 698.298235232 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173978135 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.174258294 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.173916402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174024969 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173809986 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174162116 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.175315762 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.174889084 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.173863832 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173929356 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.17442578 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174331515 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174172358 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.174189532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.17474035 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.174167157 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.175755628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.173747009 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.174632524 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.174764735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.17452299 seconds)
  done (took 25.772864841 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.176996753 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.17394055 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.175613801 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.178091332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174765323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.176977425 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.174453482 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177622099 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.178698795 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17572704 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.178744581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.177329473 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.174968709 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.1755104 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.175187519 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17801871 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177537536 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174688511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.177326675 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.175695437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.178301403 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.17594761 seconds)
  done (took 26.994132766 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.178958399 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.178478365 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.176162147 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.175223678 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.178198688 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.175855777 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.179103604 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.178633258 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.178423932 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.178723143 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.176780136 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.178036408 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.184203175 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.182703988 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.180028719 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.179175564 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.322485015 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.179747013 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.179329012 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.180204419 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.178083172 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.183011449 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.178401176 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.176218587 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.177776293 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.17956354 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.180478002 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.180779616 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.179339541 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.180549102 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.183432848 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.179674359 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.178344916 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.180273383 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.178592628 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.180174869 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.183210196 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.178685716 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.177551391 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.179294255 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.187625079 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.198449365 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.180400315 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.184338692 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.180319975 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.180138578 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.182927311 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.186737152 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.177999118 seconds)
  done (took 59.086417425 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.180234732 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.181256536 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.177974479 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.179151987 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.180649886 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.180952923 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.179806245 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.179171884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.178408144 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.178043007 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.180229644 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.178030145 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.177821746 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.180951092 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.180135069 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.177814074 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.178234007 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.178376908 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.179262262 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.178332109 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.17831909 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.180924504 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.180351763 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.179080831 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.181036087 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.17904134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.178537877 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.180576558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.179295227 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.178267044 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.182419873 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.180422409 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.18109943 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.180120322 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.178718468 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.181225604 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.182277994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.179381378 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.181644379 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.179010229 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.182462753 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.181116299 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.181476419 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.182087306 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.179616254 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.179258656 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.178415298 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.178733418 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.17991798 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.182784169 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.182764002 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.179200146 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.181715837 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.179794501 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.182280253 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.183806394 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.17986649 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.17943534 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.182297094 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.179336351 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.180052627 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.182064854 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.181445164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.1819428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.182744888 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.180540258 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.181038384 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.182607372 seconds)
  done (took 81.371602178 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.182285241 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.181448151 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182625478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182458872 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.183708577 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.183349045 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.183520662 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.182712477 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.183832471 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.183463873 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183884236 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.184008478 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.182953413 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.184093227 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.182993532 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184491969 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.183651125 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.183570379 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.183441153 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183629632 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.184406753 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.182877822 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.183394833 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.183691838 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184648557 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.183828564 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.183746665 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.184191425 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183152884 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.183871069 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.183885749 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.184621262 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185143933 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.18405825 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.184962181 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.184732784 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.184903703 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184956177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.184767587 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.184518607 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.184742899 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184728841 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.184869144 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.185367625 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.186050374 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.184786193 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.184056455 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.184661564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185770511 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.184632166 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.184925323 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184962797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.185990149 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.183967841 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185219201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.18576048 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18507456 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.184692242 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.185355124 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.185139817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.184852604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.18523161 seconds)
  done (took 74.540370373 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185336891 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.184830073 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.182705824 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.183157786 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.185618511 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.183509401 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185539207 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.185946965 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.184927525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.185744556 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185703037 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182368726 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183633719 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18650231 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182657243 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183447999 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183587861 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.183802868 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186195695 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.183420257 seconds)
  done (took 24.808392039 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.184686806 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.187178911 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.184344046 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184114405 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.185583956 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.184635754 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.186646603 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187325447 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185407058 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186695147 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.187307867 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.186626751 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.185059687 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.183521801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.187090594 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.184974084 seconds)
  done (took 20.091160592 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.184172657 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.18734417 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.186729325 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.187032595 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.185087402 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.184412965 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.187518081 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.185182844 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.184945998 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.188364323 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.190384861 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.187587104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.187903376 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.187309509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.184238794 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.188017846 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.184628305 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.184727269 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.187425931 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.187567322 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.186450251 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.184028851 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.187483728 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.186819805 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.185075014 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.184857141 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.184383482 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.185471817 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.184613523 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.187644468 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.18463903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.185325274 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.184595838 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.185040417 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.187836098 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.18573317 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.18788103 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.189336623 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.188629063 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.188194423 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.188537098 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.185969083 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.188698918 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.189078905 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.186672374 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.188137885 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.1862249 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.186558757 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.185198048 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.18573672 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.188398408 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.189043187 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.18975521 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.189443123 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.189342672 seconds)
  done (took 66.395773154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.187959246 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.189042582 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.186766849 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.189042808 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190401121 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.187382309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.190032265 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.187086018 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187434374 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.190212273 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.187501493 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.189553479 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.187049888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.189546366 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.187072342 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189661945 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.1879945 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.18672045 seconds)
  done (took 22.514824143 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.187907605 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.189015805 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.189558957 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.188804031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.187044601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.190262602 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187698435 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.190382913 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190133805 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.187498963 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187822522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.190696865 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18968325 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.190587248 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.187984047 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.188084983 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.191003166 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.189446538 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.187433467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.188129474 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.191241061 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.190298562 seconds)
  done (took 27.28435664 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.18827697 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.188627977 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.204011478 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.227024798 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.215442977 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.188912444 seconds)
  done (took 8.336879111 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189744814 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.191942151 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.189031055 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.191906497 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.191201064 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189128508 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188550536 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188651726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191456684 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.189680882 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189664893 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191050443 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19149478 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190276064 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191980346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.191934769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.188514501 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188968137 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190181464 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192076788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189673909 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191562152 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.189577816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.188735724 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189408073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190106531 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193162472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19019751 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.189874963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193027112 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192671536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.189436364 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192539938 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19118231 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19420867 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193810174 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190303617 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192821949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193373767 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191253829 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195225811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192561267 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193238226 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190365097 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193524513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191318912 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190464273 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190658145 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191562287 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193896216 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194053623 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191104679 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193815391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193019277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193960396 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194889749 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191877071 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191674244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194445112 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191411651 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191577671 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194142719 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19122362 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.189897504 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19415564 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191569332 seconds)
  done (took 79.767195109 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.190702137 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.191629651 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.191537295 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193054789 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192057902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191469762 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191914955 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192163362 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.191846018 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191693819 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195230964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192009939 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192046898 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19233748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191812792 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193122666 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192181094 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191951344 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191980476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194432274 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193074062 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191457705 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192430764 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.192946505 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191860999 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195050328 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192548849 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192509856 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.192623377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192675994 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193496785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193628496 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192727003 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194125463 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192728136 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19333077 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19290029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192912432 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193545057 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.19613274 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193893656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195981773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.193872938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193112239 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194691263 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.19404257 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193348085 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194529758 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193875709 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19466965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195749262 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195033786 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195249653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194769782 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195540857 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194769971 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194329283 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194882552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194934131 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196826008 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194863771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194678548 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197927469 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194517072 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195288645 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195999654 seconds)
  done (took 79.905006728 seconds)
done (took 1627.032396006 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.287627202 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.269477901 seconds)
  done (took 13.687521193 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.357351928 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.310365329 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.195301084 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.201777182 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.193902984 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.212596538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.187513567 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.193837802 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.193961353 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.192904537 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.195277834 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.383073674 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.19198263 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.193555548 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.19385256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.28672311 seconds)
  done (took 40.816837965 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.218090459 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.20201373 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.29625681 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.214610963 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.219771509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.357929343 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.24576363 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.20032495 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.344292861 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.235996684 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.550397499 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.21968741 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.197802331 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.15872288 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.213466977 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.358542839 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.412448442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.55895024 seconds)
  done (took 27.335510745 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.577207078 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.19355342 seconds)
  done (took 8.900949513 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.195493689 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.228871828 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.217628764 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.229252188 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.196580724 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.25723498 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.202565095 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.214038223 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.239794111 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.248703612 seconds)
  done (took 63.365081672 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.214004125 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.199813863 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.200275648 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.197620344 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.189462077 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.191130949 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.196640533 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.197121789 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.262428991 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.30449405 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.212922251 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.207053377 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.199373506 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.19889993 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.196824669 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.230661699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.372340554 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.195773035 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.196345982 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.204359649 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.199582552 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.298180761 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.235199627 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.199528157 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.303300101 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.279990994 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.204242637 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.205440539 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.354762059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.198011959 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.197292276 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.198586361 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.201793717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.735025073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.613619615 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.205737231 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.220898923 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.208303595 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.198594316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.332697537 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.198709823 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.205754381 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.19153992 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.594560903 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.352068082 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.298123058 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.261239609 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.203517026 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.200771556 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.255717403 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.202370239 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.201086149 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.226520884 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.916490041 seconds)
  done (took 102.398981511 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.215658534 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.679226795 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.358786749 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.215801809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013996382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.945497373 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.195632684 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.435942757 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.209809305 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.192881032 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.463988096 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.657973602 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.204514494 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.213020165 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.629466176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.202862072 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.193958305 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.073429986 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.19675161 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.192318312 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.595327699 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.215039269 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.194431953 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.43843877 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.229442207 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.615688424 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.432207024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.550567024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.19709078 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.192360399 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.619654674 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.200034733 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.200984326 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.184905585 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.434026003 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.499812423 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.466271496 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.184658387 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.183981742 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.180078337 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.200646795 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.593367384 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.477816095 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.178811915 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.189123359 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.600638448 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.180857257 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.183853196 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.178461391 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.381142411 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.945838344 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.180135474 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.410200338 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.180047746 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.439989304 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.260021157 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.199886973 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.629437885 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.180653284 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.231346044 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.190710474 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.179280853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.183805502 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.178353456 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.182602181 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.48433014 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.566294736 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.17926979 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.482807655 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.597250743 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.181201264 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.661939962 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.052443041 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.183984251 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.219243073 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.178872564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.84648461 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.629230306 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.185652898 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.178780523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.469764538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.184113269 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.436493212 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.190499973 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.192099823 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.58760473 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.193394137 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.20772842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.178965796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.18035605 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.956125806 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.18138738 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.425110842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.222247718 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.182088778 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.181644996 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.205731435 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.1800718 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.179991669 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.180352984 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.659826744 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.187559091 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.283371295 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.199179085 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.181780881 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.18041005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.180474507 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.182221645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.39942399 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.757275077 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.185635505 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.179903143 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.181632391 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.188213564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.396935964 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.18311437 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.447666559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.18308164 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.1815404 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.18358755 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.971417619 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.214896555 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.181100589 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.185378862 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.994978053 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.386036372 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.195823428 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.18145163 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.183024122 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.195545779 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.345509677 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.174792897 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.218348054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.166683853 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.822077671 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.176472153 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.18090003 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.570300964 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.16391177 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.959992174 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.180434429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.157325874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.447916574 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.410846853 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.458417455 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.160565283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.1594618 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.819447726 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.163213501 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.297506386 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.175892112 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.162846758 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.354738758 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.421493597 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.160273653 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.698839041 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.158209645 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.371704943 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.159445276 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.463596851 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.609158412 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.163030879 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.164398206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.821983191 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801184854 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.946031591 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.161826269 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.416442735 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.161242713 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.605097304 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.160008109 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.15996494 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.730235289 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.161883572 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.166257751 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.160222105 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.161322235 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.222654324 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.332592546 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.094241439 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.163006301 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.577258784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.194922345 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.16180193 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.179319414 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.163519029 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.51692976 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.177345382 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.162543375 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.177937413 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.159445951 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.164640232 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.588173976 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.060841369 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.164231379 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.311032709 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745812228 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.163160339 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.160950582 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.906302622 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.356340161 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.668525562 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.165746531 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.426953027 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.163991445 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.198417956 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.910531446 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.236272478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.633081329 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.163329666 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.163220048 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.734577441 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.166203769 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.271866574 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.162018922 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.163284022 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.653861754 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.164791485 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.163720519 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.334243346 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.162159013 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.422197545 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.16295678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.198119351 seconds)
  done (took 1073.847596118 seconds)
done (took 1331.484004576 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.16433014 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.163736874 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.15355629 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.164205388 seconds)
  done (took 25.751788517 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.174756355 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.170818928 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.172840543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.170805181 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.173987281 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.170868282 seconds)
  done (took 8.1389739 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.25863622 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.164556992 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.166146656 seconds)
  done (took 18.69668487 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.3578355 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.313010837 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.490364471 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.08488473 seconds)
  done (took 9.353062766 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.172362517 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.171557926 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.171278263 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.174196146 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.176209729 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.177009441 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.173454817 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.174548389 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.177263987 seconds)
  done (took 11.673105236 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.653720457 seconds)
done (took 79.373745307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.277013939 seconds)
    (2/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.667356011 seconds)
    (3/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.287430283 seconds)
    (4/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.31550452 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.275183222 seconds)
    (6/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.546987432 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.425487455 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.865433401 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.406272673 seconds)
    (10/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.26007544 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.22161893 seconds)
    (12/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.207186557 seconds)
    (13/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.266393237 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.207398125 seconds)
    (15/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.411762403 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.472732339 seconds)
    (17/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.391553347 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.311686886 seconds)
    (19/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.201151661 seconds)
    (20/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.718024903 seconds)
    (21/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.210242165 seconds)
    (22/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.262791265 seconds)
    (23/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.915021273 seconds)
    (24/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.494908377 seconds)
    (25/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.32450331 seconds)
    (26/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.576727579 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.210524447 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.181205365 seconds)
    (29/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.925445911 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.791602982 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.352377479 seconds)
    (32/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.176948452 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.675135539 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 6.183448412 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.870915806 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.678975794 seconds)
    (37/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.201358643 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.520626349 seconds)
    (39/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.195133096 seconds)
    (40/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.187296271 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.857818416 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.168592625 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.301464216 seconds)
    (44/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.301105022 seconds)
    (45/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.248623568 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.412333852 seconds)
    (47/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.448162637 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.937261873 seconds)
    (49/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.328864147 seconds)
    (50/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.306455196 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.97126413 seconds)
    (52/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.28561455 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.293538141 seconds)
    (54/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.469459482 seconds)
    (55/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.187828408 seconds)
    (56/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.53692077 seconds)
    (57/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.188325465 seconds)
    (58/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.186349641 seconds)
    (59/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.415313819 seconds)
    (60/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.339473726 seconds)
    (61/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.167215876 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.193684809 seconds)
    (63/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.171740385 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.242100717 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.254760268 seconds)
    (66/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.306862506 seconds)
    (67/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.50975104 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.598900898 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.227957821 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.547054156 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.156145761 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.208077426 seconds)
    (73/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.529193515 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.770629977 seconds)
    (75/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.720579172 seconds)
    (76/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.186527088 seconds)
    (77/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.196016551 seconds)
    (78/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.622574505 seconds)
    (79/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.213019012 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.440477895 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.399220391 seconds)
    (82/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.171036703 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.173265077 seconds)
    (84/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.272941304 seconds)
    (85/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.309613719 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.503328809 seconds)
    (87/309) benchmarking ("sort", Int64, false)...
    done (took 5.317089708 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.001908483 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.682398927 seconds)
    (90/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.639140395 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.561522202 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.016040452 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.246349535 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.872414382 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.026358638 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.269593771 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.165522552 seconds)
    (98/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.306828061 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.853087043 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.211694478 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.021426717 seconds)
    (102/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.856644645 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.402046664 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.57605857 seconds)
    (105/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.20028503 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.288005682 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.15957389 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.342873088 seconds)
    (109/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.179986566 seconds)
    (110/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.695685167 seconds)
    (111/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.165758714 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.304721399 seconds)
    (113/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.163063505 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.380715302 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.268466315 seconds)
    (116/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.248377521 seconds)
    (117/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.161793069 seconds)
    (118/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.199885607 seconds)
    (119/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.194485788 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.162225782 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.684598899 seconds)
    (122/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.946020304 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.18038593 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.160548185 seconds)
    (125/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.22735645 seconds)
    (126/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.707600891 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.501162673 seconds)
    (128/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.150554529 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.163094141 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.397420652 seconds)
    (131/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.600691582 seconds)
    (132/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.164371833 seconds)
    (133/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.16392377 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 1.667505634 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.186513712 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.168330906 seconds)
    (137/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.625203977 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.422490387 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.67279087 seconds)
    (140/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.262208148 seconds)
    (141/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.289134301 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.833507233 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.41966145 seconds)
    (144/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.190990097 seconds)
    (145/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.189938824 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.270604416 seconds)
    (147/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.226811377 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.162616425 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.267590665 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.400571884 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.620856624 seconds)
    (152/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.319115829 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.589099696 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.251035836 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.188570857 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.360405604 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.837805899 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.304104506 seconds)
    (159/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.189734315 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.413285175 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.285930831 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.931485541 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.18720438 seconds)
    (164/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.340779285 seconds)
    (165/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.354949284 seconds)
    (166/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.579024548 seconds)
    (167/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.175453517 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.67927393 seconds)
    (169/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.238975425 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.154251789 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.246111137 seconds)
    (172/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.657774851 seconds)
    (173/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.24835637 seconds)
    (174/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.250141583 seconds)
    (175/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.247241919 seconds)
    (176/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.174668338 seconds)
    (177/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.459224052 seconds)
    (178/309) benchmarking ("sort", Int8, false)...
    done (took 4.187587934 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.460499859 seconds)
    (180/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.186793739 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.872051416 seconds)
    (182/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.363427829 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.215816115 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.213674284 seconds)
    (185/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.995895771 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.192000044 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.003876946 seconds)
    (188/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.162631057 seconds)
    (189/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.395591872 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.225905785 seconds)
    (191/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.367901517 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.942525931 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.151181439 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.197038537 seconds)
    (195/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.16620254 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.166269018 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.162948013 seconds)
    (198/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.370547283 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.701275753 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.223798258 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.290673634 seconds)
    (202/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.921838324 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.165596515 seconds)
    (204/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.796476466 seconds)
    (205/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.847425441 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.498031841 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.581201967 seconds)
    (208/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.802822877 seconds)
    (209/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.466612504 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.37226629 seconds)
    (211/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.745855864 seconds)
    (212/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.156217383 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.443626762 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.191905041 seconds)
    (215/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.70114215 seconds)
    (216/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.183194142 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.24486598 seconds)
    (218/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.190154663 seconds)
    (219/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.294880039 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.688809445 seconds)
    (221/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.152321815 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.166899858 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.732271108 seconds)
    (224/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.186495491 seconds)
    (225/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.207399096 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.492998215 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.173956383 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.536135453 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.563138218 seconds)
    (230/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.938816261 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.167496993 seconds)
    (232/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.168839425 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.17009011 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.16953246 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.414564938 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.420471761 seconds)
    (237/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.682692266 seconds)
    (238/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.159129573 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.695659682 seconds)
    (240/309) benchmarking ("sort", Float64, false)...
    done (took 5.382157294 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.226933108 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.334328858 seconds)
    (243/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.204423986 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.242457845 seconds)
    (245/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.874390023 seconds)
    (246/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.855518231 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.522647485 seconds)
    (248/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.183075228 seconds)
    (249/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.360232895 seconds)
    (250/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.506928134 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554372275 seconds)
    (252/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.327187636 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.587143791 seconds)
    (254/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.451874675 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.322300332 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.76773777 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.99984801 seconds)
    (258/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.454286807 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.154019497 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.66883685 seconds)
    (261/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.319607246 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.197620445 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.169277297 seconds)
    (264/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.327055694 seconds)
    (265/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.143316079 seconds)
    (266/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.254692041 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.848424427 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.552950041 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.179503949 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.183545043 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.171950251 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.163424074 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.169320172 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.622039295 seconds)
    (275/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.155137763 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.511934906 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.518577978 seconds)
    (278/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.186335742 seconds)
    (279/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.169916991 seconds)
    (280/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.170154796 seconds)
    (281/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.417393176 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.713286832 seconds)
    (283/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.191397182 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.21554389 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.252529606 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.291284774 seconds)
    (287/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.268551516 seconds)
    (288/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.992852025 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.174137439 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.253382189 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.288211385 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.17296478 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.90811946 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.15658272 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.179081701 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.209461313 seconds)
    (297/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.828837769 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.216097805 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.88094396 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.197338738 seconds)
    (301/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.34820343 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.843179393 seconds)
    (303/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.92365296 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.19715117 seconds)
    (305/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.755082515 seconds)
    (306/309) benchmarking ("sort", Float32, false)...
    done (took 5.143803752 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.301643084 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.197163867 seconds)
    (309/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.511855123 seconds)
  done (took 856.55971197 seconds)
done (took 857.685867606 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.20358296 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.198199504 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.182143216 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.204009537 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.294652988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.210077539 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.193295959 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.184183128 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.230292388 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.231498417 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.181426841 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.209908947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.183635786 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.182874577 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.182231685 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.196856969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.100329869 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.183506531 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.199315948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.191412743 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.199232723 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.18184755 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.233063453 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.209295873 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.186989186 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.186674349 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.186012725 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.202088834 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.294893056 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.186221448 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.186781747 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.193730578 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.102506429 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.182487615 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.178044672 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.202885399 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.195192949 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.192849118 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.186614805 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.216102738 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.449463711 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.183304685 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.185167155 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.184964303 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.184244019 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.188553601 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.184617723 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.190719161 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.197514424 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.198498878 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.440760175 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.198725066 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.187636137 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.185249985 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.195584444 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.183940399 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.188249937 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.19949397 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.20414324 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.199854964 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.091385089 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.190355722 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.188283455 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.200865529 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.19295245 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.481404908 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.181847366 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.189630552 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.457290779 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.190903966 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.483878938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.193823686 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.186935538 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.198812269 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.216778265 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.107948481 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.180768314 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.185951885 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.193744676 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.184726523 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.196452076 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.199856259 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.191127336 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.187124835 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.200718877 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.215836793 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.196740973 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.18746513 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.196513222 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.205533027 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.193625078 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.19716412 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.18981926 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.181836132 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.195553514 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.189967011 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.189111691 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.188981005 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.191915167 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.197176387 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.458014227 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.202814868 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.184749798 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.183750789 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.186530515 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.200105393 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.458156224 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.187593676 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.209385688 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.235617616 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.189455437 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.096294663 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.190309654 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.203956917 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.197065654 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.190818852 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.184122285 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.097292014 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.454001695 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.20205552 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.189660982 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.187174137 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.204019768 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.190984839 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.185393207 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.110444399 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.189542305 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.201349593 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.30985979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.199231381 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.21989181 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.187870438 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.191761524 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.216831835 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.204035314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.220468518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.191298706 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.203993673 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.205007357 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.185297277 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.199792932 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.201236149 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.189992162 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.19482963 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.184189961 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.217819988 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.200991828 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.202137926 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.210063314 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.310102444 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.186884108 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.09671241 seconds)
done (took 200.589733901 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.248468125 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.179510413 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.272449499 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.18592258 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.285244579 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.28516585 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.183101764 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.183426328 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.183900149 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.568099941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.183913865 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.183288195 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.18554997 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.183579167 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.26911917 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.186304552 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.184461583 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.529425758 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.187041741 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.25856446 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.178963044 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.184806368 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.186755479 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.611942322 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.185044935 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.186179643 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.264128714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.186817101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.532716546 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.183807105 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.17957084 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.532222336 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.285539129 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.204580933 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.196936353 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.193802387 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.28628812 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.201308805 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.268277576 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.268576454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.273761283 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.22488253 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.183691635 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.185590605 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.188816871 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.188417677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.185388982 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.214394222 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.185761164 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.185935488 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.531262831 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.197906178 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.185167306 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.186577734 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.186833731 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.216887599 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.186734322 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.188575468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.27868429 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.1890105 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.258557779 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.577047854 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.571031012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.18897141 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.181373861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.187773934 seconds)
  done (took 138.694767633 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.255081081 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.261240506 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.292765983 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.189242153 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.239215749 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.298450988 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.190105643 seconds)
  done (took 9.848196637 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.194983094 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.18971055 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.238906406 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.23950307 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.189857981 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.337780267 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.191065409 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.201267045 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.188806673 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.242815566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.191406659 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.191308848 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.196654271 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.186395081 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.236744017 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.201516283 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.304275884 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.191264649 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.192399252 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.342033903 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.187284952 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.197176927 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.241387537 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.202487127 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.191564141 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.196921543 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75477813 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.189569308 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.188223911 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.190503357 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.188869609 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.22885218 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.192033028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.183760967 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.189459139 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306688333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.190506117 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.189183355 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.191482542 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.184871176 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.19020233 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.191582894 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.191919603 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.189683234 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.191359946 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.214199183 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.192126351 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.192036603 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.191182225 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.19180074 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.24196261 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.192512903 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.189025578 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.189885988 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.248278991 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.199066566 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.192158489 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.190164676 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.193058885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.190361111 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.343871386 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.239780197 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.193795708 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.240293871 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.193425422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.192439991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.193277207 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.19295603 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246662709 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.193947754 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.239857393 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.190185194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.348624444 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.215004342 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.19409829 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.196114877 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.19632456 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.192548369 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.191407431 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.199397019 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.191202908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.193812253 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.198998084 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.190884374 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.19107538 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.294083987 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.301751295 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.191253289 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.20569518 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.199788524 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.191772154 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.24608795 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.193852064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.191797588 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244746658 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.308209861 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.247782053 seconds)
  done (took 139.299739624 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.198704267 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.201877852 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.195421525 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.210868431 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.195469542 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.195199783 seconds)
  done (took 8.324498546 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.195574261 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.19554948 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.194764819 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.195155284 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.193993809 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.195029383 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.194733916 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.195836284 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.198185479 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.195025283 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.195709555 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.197302763 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.197422252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.195605946 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.195390904 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.195755625 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.195713778 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.193128609 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.195599502 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.194796741 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.297686435 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.195681438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.196355058 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.196338458 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.200678622 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.195864764 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.204092465 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.196670313 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.196208119 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.203901744 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.197789687 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.197566897 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.197587236 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.201160518 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.199565146 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.197926837 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.199900364 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.198366062 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.194732214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.19726404 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.198428714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.197571204 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.196503836 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.197894238 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.198037351 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.200514605 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.200688951 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.205020268 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.195815045 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.198161689 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.199116139 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.197326568 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.198246042 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.199319629 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.198708577 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.199769891 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.201851425 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.199656761 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.198047578 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.198253637 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.198335941 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.197075065 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.198584121 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.200201835 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.196183999 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.199557385 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.198971322 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.201193117 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.197736978 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.198012131 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.199063493 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.195694878 seconds)
  done (took 88.464506536 seconds)
done (took 385.753570466 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.429218644 seconds)
  done (took 7.559775736 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.381045927 seconds)
  done (took 7.514318986 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.684474969 seconds)
  done (took 19.817631607 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.194879266 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.216314322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.194719869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.20825289 seconds)
  done (took 25.94673355 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.335107235 seconds)
  done (took 7.467010781 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.212774986 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.210955298 seconds)
  done (took 13.567435762 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.339473523 seconds)
  done (took 7.481272591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.548834464 seconds)
  done (took 7.693765065 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.225721938 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.225283629 seconds)
  done (took 13.834949049 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.187476494 seconds)
  done (took 7.329811276 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.947553111 seconds)
  done (took 8.089573137 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.209662631 seconds)
  done (took 7.352910728 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.249747566 seconds)
  done (took 7.391131646 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.491481198 seconds)
  done (took 8.633079006 seconds)
done (took 150.812274223 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.200400638 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.20070307 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.201816789 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.202952727 seconds)
  done (took 25.947985974 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.241141313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.242064311 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.244611632 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.25364124 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.245998742 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.242998744 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.23570918 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.235495954 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.253378961 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.246563337 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.244708827 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.244941047 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.242654918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.235933009 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.245788786 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.245585976 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.254703398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.24503451 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.236611575 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.245617251 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.21041236 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.254627683 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.246818024 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.211234446 seconds)
  done (took 30.949036372 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.408507044 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.281132016 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.363354958 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.261693748 seconds)
  done (took 6.458017398 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.26201432 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.263301007 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.27458541 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.314705659 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.339018904 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.27313388 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.239737507 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.233407037 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.21844781 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.264730712 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.339918102 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.279918279 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.347993773 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.210805844 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.397594657 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.210853539 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.211320664 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.262879261 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.313866481 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.338782945 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.210889378 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.262677765 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.265978724 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.280568734 seconds)
  done (took 31.76138215 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.210238537 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.218891157 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.217187821 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.211011821 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.211217299 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.21119938 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.217337724 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.211610053 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.232192328 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.213997685 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.210888919 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.211313737 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.211246775 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.212756978 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.211255869 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.224546585 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.225844466 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.211043847 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.215671117 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.218322007 seconds)
  done (took 25.452693873 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.204778541 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.059389976 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.557027084 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.461435641 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.205673133 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.205970408 seconds)
  done (took 26.839027235 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.272801801 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.395209661 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.212360659 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.526901978 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.607005394 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.214303179 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.213632852 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.425963202 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.691471648 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.693259948 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.263236949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.269850683 seconds)
  done (took 17.931605967 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.21636452 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.208599576 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.209672917 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.224986246 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.259329262 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.218755852 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.219636067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.205965341 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.263469845 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.266517594 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.219432327 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.261322771 seconds)
  done (took 35.920691325 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.294172801 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251907905 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.079359627 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918331712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929032428 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.830192559 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.958006048 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615805434 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.216939603 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481757415 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.847918613 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.314096727 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.463999816 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210836321 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.211986023 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.096320536 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43377358 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.670077495 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210875711 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853721922 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237080645 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.207980567 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.021139858 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.238210209 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419728879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.185686743 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.470020505 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.986650989 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46712418 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.223581747 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.219508077 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.210020509 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.484132654 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840745586 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.30864726 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220021218 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.885053708 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.757588311 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.197985873 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.942162936 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.643157185 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.215277852 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.220531862 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.210153582 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.14448167 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219128816 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623044113 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.220556108 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.921808001 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.210431648 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.22187707 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.304708052 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.214276958 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.780790782 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.205043944 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.223842114 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.211129927 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.218444527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843284937 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310652334 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.217251847 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.148376927 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.567388481 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.858151175 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780575325 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.314360435 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.215458841 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.215719629 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145549488 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.927850762 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.231190502 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358281671 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.237508181 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.861603423 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858378013 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.849646074 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.156483227 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756268949 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.213516736 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.150234781 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.438943372 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.987247056 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147562322 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.158705438 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.146915619 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850908229 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.221567115 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.585404635 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.220854478 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618754647 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.227893413 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.228871272 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236355608 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43627068 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.095696804 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21246697 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.608925403 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354767882 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235084145 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622600893 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150643126 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.216937741 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468066302 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.42397364 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.212743739 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.109083734 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395112586 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218710331 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.230505931 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.212717411 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.227270219 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.736056849 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.226868025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.323912712 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236802881 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.989404267 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90397252 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225441878 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.317260193 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.867676692 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.454984502 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.911328215 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122409463 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.281650232 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216681491 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.213748425 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.97271858 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066219973 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.107286853 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.216235612 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222976497 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.226705952 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.215104256 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.160520042 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.21788237 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882065403 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.995021286 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.437988052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.220811725 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.493246742 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147827262 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362725914 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.22299048 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.437834284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.317475643 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.215294481 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473775132 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219494061 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.224009133 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.228785687 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233511157 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.312715678 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.237201679 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.214547727 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.472638 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.219830507 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.219421929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.961494053 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.998309572 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218886223 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.22222031 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030601082 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74294132 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198103728 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.225023512 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105332418 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.229880092 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.284317617 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22287214 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.225846818 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.866068598 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.01348792 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.223182387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.218669963 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442361286 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.22680519 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.950226597 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.299963484 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.394051304 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.74960142 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.23483322 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.150653508 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.928835003 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.909504686 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217512932 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.405532993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.217393758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.226471626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227548595 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.704403361 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.744739262 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222685753 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.87620524 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.225833575 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.228307414 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.223667123 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.218231355 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.837675343 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.33722259 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.222003221 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.231795047 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36059302 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.231857003 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.151776559 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.735578421 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22353577 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.219069445 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.993858163 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252586524 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.886357707 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679030667 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479511091 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.878346779 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.233858217 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.950549291 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.250607269 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.218192457 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.659530539 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243907824 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.238021643 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.226962563 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.229981969 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.89377228 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.659814139 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787955825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878278738 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.701924508 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037536132 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.224274544 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.122007118 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.637395519 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15866515 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.87613877 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388896877 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636895612 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.168790408 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398658295 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.329886736 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.917297317 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233406189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446801106 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02875467 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.67478232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.24697464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.431910796 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.254409877 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.223729885 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.153124057 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.51034954 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.432134491 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.681361041 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305454799 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.629847467 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.676315543 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011866325 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.219100861 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.53959427 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377398351 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852981944 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.607697055 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.226417558 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.917632832 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.690406175 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.23018388 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.745893622 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.807841694 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.22314898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.403541114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161149741 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.23210868 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.232899844 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.222814478 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.35401026 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.220561642 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.478068966 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.231528531 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155978794 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.224304369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707289896 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.086136606 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.228406507 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221866229 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903003962 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.224088072 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483853707 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.226409742 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.831943327 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.227317156 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.156444167 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155914141 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.91503616 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.225614207 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200213959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688769704 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.559665191 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.204605263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.241590667 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06988557 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.47756 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.237743009 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.755791648 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.452244784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.998636569 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.248544756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.323391768 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.671880568 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.22573393 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.125825365 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.458810126 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036316935 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.446665672 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.11644782 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.129188585 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.222439001 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.439560574 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.124475932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.871863341 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466509829 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.937678646 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.239277297 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.895605922 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253292364 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.902179155 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250305395 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.577268249 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.235521392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.294644389 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235067063 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.235798989 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.236387934 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38008831 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896161501 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242924097 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.238514533 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31888426 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.379647248 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.836298743 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.000193386 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.76212817 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912418923 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.764318749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.240055266 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.224770328 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.234932476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.159539603 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.374650761 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.750068603 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498597317 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35465665 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.644703055 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250575819 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.673227756 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242446783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.440970665 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.500475067 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095825143 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.225598179 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.887358923 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.122628453 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.236775508 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.437220132 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.696439802 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.75756645 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345434298 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.230702466 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640201972 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505924655 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.317452672 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227146456 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.816358263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.245855299 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.558374193 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.233565806 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.92548246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377539276 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.236958573 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864895848 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.239864965 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.38658049 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.001288382 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993943299 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.485503442 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.646242563 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.238373441 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766950211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.867436862 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.492198862 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.297580341 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.239618831 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.332390155 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373860333 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.227060435 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.126968838 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.22830297 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07240725 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.937066401 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.237811979 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763629648 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.493819119 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.225297565 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.2253519 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250841889 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.23785704 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45114715 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890133616 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.453029834 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238839185 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.23024018 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.21899739 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76518598 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.243460165 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163506188 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.231597739 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453186723 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467576363 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.254717925 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.681272853 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.93884964 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770884924 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.200041949 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251048079 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228200737 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.888839982 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.767973141 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.847849654 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704214045 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.887452606 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232361543 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506324469 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.235577486 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229014472 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51021532 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.233920345 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.240686551 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.243966065 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.767976364 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939273823 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.24411376 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.92286538 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.169885824 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.455431084 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845926463 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.169777248 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239885767 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.397774151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.23412031 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360627922 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.241752124 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.227294601 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.233039982 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.966821275 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513440319 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.236881978 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.224821155 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.728946755 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.246537369 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.239358736 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446481192 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.238195833 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.908008381 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.582789162 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.486553964 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.235059799 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.217608682 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.236290676 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231265117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.948492103 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201434451 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.73558437 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765558323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.234316449 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.24581575 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.235219491 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.447554378 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442887649 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.956793249 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.25969273 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.232518243 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250256004 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.13690914 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.998554284 seconds)
  done (took 1511.945935441 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.245884864 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.252875277 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.260114246 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.238941124 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.269937571 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.249585868 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.291619431 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.357812886 seconds)
  done (took 51.338562659 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.231244558 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.386389624 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.259842225 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.242924309 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.243891123 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.241990898 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.652588069 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.24108182 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.241574109 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.242934419 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.239732421 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.24193301 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.829975041 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.245554472 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.240218634 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.222326256 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.244698508 seconds)
  done (took 63.423541226 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.243401545 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.412540066 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.31050174 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.255900867 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.851426737 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.236078571 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.398175827 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.237410783 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.232423413 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.524660193 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.882413863 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.269578346 seconds)
  done (took 82.027329884 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.240922009 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.242490881 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.241100013 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.242260146 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.24360862 seconds)
  done (took 7.382857675 seconds)
done (took 1918.521787929 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.478023052 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.844498934 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.794834513 seconds)
  done (took 4.812581055 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.380958071 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.430795039 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.550127377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.555110942 seconds)
  done (took 7.088141954 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.516581012 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.605706474 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.426744437 seconds)
  done (took 5.721522664 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.521551195 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.237357433 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.354698263 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.235937839 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.235871935 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.238044021 seconds)
  done (took 19.883117357 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.238852707 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.242226237 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.238638228 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.240079879 seconds)
  done (took 6.131091282 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.217790345 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.932883444 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.221143498 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.236446349 seconds)
  done (took 17.781811458 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.984715951 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.997690238 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.98117008 seconds)
  done (took 7.136613849 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.243162002 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.083334284 seconds)
  done (took 9.499480937 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.53003942 seconds)
  done (took 2.702763144 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.371181929 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.563170514 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.222789537 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.158030951 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.215656875 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.684239937 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.701993702 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.340926085 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.139933419 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.17171022 seconds)
  done (took 25.744583938 seconds)
done (took 119.267768782 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.758059091 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.472495467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.437395982 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.731228984 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.46517663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.438082537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.447221907 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.698116117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.293328775 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.2357193 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.735718153 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.470374095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.603803984 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.474816923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.606490744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.475665294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.461257549 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.800280042 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.415719777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.652237817 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.447811938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.370123722 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.561108895 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.436528534 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.468596979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39094898 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.955050111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.484143045 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.579535197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.025170991 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39372526 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.824128676 seconds)
  done (took 186.784609683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.235820939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.236395145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242739359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.242894654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.24085166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.239765983 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.235658633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.236650138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.243994342 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.239691443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.241359168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.237220972 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.247811118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.236138268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.238655135 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.236923217 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.248427082 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.266477952 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.244213975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.235773014 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.24113681 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.244075904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.244824724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.249518475 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.239738872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.237394668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.250795424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.242895195 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.237963737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.242627302 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.24103859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.23931093 seconds)
  done (took 200.915723564 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.238116652 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.238432308 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.240690087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.237614906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.237159373 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.237667943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.238986711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.250138285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.250077534 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.23777392 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.249463657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.237134165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.237483487 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.236595519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.247775871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.237931241 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.246350211 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.250689273 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.243831267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.239063413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.239417762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.238777442 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.25022803 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.238016084 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.239541764 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.239598658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.256699073 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.239232935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.240805606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.247955722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.240798049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.239127734 seconds)
  done (took 200.922198545 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.442510796 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.248066837 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.248245042 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.199590072 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.248228852 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.247813734 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.243343047 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.437365333 seconds)
  done (took 13.494879949 seconds)
done (took 603.292940936 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.440695555 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.157340741 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.440620566 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.267745043 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.948734545 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.271195458 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.267950083 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.423573607 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.121060716 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.422885187 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.433319266 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.264969773 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.568862095 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.266792297 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.499702045 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.359376245 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.079062732 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.19709892 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.563459764 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.715202956 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.516282085 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.655430367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.42376822 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.141429116 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.584672025 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.657923392 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.888647946 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.082376872 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.271019215 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.565840095 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.767432382 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.128228209 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.320387767 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.301480655 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.355944751 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.338452938 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.108672714 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.3026006 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.441967806 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.421469466 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.733478985 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.958679825 seconds)
  done (took 85.857056104 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.236313376 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.236808007 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.236374549 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.236776548 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.23827999 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.237838305 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.23676117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.237579939 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.237524249 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.236925964 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.236806391 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.239035714 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.237678367 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.238336831 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.236487946 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.236642515 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.237798941 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.238707399 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.23640518 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.237442005 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.237662382 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.237589679 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.238221385 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.236931924 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.238733345 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.238342453 seconds)
  done (took 33.355893886 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.250466608 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.491861689 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.640575897 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.258728003 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.251373212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.254472891 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.31999489 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.255452558 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.254717294 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.254146733 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.396240375 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.254231466 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.283858068 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.671715064 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.256806742 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.253151636 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.252399279 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.25243527 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.501635381 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.263987702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.339693177 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.255431566 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.320849969 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.264897647 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.270400879 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.252633733 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.256821022 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.767380262 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.254314947 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.397081901 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.935640298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.32173124 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.716755089 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.654417992 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943755762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.257413778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.253069189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.401515809 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.257638453 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.2533571 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.321490682 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.256555682 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.652758686 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.864225749 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.271061937 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.255202292 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.785441895 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.40702949 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.471947386 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.2645918 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.671316087 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.259745758 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.254941596 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.255443221 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.471525945 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.263048958 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.254448155 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.773264698 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.274618795 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.324157884 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.25795886 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.254696302 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.508053811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.254708741 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.496690882 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.256316065 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.262010499 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.254551722 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.654016138 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.25989313 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.880097846 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.272282953 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.25553248 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.398273997 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.498012265 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.811922054 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.258124783 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.514891852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.727101573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.324557401 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.261372979 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.75894065 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.329293398 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.260638915 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.258289411 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.258597325 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.255604099 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.301458008 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.321296061 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.80985298 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.875539821 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.787212048 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.341023252 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.271149518 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.257356089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.770114067 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.2730502 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.256105373 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.656294453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.883685448 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.271568419 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.263827081 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.865900372 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.271939652 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.326355993 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.261305946 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.663219464 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.257666739 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.30336699 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.256374609 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.263806003 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.260382463 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.32648591 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.260682176 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.256809259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.856186167 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.419888482 seconds)
  done (took 165.505654006 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.251980529 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.251228634 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.252208845 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.249902829 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.250819846 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.257066703 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.249575468 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.250218557 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.257812662 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.250708273 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.251262657 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.251171492 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.252550086 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.250880251 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.260029566 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.25949257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.865505592 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.250689348 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.25432975 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.250961114 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.025281731 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.254679516 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.257902705 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.249964718 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.251110791 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.25344306 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.260460698 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.253243389 seconds)
  done (took 149.663353604 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.258805377 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.760196158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.258808247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.375544534 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.277974079 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.256879388 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.373169693 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.309126101 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.259691953 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.256788392 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.257267863 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.530340319 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.26358561 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.722041155 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.430377328 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.378732427 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.717163597 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.261084587 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.257389123 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.257902394 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.377305773 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.26800618 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.529794994 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.765101549 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.26115897 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.766543697 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.250833042 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.260587028 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.258465011 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.768141158 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.259896406 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.530785297 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.326105748 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.311855581 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.768698049 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.724846201 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.728866253 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.39162568 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.259831132 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.258325444 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.259381863 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.248452232 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.769438297 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.262399885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.261395322 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.764094985 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.274713008 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.262475002 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.270681116 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.259160051 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.314028246 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.313362402 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.534685338 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.774378183 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.328267584 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.281064463 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.376876135 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.645464596 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.262537716 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.721657103 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.248538877 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.772868525 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.264081999 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.249598151 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.260962141 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.265703588 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.393827339 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.377044308 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.725905455 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.265647387 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.727753174 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.398770686 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.261049883 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.261147231 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.264044949 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.771893167 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.726566677 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.397721073 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.381485492 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.432134395 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.252720134 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.261336151 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.249584903 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.330348091 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.262605184 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.773645926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.726934573 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.266388202 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.263173122 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.264031154 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.264069276 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.417508761 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.778609858 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.331145921 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.716225191 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.549734713 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.538107544 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.264175089 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.315350854 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.264336922 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.541121785 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.264756818 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.313126246 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.711447222 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.539528038 seconds)
  done (took 149.814418013 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.486543943 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.382168741 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.347108383 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.368960915 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.811815869 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.813090539 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.452611086 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.380165797 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.361978134 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.492332371 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.324643871 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.353768859 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.416349298 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.328050809 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.932030737 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.325805045 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.349549645 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.378306386 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.347560386 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.242274722 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.858000324 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.528562232 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.417204308 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.111383206 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.347492434 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 1.998871399 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.784127981 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.804462632 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.428099559 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.452614883 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.768953728 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.323453814 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.154553905 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.869181809 seconds)
  done (took 60.938363514 seconds)
done (took 646.315859692 seconds)
SAVING RESULT...
DONE!
