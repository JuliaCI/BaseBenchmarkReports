cset: moving following pidspec: 22926
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.27344937 seconds)
loading group "string"... done (took 0.529896991 seconds)
loading group "linalg"... done (took 6.875391734 seconds)
loading group "parallel"... done (took 0.155931657 seconds)
loading group "find"... done (took 1.082366781 seconds)
loading group "tuple"... done (took 1.682009484 seconds)
loading group "dates"... done (took 1.156214264 seconds)
loading group "micro"... done (took 0.21702343 seconds)
loading group "io"... done (took 0.984396646 seconds)
loading group "scalar"... done (took 36.822812606 seconds)
loading group "sparse"... done (took 12.503061368 seconds)
loading group "broadcast"... done (took 0.946683982 seconds)
loading group "union"... done (took 12.325693472 seconds)
loading group "simd"... done (took 4.243992563 seconds)
loading group "random"... done (took 8.504750351 seconds)
loading group "problem"... done (took 1.98371221 seconds)
loading group "array"... done (took 20.593072172 seconds)
loading group "misc"... done (took 1.769123749 seconds)
loading group "sort"... done (took 3.23003353 seconds)
loading group "collection"... done (took 16.981558113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.508645123 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.139579229 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132151792 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133152359 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.169118818 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115637727 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145692227 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100408032 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.083140764 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164167544 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136910977 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.470720407 seconds)
done (took 5.185652658 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.205345395 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085126833 seconds)
    (2/2) benchmarking "String"...
    done (took 0.098204496 seconds)
  done (took 1.010390582 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067716907 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122181366 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066946914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.084395023 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067983172 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066932111 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084430672 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067537787 seconds)
  done (took 1.39540038 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075018915 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06894108 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086246536 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069631788 seconds)
  done (took 1.138340337 seconds)
done (took 4.6629718 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.835394956 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.240268742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182734875 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446336586 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.146205446 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181456092 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656186695 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.318650583 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.206877445 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081770657 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119645629 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.355390564 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123388127 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.653878211 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077242546 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.110071789 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160574753 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.41127284 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.0688364 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081912306 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103308431 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128356886 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104702344 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093805922 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159151966 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08230053 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14482762 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081122916 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082598315 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224445029 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18715565 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670316029 seconds)
  done (took 10.387223571 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099011417 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113149279 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067719718 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139908147 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099866635 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.088341809 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072552586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06845569 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106696284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.147215873 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091265467 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.119851859 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066957243 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08673635 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086396214 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.225155228 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082201285 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099813605 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070678516 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091617251 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106108574 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093025187 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078384883 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093084323 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1282555 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207508822 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101381206 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115196726 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.06980288 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099997881 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131205548 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131173338 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067058997 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084791782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127671442 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.113321296 seconds)
  done (took 4.632322533 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.054368658 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.15446434 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091057621 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178716939 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066688127 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124048588 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064102775 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099640279 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216963907 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.075604608 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.44103102 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128750168 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102007142 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068287978 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06809428 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066163171 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.542767498 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.143933293 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110516604 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102067789 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.088968818 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069773902 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.356103586 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067790347 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065620632 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084460586 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058389079 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.125160536 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129802392 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069765805 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.146680581 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087323152 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088413486 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100656913 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200832881 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092303138 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150128252 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083560039 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065692941 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.165371377 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063890322 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092273664 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065157444 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100288862 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102727978 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11909978 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083143809 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068065411 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.175910526 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066461035 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099354491 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.827585854 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167487561 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.07977614 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066734807 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.28250675 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083746789 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084075948 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063595243 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252098349 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.152063293 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069235349 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085144608 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06811174 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068598537 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367863976 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0850734 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.727676354 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069312866 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076002334 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067894923 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065229034 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090824803 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072088509 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100449383 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064720808 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065471987 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08523051 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066234554 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065086242 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085171376 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083718108 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.205569403 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083489532 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066300057 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080233771 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086705753 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111114812 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072921058 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.0662409 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116987324 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068010111 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084664935 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100099971 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084969856 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083527352 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086067283 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128512388 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070522923 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.127431574 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068486056 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.112652794 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071951398 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11572244 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094657329 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068104776 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.148738665 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064075041 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06373297 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082577274 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066673558 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081591249 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068433193 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067989481 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096833605 seconds)
  done (took 20.764559996 seconds)
done (took 37.676020235 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.288090153 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092268782 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075199981 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.072745438 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095477414 seconds)
  done (took 1.534108474 seconds)
done (took 2.417783841 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118545189 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116535049 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063634408 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11371796 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063508948 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117642049 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.096854459 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098155709 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116775392 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064861648 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09488649 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081839945 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063505115 seconds)
  done (took 2.118316949 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082533616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082164116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085943912 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082514446 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062303111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098603611 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080743629 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104223051 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080991802 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070615979 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081922176 seconds)
  done (took 1.792612031 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082207743 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.081697023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085650224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081031241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063130273 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098301087 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080397778 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101623257 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080784744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088617831 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064744072 seconds)
  done (took 1.786999546 seconds)
done (took 6.572173274 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078517641 seconds)
  done (took 0.947371599 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.66750592 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.996567765 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079805518 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.132929344 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199741467 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138524012 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.337497586 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086710957 seconds)
  done (took 9.710407435 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087766074 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086289027 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070265734 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098533304 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073026292 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068514621 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.087264977 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07128007 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086088712 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071307008 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070914519 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088897068 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068862946 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087605682 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071030689 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084517789 seconds)
  done (took 2.213348947 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090753627 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.108666565 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072577315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093890965 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070549036 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.090700115 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074476893 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071949886 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069489816 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.091486198 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074295237 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.090472539 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071560297 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081835473 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074603966 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092140618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071254543 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.090569071 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076103946 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090234969 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075543314 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064800219 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088491133 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072977573 seconds)
  done (took 2.916965938 seconds)
done (took 16.667427423 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114512746 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088851706 seconds)
  done (took 1.079920054 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083622107 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098055113 seconds)
  done (took 1.063664206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082959373 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081658491 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09144571 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095500927 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066058785 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082322974 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103552563 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06692694 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065048414 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.083633892 seconds)
  done (took 1.70690223 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069810514 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092928433 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071598973 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096699927 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07438114 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080951447 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073820005 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083430679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079669854 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062252012 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088336233 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098960594 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072139769 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100313549 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073014163 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08590145 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071251838 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083899879 seconds)
  done (took 2.342147643 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066126436 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06572966 seconds)
  done (took 1.021640252 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067531354 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062698033 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084382782 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066149606 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080577102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063038363 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079020271 seconds)
  done (took 1.396107502 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408457955 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110628948 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309135824 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069717799 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102210404 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.285881353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066576817 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070614113 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.08884749 seconds)
  done (took 2.444112272 seconds)
done (took 11.944352414 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079680501 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.083863444 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11151236 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.393555524 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092745476 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083368872 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131983137 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.233477409 seconds)
done (took 2.105059379 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125986409 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614152946 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403355571 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211243187 seconds)
  done (took 2.124822582 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.311292005 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109244464 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059843527 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083539906 seconds)
  done (took 1.45924752 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066965762 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068921228 seconds)
  done (took 1.032335044 seconds)
done (took 5.638405444 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067399017 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082332626 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.084665007 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063527379 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083168116 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06665353 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064357607 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081169696 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066923646 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065753058 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.082505209 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068700682 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065431173 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080567237 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064262325 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065252947 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080669482 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063843164 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062941917 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082735916 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064408903 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064949393 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080653941 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063185625 seconds)
  done (took 2.647863373 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085165563 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082972008 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073148419 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070904699 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090508457 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071117994 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089959261 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067116787 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089025475 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068699346 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086602302 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0707494 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067224989 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088012468 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068307252 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088276312 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071350053 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083124567 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068643494 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.08578368 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07242592 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0672282 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087581414 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071187408 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087884597 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070189137 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085247743 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066781607 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.087627077 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071549998 seconds)
  done (took 3.239562072 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070994427 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063168774 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081225894 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071585738 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063511293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082916932 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064491076 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063538256 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082462559 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064117296 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064609712 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.081801516 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0634158 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081401724 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066362556 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067133823 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096751605 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064307742 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063244275 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082510287 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067262675 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062643892 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082036988 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06412329 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080035274 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064274436 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064141481 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.081040325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065299832 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062668598 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084850531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068261469 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063417679 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087698103 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067245935 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063144308 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085864751 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063994214 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064394798 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081715312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063541837 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06263445 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062333391 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068773661 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082825777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066798393 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063904708 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083068921 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064744916 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066224743 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062269289 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063071997 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084138261 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06649297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067486276 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080509039 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06521828 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062919489 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082191134 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064332784 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063131522 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080816925 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066239172 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064247195 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09637747 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070617195 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.08019963 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066096261 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064114609 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08358875 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066194015 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076046809 seconds)
  done (took 6.029149463 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091059777 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105688237 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064735959 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083331584 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061788764 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081277115 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068171868 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063570892 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082851288 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071843424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080865905 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065986941 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065627377 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094611857 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064425342 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.082358661 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070992161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062031578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081798685 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067247723 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.186339323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068407037 seconds)
  done (took 2.673881943 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.173953445 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070279091 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124226174 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07251171 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066301346 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092393759 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071253343 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069437146 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088969659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067312158 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086648775 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070041161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086046067 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067957616 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086245059 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069320607 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087548335 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071036949 seconds)
  done (took 2.431409992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078229527 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065275981 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103850484 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065737768 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.08590295 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068627054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089878174 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076677125 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.087315019 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069324303 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075892878 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089570764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069985683 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08612253 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0710279 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065337147 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087371115 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065591721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092131839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070468085 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089035811 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074128456 seconds)
  done (took 2.639910913 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080053422 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067433447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101695114 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068072318 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080343434 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064274567 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088056483 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068150791 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070154011 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.087112162 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066721452 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081655327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071045109 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066445347 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.088492828 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065992589 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085049695 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067106204 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068286349 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080063689 seconds)
  done (took 2.430021701 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087047509 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084893113 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068562073 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092915653 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06868832 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084584838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076844967 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084644517 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069188479 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105279968 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068755529 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066712633 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094500898 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090022984 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068852302 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09351814 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07591456 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093265025 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067280371 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085803217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087796966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066922718 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073862349 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08726679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067455622 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085083377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068059947 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090478222 seconds)
  done (took 3.169221835 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067195642 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065297448 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080755358 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064712723 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063575763 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080818325 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064363153 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063492064 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08404412 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063861 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06581013 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083413865 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06603818 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065979651 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083324202 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06614195 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065275163 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081976395 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063968649 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06345322 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083741984 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066484097 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065842421 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082305964 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063520317 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082886171 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064621848 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064056376 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083208324 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064921171 seconds)
  done (took 3.040035437 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077112291 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071892367 seconds)
  done (took 1.067671667 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065189541 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07914156 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081709643 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070054726 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088117475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067197577 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073183621 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089525289 seconds)
  done (took 1.532491172 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082590282 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076455128 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085690696 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079478873 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094799741 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081809961 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15427816 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086320753 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073266845 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064123892 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.099607117 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06551797 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090474735 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06778299 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071080966 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071360135 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063046201 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.092600371 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069623297 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064166002 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087422083 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075152039 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087142233 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062460017 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067157386 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107007648 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094865338 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067446682 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069721307 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092589028 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07267673 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077001269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067594791 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066574469 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082280113 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076827089 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100180112 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070040044 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092341642 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069172891 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09507537 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063180104 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07105234 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.090994997 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077379873 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.08485892 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068700649 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061591411 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082560009 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069516138 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061828355 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085318587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061665518 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091020541 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071412214 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079185546 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084317415 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067879543 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086793362 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070732011 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072425233 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067113092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067619224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.085422549 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077052328 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071004661 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093763589 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061579137 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079166232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065700676 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075397911 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086982849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.070719448 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.088289086 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066841339 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082052896 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070751529 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067783262 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090944542 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072059174 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084681127 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071976968 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091341541 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067288114 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067942762 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093569235 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064508536 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088539883 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064371969 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100783109 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065938405 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064624634 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083278874 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076617531 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087361163 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066839412 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064015626 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09098746 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060605642 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084147897 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068418336 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066705163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095420911 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071071253 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090717076 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074735383 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091694705 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066997916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069280145 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062597243 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066477079 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08576483 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073621814 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060596864 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089256345 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067253952 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084866373 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075735958 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063835735 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.084828943 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073414097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089771405 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066245703 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062992757 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087430639 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066031031 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088142385 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074649076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064013438 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080351108 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061889323 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087438273 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067311401 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069920059 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089777505 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069270338 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079363465 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06486114 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089040611 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076162856 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066499226 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086014572 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072333179 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085665296 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066929653 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072373388 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087425497 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065714671 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089293321 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068167053 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061940371 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088901568 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069235509 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082384496 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070634388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06973808 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087622135 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06671905 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083468703 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074642262 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084238532 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067198079 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06638278 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08320425 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077190294 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067687482 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06078658 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062501483 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.097065799 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064635521 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083734701 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067219272 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069011444 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085697155 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065104908 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065038797 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087034716 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076639024 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090154476 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067079257 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089844256 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078626269 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083718362 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07059743 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066044259 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086037213 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067725246 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075499935 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0714128 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070233268 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089705068 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063039886 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091026283 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074610885 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065609097 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083754034 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066126109 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088778148 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07257975 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088687602 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068491434 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064269939 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08545066 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070306976 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.086792981 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067752772 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065916302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092029288 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064855966 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092098854 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067803677 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093733407 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070730867 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061519447 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088465267 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06463606 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089818275 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062434556 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064329899 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084006286 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068768193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065021841 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086865993 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060813951 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091382006 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074800166 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066536307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08457952 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066665516 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09116954 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06937351 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069715429 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089486591 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072900247 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094722134 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066413434 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069189996 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075703616 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065489749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.081186931 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072043758 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065403836 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085164212 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064566752 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082327169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070854173 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.092727419 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075071133 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060935597 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087551731 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065904783 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065477467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081593522 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071200808 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087336684 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067875143 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072323306 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086486668 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066468589 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088419989 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066595255 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0669963 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087038293 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068916051 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085061305 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068777666 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065561681 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088512397 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065954804 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081966809 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069303144 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066956144 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085241309 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073154579 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083980326 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067884978 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069121179 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066032273 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065526386 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065693347 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.087357769 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069038106 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085722494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067671686 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068715871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080370636 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073555292 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084394122 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075221316 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066373285 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082936144 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074393849 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087507211 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072910224 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084800126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068062758 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068023074 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084814246 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069562886 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091086793 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065529838 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076675915 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092555653 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066488498 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08808549 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06730835 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067227233 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084818669 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068113217 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084290636 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067645779 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066340398 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089322168 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069539918 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066155397 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067400345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066028258 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.087215825 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068039388 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061120933 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084923399 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066530563 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083791853 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077574135 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066593639 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085868251 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065274295 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086843947 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066645764 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062740662 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094246021 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076107403 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086884532 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073340406 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084822561 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068504051 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095117904 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062039778 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064393116 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083098366 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06528916 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073465198 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086972221 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075260398 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085366355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067031185 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063132866 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066192079 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064057003 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060483068 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.086656749 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070227939 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084606015 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066778188 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066907556 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068361659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065714064 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096817132 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06663826 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066750423 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.087435007 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063961033 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064484187 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065441783 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067926684 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.088317886 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064941034 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064049479 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085501376 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067089835 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085997016 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067805359 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067808021 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092223795 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066603961 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087936535 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071486141 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063298762 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089019833 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066705073 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083682819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066588396 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069718017 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088731183 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067465091 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093864819 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067100654 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066797764 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085993925 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064622798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083487192 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067335424 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066446235 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085180234 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068295495 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092849984 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065948597 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069621125 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085452953 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068302447 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091390205 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068463105 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07045687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093194882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067601561 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087148047 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075901951 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069666241 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068334146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066330953 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.089024846 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072352735 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.083520472 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073732302 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066750062 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086309629 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068161872 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064249353 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085519024 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066785183 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083153194 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074366616 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067004374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08480071 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066092373 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082963427 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069111299 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069386419 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092995917 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.0686813 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087716048 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062487067 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063643869 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086905916 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065134077 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067644313 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08826249 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071744801 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08794937 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068887992 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065214028 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095062913 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071818645 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089380393 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064442879 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070045683 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087081637 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06895725 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085988088 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067423297 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067789867 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089572253 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.0687414 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.084498629 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074197292 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069394025 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087297003 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067735563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086050576 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068148747 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061414318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086133281 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068677305 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089524706 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069412165 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065972704 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096049574 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064541931 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085245869 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070965593 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065661819 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090619994 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062044333 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086529136 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068575606 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067118045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081486687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066012515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064280387 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.088577664 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065931254 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080934759 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078047772 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093116392 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070944813 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065343116 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084375009 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062432436 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061561529 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085565999 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0672633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087622128 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077112741 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065092733 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064837191 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060686303 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087276214 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070770268 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069186203 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083647948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062161159 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065834125 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089642976 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072022912 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084371375 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066719508 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069368366 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087861668 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064592622 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088918171 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064588135 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07029038 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098338742 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066683891 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086231657 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07279073 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092186785 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06747374 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062064073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086275328 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069399851 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085062393 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069323683 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067085942 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10127096 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069160849 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085376691 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066298436 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06895563 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085718974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074059324 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08682687 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.0668665 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089084655 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06976523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075926122 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088646678 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074208459 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088761841 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069772357 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083960735 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068568031 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064577606 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084332424 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068354651 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067055539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.091718322 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074414756 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084994372 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078176438 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095679048 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068441821 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062682675 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085998063 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066756587 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081223376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068810955 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064525261 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084347512 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065307421 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065514686 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087739839 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071615854 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086738702 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06867579 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066245339 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080815146 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069176338 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087226719 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068553691 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063604621 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085784205 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067697512 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069702499 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089900601 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064294129 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087095579 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069389476 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066560928 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081362527 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073203686 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083450925 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07026903 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065321128 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086136983 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06825973 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068898883 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091667711 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06681211 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08833886 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069909059 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087433102 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064153742 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063170073 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091253609 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064843308 seconds)
  done (took 46.08340674 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099630742 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082970979 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062672801 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061816656 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094347262 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062900129 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081785208 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06440198 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081876652 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068445225 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063322424 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08396785 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073948743 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10062993 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076423471 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090168353 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063702615 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.084860371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06441251 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06444185 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090433235 seconds)
  done (took 2.582677723 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075667752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069907697 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.0708916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073729359 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066193425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093767458 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072680317 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09108427 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07598807 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08734509 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075625433 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090350996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066639309 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.086902863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066222824 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090809004 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075851826 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087504012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070715192 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092536614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07035994 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093012538 seconds)
  done (took 2.706514138 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067988486 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065815332 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086820757 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062728708 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065623852 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.087690802 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069676718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062875019 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.067747801 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.063717861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086255529 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065534928 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067372459 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081145786 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066280397 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063705558 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.13006943 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089504152 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065757672 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065749109 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06103539 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066183338 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.083498309 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062574697 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064296412 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090059526 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066580372 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082401521 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06712887 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065353232 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.08531785 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06474373 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067089391 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086123677 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065250515 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064165124 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086193369 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065626963 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080170142 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065003778 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066201401 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081876552 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067559131 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067688315 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084300976 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064749758 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086156959 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068540114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06281382 seconds)
  done (took 4.537187434 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081411056 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128887221 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067196745 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088465143 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101812584 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072274551 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089635927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109140835 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06445325 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064120591 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.102276785 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103546451 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066915445 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091040509 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073066104 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084580164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068114657 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064898404 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090396244 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064599665 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090229533 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071836193 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.099841899 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.098327668 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070314927 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083526763 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066534099 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069237943 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099751575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.089408162 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071043126 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090397151 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081145339 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091026289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065579408 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0875486 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082626983 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.064888818 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066868154 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084178062 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06893084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08914123 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073479024 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101256713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066817055 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.089248809 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0669554 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062997654 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098584301 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068120054 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094447537 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100022813 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070787013 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085030553 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071561982 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100013341 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066118322 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082730849 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070717514 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097515377 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064297688 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088350651 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081393963 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087139878 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074620837 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078538217 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069919035 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09149546 seconds)
  done (took 6.67533309 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075984431 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092822939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081161096 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101425377 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072446168 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070710499 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092572809 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074018861 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092328836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078617225 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092164377 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112939624 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068953004 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094366366 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073690301 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092572754 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073760171 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093079161 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073110677 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092402918 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07273155 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101144822 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091758766 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082111397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096216553 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066970745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094035451 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072985753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100846131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.091908766 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081027248 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091206213 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073108279 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100912912 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079280383 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092488345 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065123615 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092858217 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071485525 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071629577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066910805 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103442624 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090632592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068485829 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091788804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073906951 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.1001015 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079770211 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095555501 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096659615 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073745988 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100473744 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072862702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092399735 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100543112 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106495372 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101476789 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100794894 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075475093 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101818143 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10011269 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087204757 seconds)
  done (took 6.342028893 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084607056 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095346569 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076190828 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081993592 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065254199 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06922713 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06340263 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063033035 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098110325 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074650428 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097424661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088781279 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074158566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096739051 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070647596 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093860202 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070088988 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089919266 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07392546 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09056223 seconds)
  done (took 2.595657649 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075534847 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082016325 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087565871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071271188 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089232161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072026654 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088783745 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069669385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086693241 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071950407 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078065979 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099589806 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067349494 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095223389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09684553 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07551072 seconds)
  done (took 2.285011805 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076885777 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093391155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082684177 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088508805 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067802398 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064160579 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.089257348 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063685821 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063926398 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100093328 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06554127 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089216917 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066172557 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063600276 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061833251 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067219052 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.085049529 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064287329 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085008536 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078877298 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095453391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066235553 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06693789 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087133158 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066012818 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.091704325 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066704923 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083397948 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064979719 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065391862 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086739963 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070778639 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083061756 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06469899 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063789975 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083904765 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066284147 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086276338 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069379815 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065904046 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084847202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065779645 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085953771 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067828517 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062113181 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.087558698 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06230965 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088442764 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065001052 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08656563 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067469026 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068381611 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087218944 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073684392 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089913199 seconds)
  done (took 5.137394708 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080125939 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068661482 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083420728 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06493663 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068513522 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.088749082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069778067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088424138 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069107238 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083214958 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069517602 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06875902 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088036008 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070071007 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067036721 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068626284 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061556668 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090398397 seconds)
  done (took 2.329347103 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072800981 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065898513 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093430668 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067579466 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065242756 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089725713 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062859217 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086193458 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067804252 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06761091 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089148794 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071213192 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086735946 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071649005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067869937 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089066897 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070555223 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066787663 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089589256 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064292221 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088405324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067850173 seconds)
  done (took 2.642767137 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073505148 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091932159 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.158817079 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.104485359 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082649139 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078545648 seconds)
  done (took 1.57448824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092545738 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09978479 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068138199 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0879953 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09550849 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06777567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088824773 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067885051 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097394536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096406754 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068887632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096780222 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078050771 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097335095 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093007822 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07603986 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087417225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06949677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06635655 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082305037 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089376635 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077105669 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08942727 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067830688 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088827868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077279338 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096859193 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096479747 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069144226 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096209594 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074740534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087961353 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077661677 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097368627 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07060399 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096472383 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067984895 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105948009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093016943 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077779835 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089263226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075304962 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097564299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073789232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097237538 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06829892 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093832401 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068149241 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090354013 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107031774 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074500215 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097038779 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074032342 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097726399 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096674348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088447102 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098258161 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096120437 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075224 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097363778 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076653653 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094243833 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096007919 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078794904 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094475407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079140379 seconds)
  done (took 6.64253026 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083854691 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106594072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068934433 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097943036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075984834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088928347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068379036 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08802514 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067811937 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088469103 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128287827 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069554112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097299369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076787976 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089290752 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068170527 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089221951 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075404546 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089106715 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106826183 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069304733 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096292925 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076920812 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096899061 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097017928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074126059 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089493281 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068939389 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0882704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069336402 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093718779 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069308183 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096766344 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067624759 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097194419 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068734878 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089252278 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073128074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088915037 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072754888 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097385569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10518462 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068307554 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08889618 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076851928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088926985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067865816 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088630213 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069097998 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087940245 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0781835 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075246358 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07484137 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073863363 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092123705 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069515836 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089716969 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069381419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088447036 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074774916 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097798938 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068529748 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10837527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068109335 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090401876 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09691918 seconds)
  done (took 6.518622278 seconds)
done (took 130.450592108 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200264152 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186370156 seconds)
  done (took 1.373419289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069549396 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095601998 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09876577 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127744567 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087673985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100575765 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098678474 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099667097 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067103121 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087309209 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06826132 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067875622 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.129849969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065761265 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065299676 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.091231056 seconds)
  done (took 2.414217335 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104822589 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194927886 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109835173 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066355827 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100714882 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07888429 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065392551 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097908452 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071487845 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08672174 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078205464 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095484967 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065536244 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095420213 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072823947 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097019629 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066047633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077990211 seconds)
  done (took 2.621877201 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101939008 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141921013 seconds)
  done (took 1.240570831 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.196107004 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123919533 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.189003856 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.421306293 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203087741 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.262637779 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.176680649 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174028631 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158921772 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.172118949 seconds)
  done (took 3.066990882 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09964533 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170391727 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.301751267 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139834985 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074142408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.113786946 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117352803 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.099926427 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.098015864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080630823 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099697251 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078090286 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1177107 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074984028 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095556216 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077576136 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12249633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0732937 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097123959 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075907546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118787676 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066690588 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.094565815 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07469376 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075415115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074077499 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065053931 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.089073355 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075771644 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094901675 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078575234 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11262605 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075555217 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.149223312 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072290218 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.13074922 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076389965 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092930028 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073834384 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093029289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07676021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097159328 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073112963 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097006963 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.0665518 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096383699 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066914576 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065969351 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.09949515 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067460845 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099647017 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078732537 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.127880654 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.087893731 seconds)
  done (took 6.187119192 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.710283014 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.125484672 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06977234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130228809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11591365 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073948322 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.758806851 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.113466014 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205084562 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092355971 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087339142 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069028303 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102473259 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085008574 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.129700181 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102338366 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115145947 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071324843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123344581 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120924694 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068575654 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114125944 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09100226 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42787017 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067373374 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090752533 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068215678 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069645975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154096471 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079282844 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074565837 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163539543 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085540353 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.144528684 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088518243 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068224672 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087699122 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080734721 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.230264556 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.160405454 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129631118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066794881 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067130361 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.093114089 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089752269 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066573706 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132697965 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080935164 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1423718 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092002859 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070618856 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088511793 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069941641 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10022506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079464997 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10180913 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257195643 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068017589 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066948737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070334821 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232373067 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079643479 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101143595 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091454799 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.176487751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068976705 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820368481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085556833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088695445 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071255745 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068188926 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090750305 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070096435 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14291074 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363983592 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071130411 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069527824 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088754447 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.196531397 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09819589 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0698775 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136468347 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067333008 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08954022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070705535 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07042534 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.159708599 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081417002 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.089591922 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069957549 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069858491 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.088193848 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067966302 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.190640895 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100331037 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080032816 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186733737 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089760159 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.133869289 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079710248 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090887475 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080521697 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.088455121 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070729029 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06843473 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100139348 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.115797567 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080350313 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090746634 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068773037 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.119340768 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08116667 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.088725399 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078622677 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4490518 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.100788615 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066846612 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102495101 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068398631 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.134802282 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090617826 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.207420393 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068932594 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101913815 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068267874 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089022173 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068935714 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.134068726 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09068404 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069916747 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069334043 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091485445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079690692 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178819382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071112599 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.157430075 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.157724865 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090471942 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.143170204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068834344 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.139133421 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090389252 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070913309 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070263889 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81105086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06960184 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068520327 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091212289 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.171446168 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069460627 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100150461 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078909009 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067518706 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819016494 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08021965 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098609197 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07921147 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091142014 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069392427 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089598349 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070629614 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.132870941 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.189271745 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0712883 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068157284 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099760071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134887274 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067289545 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099732561 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078738094 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077233722 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067802784 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09351914 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080634409 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141002925 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100642802 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.157190829 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.560367323 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069269704 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.097564035 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.167928196 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067788564 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083944198 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067284771 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105356971 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136780135 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09757286 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.254518824 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137076366 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171597515 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080389358 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103901399 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066984233 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089830074 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079297277 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089424425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070009429 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.09887689 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07107897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068884894 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.105181303 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067947271 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.203825386 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088774483 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079418332 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088080789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070512819 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10456934 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069812197 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069434515 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101411324 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069390053 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099179913 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.668877089 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.099546118 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069322165 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069948229 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1607008 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.137294241 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067184107 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089463089 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070605231 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.132106495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.185453574 seconds)
  done (took 30.831237733 seconds)
done (took 48.726698439 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.231648945 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.146510942 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.250480943 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118124215 seconds)
  done (took 1.840333007 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.144694047 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10099049 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092921108 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064181895 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.127007907 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086278424 seconds)
  done (took 1.642147736 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.385225618 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.265374838 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.20437428 seconds)
  done (took 1.873927905 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218897414 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.233449922 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387424684 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.301981259 seconds)
  done (took 2.271315801 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.165780318 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113681647 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06708561 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.105779289 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.159428307 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207083986 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123802478 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170725838 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078564592 seconds)
  done (took 2.261537357 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.190895608 seconds)
done (took 11.098037543 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093284972 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.186782716 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.10039641 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.216152615 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182676039 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.194676123 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.144270982 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204226403 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104933161 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.180841974 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.186683111 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133910008 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189094198 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076203707 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132329677 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072966152 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095442661 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.149327116 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.217970117 seconds)
    (20/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.179664505 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.209400171 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070666511 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.237420642 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.174510841 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077296668 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.088222903 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.103586543 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099133802 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.152233948 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.126473712 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 0.163060459 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.096189844 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095458517 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073461483 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115632769 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07317423 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123033754 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072892355 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068426743 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.162821455 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.183099471 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.121915675 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052085945 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.15890728 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142010753 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121427707 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170946422 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.194821406 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12126096 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051978551 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052881354 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095171422 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072860996 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113514934 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129328575 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.171275836 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200361964 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153098123 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194129037 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060881085 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.137940497 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080972567 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.090187989 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07897259 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087980646 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078222338 seconds)
    (67/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061785472 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161746725 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.187368475 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.137319007 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096889625 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.088317352 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204282314 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.179802591 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.074154638 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073277886 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.203092887 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162258282 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092397251 seconds)
    (80/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.05300247 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085797657 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.05184853 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051992655 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.073587427 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.06708192 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.163881317 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066612869 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089622177 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.190006435 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088060843 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091653 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190846 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065713053 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098953472 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077001383 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074697518 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095841887 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051439789 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172299456 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073835447 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.112235385 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072808849 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052415153 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.115197546 seconds)
    (105/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053199266 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072824256 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098933724 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095660893 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157168592 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064533572 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.12940935 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.149891898 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074798087 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051874161 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120770902 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.114918924 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065877568 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.166229765 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209160144 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130506219 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089053406 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.073159288 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073805882 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.156359482 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07496802 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072235095 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097100493 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052824629 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070972833 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.114056681 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.395460459 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053227317 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066905168 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.096533304 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07408142 seconds)
    (136/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102852399 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073259319 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.097639509 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.135835289 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157361162 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076510843 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052465202 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.167933581 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067227989 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094893571 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066873316 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05195103 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094272051 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08297297 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076339128 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165293968 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096341293 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05257945 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077612747 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.159605462 seconds)
    (156/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05242018 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06981481 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073526047 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.173145336 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.145389758 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.144492752 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06478258 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075493481 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139876968 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123411165 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052767007 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072096086 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089228009 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064896108 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06791372 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.092486347 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052834969 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.094731778 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.0762281 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111962148 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05247853 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099288399 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.109833218 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.076550124 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091331999 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062811282 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071188189 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075353103 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.080398624 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 0.151912411 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081087054 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.174142896 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.192725084 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082874828 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07177472 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092757506 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052898941 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070339295 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196652698 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.150986282 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092228762 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090423719 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073974304 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050795924 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135318055 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072742985 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112281869 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.066094074 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118005068 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.08985381 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.161148623 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068601095 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051260297 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102049585 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066290674 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.063258605 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.099926187 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052738878 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064888096 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.089222329 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199571604 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051752696 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061834621 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052077852 seconds)
    (220/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091001864 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065871448 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.091960062 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064071509 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07139888 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.113629132 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065221197 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08922782 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052013773 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051232644 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162105427 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068297591 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105280137 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.123684856 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.096432638 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067151421 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051348431 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076805907 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075785181 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09298823 seconds)
    (240/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.075505253 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067127419 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05348239 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.07566959 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064662977 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053235866 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 0.148022101 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09247789 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08917717 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137576622 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.112591981 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078671333 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.075015222 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053698006 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089923924 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.084853905 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077853091 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13485816 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06604858 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066669875 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088481873 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092669687 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050716058 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071011837 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065709698 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064724315 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.104704818 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071876671 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.074312877 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053927805 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065841358 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.108617817 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088327507 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051229336 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101655186 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073758265 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072720276 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051336478 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070345506 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.090183142 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069602771 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.156195984 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053928344 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052122549 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068387225 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089415634 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051751293 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052062426 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111074108 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053069632 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072547189 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093015108 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170033136 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064371067 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054002474 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063206776 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078490055 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074127717 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072121482 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.076520861 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067279276 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070870533 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132145467 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06692069 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064135644 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050389759 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.171873868 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072113042 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094200687 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05572956 seconds)
  done (took 32.695171246 seconds)
done (took 33.724288105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082417918 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11230612 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075394804 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091641576 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.103558553 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076482493 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.095799081 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078356856 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078491868 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079598149 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.10323434 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055093438 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073916377 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098161597 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07465978 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114078293 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078524503 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095030902 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073807336 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064984208 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.0963244 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066384161 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067674766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.077866054 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079474267 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070986988 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095677088 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074076212 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088067407 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067280611 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068344956 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.095407056 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066097631 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077112396 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094745708 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072616018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096346425 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077787746 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068167614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088733892 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075009892 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065397446 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095550005 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073733163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07100953 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.094294506 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073187037 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101174351 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092261648 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090059476 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075032169 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076127008 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.100375807 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072673339 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091967601 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074068376 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070151191 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114903811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073990065 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090599503 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074725246 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074339225 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09505812 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074718218 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072587348 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099673679 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075504807 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094182146 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075981869 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070229636 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088925093 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073653696 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068029491 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.089525945 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07569358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098827194 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065395379 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071343406 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095361461 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072679925 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064924992 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091121561 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067831062 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071772676 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091053428 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05540855 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068810745 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.09469027 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065746698 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095278232 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073568293 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072563534 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089457009 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076468207 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065741717 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09423126 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066911114 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065253105 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066483546 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068941221 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064309745 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093871139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075306046 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066343772 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095754777 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079751347 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0883913 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072563348 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064474126 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088446573 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080321413 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097044742 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067256395 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067776832 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08744632 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073644689 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06482442 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088655304 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06663572 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065851108 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.094693358 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066560515 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067639087 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096675185 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078556501 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087177286 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070435076 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067723592 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.087949242 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071960431 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066488363 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088624572 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068754488 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061700371 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090640622 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066887857 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072621655 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090994635 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073527553 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066822294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.096922019 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069854098 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093804109 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072127391 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065225225 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.080329976 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069825185 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067641106 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089971299 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067082128 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067154853 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087749904 seconds)
done (took 13.177566452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067542123 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16728837 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.121175215 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096486974 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108847775 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067165507 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075800551 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126305583 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089503975 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107161591 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.1102335 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085017339 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.137183618 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06594496 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.088792164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07106312 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066868913 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111767072 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.122983906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088065438 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.133991234 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064828999 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.118624783 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089444696 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111569393 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114772501 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067958546 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069978762 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.09219781 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101521983 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109128485 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070028754 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066061996 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122013279 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115621994 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08451595 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088096529 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084577773 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065856629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088978743 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.088148331 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122030632 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.102553403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082145912 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071107644 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.092730059 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067192644 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.107188258 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090071454 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.102969179 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.108623889 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105780422 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09206894 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081654409 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087519019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08753119 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.103752328 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06900763 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065895069 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091581584 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06572146 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068762153 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11037274 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.112241795 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07085178 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103072299 seconds)
  done (took 7.26319261 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085004715 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089864046 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106924944 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083153949 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064836318 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065860859 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06539856 seconds)
  done (took 1.647850608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068721318 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087987515 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112934868 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089039427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107888673 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087318145 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099454632 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068701246 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082916188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092245125 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088197181 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125865517 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067932036 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096296665 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092339795 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067065084 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115935087 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066575001 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093011226 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090584069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091236563 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087256698 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06914739 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091774374 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081427059 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066396668 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11052122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095616442 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06947667 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070015505 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089220042 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1081961 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080249807 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072578585 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065350395 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108066411 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080991268 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088431729 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08411325 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095111106 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082298855 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067138984 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091750613 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066222635 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071474004 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101463799 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068473979 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066821077 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094440174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08744663 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091024617 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08154831 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066982062 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.09453565 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069178121 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094233229 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077946777 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067484988 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110436372 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068698988 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10629518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084235043 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079874775 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107240831 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069603505 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.103824277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080776761 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069635529 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068432066 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069855736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.108215403 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065958186 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068211615 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102159861 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070135762 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11344946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090502673 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068518826 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075935468 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066569959 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092346948 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068116755 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088618464 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095526403 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067549442 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093263892 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071808842 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065408205 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089483165 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071292456 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064796863 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091885597 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071086802 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06748308 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093407054 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084235913 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091374662 seconds)
  done (took 9.259392462 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069514287 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067881442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092168118 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069139621 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068047832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092351776 seconds)
  done (took 1.557227075 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094803443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092051132 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082047537 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072353766 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128020924 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080691168 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.10602961 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10157203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085127506 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078850276 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.106050145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08209169 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.111805586 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074033651 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104920669 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07185921 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104767203 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077003442 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101850356 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074972993 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.110617788 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074501994 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072802918 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106098355 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070507213 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096113119 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07770558 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102387062 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079053479 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102489492 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074013836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070153963 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094817618 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078704828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107341545 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070545042 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096478094 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072498171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099367238 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071088493 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10444337 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074571637 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073926677 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095849987 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079118593 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095304427 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071552939 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100009374 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08175867 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094031884 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072357321 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071381541 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094814327 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071845458 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.094095788 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080407096 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09461467 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.082537603 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094869463 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072757242 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070540701 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094380765 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079157634 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.093983296 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080119644 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095327328 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071862247 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072860298 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097709022 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072260769 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070218516 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068266218 seconds)
  done (took 7.323569585 seconds)
done (took 28.132514326 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.65892181 seconds)
  done (took 1.753721053 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.764453513 seconds)
  done (took 1.861738653 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.647811219 seconds)
  done (took 15.750406454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.586088962 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.757265321 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.834418785 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153412371 seconds)
  done (took 3.424035572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.875785299 seconds)
  done (took 1.988361045 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235847271 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222895297 seconds)
  done (took 1.55688556 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.784802175 seconds)
  done (took 1.894379781 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.27207193 seconds)
  done (took 2.376975934 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.317329098 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176326962 seconds)
  done (took 1.605753062 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.485431912 seconds)
  done (took 1.594712702 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.959296466 seconds)
  done (took 8.074563362 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206708905 seconds)
  done (took 1.329008684 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.26399705 seconds)
  done (took 1.381602304 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.122634388 seconds)
  done (took 4.23471287 seconds)
done (took 49.933526333 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079054512 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080783495 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104281564 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078657097 seconds)
  done (took 1.447771424 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078961088 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072660591 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100744843 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072456263 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100078886 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073866192 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073445303 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101506591 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072234595 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096226742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074076191 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072308071 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100084134 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073499216 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094392398 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075480652 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098040452 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074317383 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075020974 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096057676 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071588642 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074148761 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10006479 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072012783 seconds)
  done (took 3.113138654 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079175146 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072935911 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097537887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072145956 seconds)
  done (took 1.443197937 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078636929 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091078974 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113276909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076655286 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.11708428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085175849 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06777483 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067732778 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096905298 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077410753 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067718503 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120911562 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.110866469 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076988808 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079046578 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090215403 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068503072 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.110496931 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077511694 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077562945 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097180201 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077091343 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090573371 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089662171 seconds)
  done (took 3.228702205 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078247541 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10262799 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102408978 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08664062 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.114588985 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064897073 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099380755 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089110732 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148192881 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065386719 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094115712 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067508248 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072099444 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.088977031 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07743272 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.128581057 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109683439 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068110936 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120158813 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065606139 seconds)
  done (took 2.96710845 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074314505 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069328468 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088579801 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069706143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077307938 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096510918 seconds)
  done (took 1.603099586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069118575 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066813277 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090013515 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068398879 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072041377 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090708195 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066923153 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066637493 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090662389 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068081546 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066332495 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090003011 seconds)
  done (took 2.028186387 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.407789135 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094202272 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.091408077 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067251142 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071042624 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089772561 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080389847 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067754382 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08826483 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065069931 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.091078225 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069440462 seconds)
  done (took 2.403378449 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257787623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077454683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289238392 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161677031 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108995226 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142855781 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130257032 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139051609 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17013394 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128632734 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221274847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195376427 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133203535 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162893919 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113608448 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098902499 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208591085 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189368065 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129182794 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215098865 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171685559 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149254209 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172269366 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126406712 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131201969 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148492665 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071709548 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104050574 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224061712 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157895248 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173565113 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136422434 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119957233 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227950235 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222309235 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168106817 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159989748 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107767735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.128433518 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.159171617 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252911144 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11329739 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19158789 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13316229 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104547994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166085667 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145017719 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144225204 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.13067569 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089510585 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196987134 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234122454 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165930106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085389982 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136238027 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141482578 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139972579 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129056446 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233488895 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187326134 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15151287 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095090655 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098602417 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204771948 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157533626 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.133481181 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151663103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117967518 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160088832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18072374 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144267396 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194196887 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.156966384 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1120052 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142679766 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167089603 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155075278 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19612149 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172987402 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073772183 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150998283 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128420836 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080893759 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164445928 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074832827 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199399855 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124183578 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105348465 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138871515 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13411847 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134657304 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215632362 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173764181 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128567535 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065569768 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128534848 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145480368 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174584021 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11216851 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132635366 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142643463 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078726015 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164688153 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100053848 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147848801 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075408804 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149342097 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155183921 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101108681 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150154937 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125302408 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101458003 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158758882 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212635266 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111349992 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083390967 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192345653 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170995163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105966385 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168527812 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184907285 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.123583724 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127851921 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178182588 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233489568 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088202815 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215041254 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133392587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083943455 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112491509 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148762122 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138652192 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148671046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082172001 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.145477509 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220325497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074321334 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120439627 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159381311 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104479825 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080402072 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129593556 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127105644 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.119126967 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101631878 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.131450263 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19106978 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149640302 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107047421 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150550402 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125199748 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222916269 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114597148 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10177847 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10172405 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095417739 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165278736 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184789795 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105227321 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193333035 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.149171916 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131709058 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144693695 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106702312 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167161609 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079284865 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069430112 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197738815 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135919758 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135882729 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179628247 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129266065 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.154348198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.14625603 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161861585 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158184553 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.154704823 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131908011 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111594582 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112241208 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179186933 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073832227 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.116727132 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080510256 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130316617 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121945607 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083163002 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196182474 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152660804 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124612615 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112061672 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093920597 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175326804 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102458893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156327061 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.14580231 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120004665 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180641573 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17847309 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183399463 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100103424 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199345275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071366338 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098589824 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092324065 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150394796 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108888606 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083925553 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144521371 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172820598 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157067948 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165445767 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136849634 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147169851 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180600503 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094485618 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115702273 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199881443 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148903307 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127740281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116082364 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099070072 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192559309 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110937572 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235281133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140223552 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150622411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208406216 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098488762 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079185548 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132357479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165020688 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13243398 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172021856 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126349618 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113892771 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1357468 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075181989 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126585301 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154178027 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147020013 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18728253 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116466596 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186359251 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077726093 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145834772 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14628869 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14824116 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.088514221 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146648718 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190038284 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121509049 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144833047 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175769222 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081393205 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15040477 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231965056 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173801731 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109592576 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136215871 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119326071 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178884549 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146620922 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168240191 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137115376 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160440638 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108800021 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083038265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114136348 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0982169 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131985936 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120639415 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.136274552 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.140612491 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094665397 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183536488 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103438431 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134547784 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143861157 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121274217 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09097873 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123845845 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201510899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145581921 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22490102 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125270471 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17311149 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217770961 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074165572 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106154017 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078138234 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191689184 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085899557 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157791806 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124494417 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131487493 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151257112 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170801093 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121390655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069451751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106198214 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162975139 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139447166 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123730043 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105608149 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21702466 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125449792 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080650355 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140468165 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130802031 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102724057 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227706377 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.086131835 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098995497 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100337022 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082250682 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154556189 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207111242 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081031371 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.149275255 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147381363 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137759874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155753317 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127457353 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101290024 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140815848 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203004896 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15706872 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090125269 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13882489 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156468877 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183474838 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13398916 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09529464 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226184266 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205775393 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.189713283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114009922 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1405922 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140239156 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108935709 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195177344 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082721682 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218230838 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106701274 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166453199 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130815417 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130899315 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158847965 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098594847 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115627058 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174678288 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144354729 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108706274 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076762016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170052824 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12148231 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104352553 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103421899 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16741878 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097531488 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162357914 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196828218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108756021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130206996 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096029668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106716647 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13542843 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128899857 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088531348 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144049108 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2294058 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089906277 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175845585 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168573731 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141701692 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190265691 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100411906 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662312253 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.104864419 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180032848 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14813325 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232121617 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124679168 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144088143 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109433884 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150412194 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198871399 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103725175 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171443566 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18734101 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.143627266 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080181205 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129767212 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130244935 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087789044 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131466536 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139827445 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143518938 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.120310454 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.142993837 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152077027 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081308933 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121879059 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209514847 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143288442 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173902565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16691879 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11130014 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144117869 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167636995 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104527044 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149601525 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181106882 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134185727 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124216349 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080953275 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128540197 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2249007 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073331192 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217549924 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147724836 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135010839 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139957204 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14273517 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158375245 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136014235 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148923368 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119119851 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109767762 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135681859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084616918 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102275613 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105783811 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139902018 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122811617 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125792394 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120326051 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204516849 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072802486 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122754248 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104172519 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199645483 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229653003 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089057538 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108507073 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146544646 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141082762 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.140266809 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147866289 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08063183 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107297761 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082418569 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.103301583 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.132599246 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140214142 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135581554 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139779163 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192783361 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109915552 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.249009469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095905571 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130894957 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068872001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105738674 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12176863 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098458734 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135927483 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126661505 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222448558 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096719172 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116838476 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119032565 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074897481 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081978131 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153695836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107809835 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147425011 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125046197 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086991978 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11042917 seconds)
  done (took 68.852493211 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169263431 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.109840771 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12173635 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.173844317 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148772985 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.238615652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182091296 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.224835902 seconds)
  done (took 2.569924556 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070228875 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118681416 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099287386 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.107882027 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06753949 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.093490927 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.274050872 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081205594 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091940598 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089479994 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.105646043 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092880372 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.455231386 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06616268 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.092068068 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064300758 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0923629 seconds)
  done (took 3.256023545 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428306604 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608831926 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.445884586 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074606383 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.837293882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109293072 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.155423791 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160341916 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092904758 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.419134061 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.723293684 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151067051 seconds)
  done (took 17.404879667 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074977893 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068245474 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108098431 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082623445 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070792637 seconds)
  done (took 1.605159231 seconds)
done (took 113.037006086 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080856297 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.351408121 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05354566 seconds)
  done (took 1.64171942 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083319587 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083437444 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.110318672 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082112298 seconds)
  done (took 1.5713114 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075483362 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075793925 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108875392 seconds)
  done (took 1.469745126 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.280649845 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138000065 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.114540329 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083141857 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07737416 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102472979 seconds)
  done (took 1.46990336 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073821432 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073933805 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098376322 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075769632 seconds)
  done (took 1.523836495 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076858028 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052754829 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054304008 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081302447 seconds)
  done (took 1.474842704 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087130448 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078524448 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104111715 seconds)
  done (took 1.471226033 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106274221 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.109920821 seconds)
  done (took 1.42328246 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08236996 seconds)
  done (took 1.285628986 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100486622 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.139038684 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.15393719 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.135813858 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.164258335 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.135309878 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08493502 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115519637 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102820475 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087977474 seconds)
  done (took 2.432179414 seconds)
done (took 17.584830358 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079456291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.381369769 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361894105 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088736055 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694968661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356239417 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993089859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091339443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.147384952 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092712894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084961358 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647837075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.018952981 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318863435 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.006267649 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.414552434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.672935686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069495174 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067334226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092198998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952032239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067175579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092802593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068068141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.674208442 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375596887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067258331 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.434785443 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067383332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093703047 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356550711 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068488054 seconds)
  done (took 16.194849341 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071234491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140585398 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075035004 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083014655 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096502076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069519957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.095839483 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069795386 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123537346 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066378817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110467273 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068674677 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071448444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094812375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087058222 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066876436 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067059641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066800973 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09552607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069105437 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085501109 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093678065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067610684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092663444 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06921801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.0792315 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093871543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067745387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067578704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095831594 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071185488 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092995565 seconds)
  done (took 3.882615219 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11484891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14989806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073884265 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127519396 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112151425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096199605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141705616 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11931517 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152788816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068395942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10955613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067807364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124743233 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069866375 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086294444 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095302274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068447568 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092865521 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069502311 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077483273 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114568624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067561052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067618523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066986156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066480671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108713322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068543774 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067924708 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094658225 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069724299 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.096085512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069501133 seconds)
  done (took 4.188922995 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073245439 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074102678 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108101815 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083331246 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068770786 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.098192577 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071816598 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09400435 seconds)
  done (took 1.893076012 seconds)
done (took 27.371971942 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078894957 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068029929 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097363032 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081200952 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071730722 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104135931 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06673779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098851743 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073251345 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07191368 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101130559 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06749094 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069919047 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093670957 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073941974 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066959292 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.105604587 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071473372 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.104251717 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079424521 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068467875 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.099660819 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07343988 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.104327599 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07956713 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.103201849 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078340647 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071695777 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.095394827 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069643113 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075051523 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109599985 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.06779027 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104250624 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068654184 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066667784 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096850048 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068426549 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.102990913 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077985372 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068953322 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102124159 seconds)
  done (took 4.709365062 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097617233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.08956163 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110586668 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061509823 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066009796 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.091305312 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088912573 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085928292 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060339203 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086689693 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081140812 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060166774 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061936365 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05288932 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.085979235 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056871809 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060826398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054714698 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.057872718 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058044669 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056592231 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.083294502 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060363566 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.061847385 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08222071 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06302145 seconds)
  done (took 3.095826132 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076162265 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083931972 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113911861 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125167197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.1308278 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076368438 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.105438861 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087181335 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110957745 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067966099 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070580677 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.120243896 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087828053 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.099271532 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068302628 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085633652 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.108323617 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069038424 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.098613847 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092200212 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083022847 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10385322 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092443393 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.106307684 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067725003 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069815698 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097708385 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081680353 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097373664 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077476002 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070242782 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097476998 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069119622 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.113959655 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071277208 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068121788 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.116434655 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075988845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103562002 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.06865921 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070141786 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094768516 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088941515 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.139426951 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067711468 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073213903 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074010396 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.074812238 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.095903786 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08668668 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076967391 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.094742483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070692428 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065728799 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066820495 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078384408 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097571258 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070834714 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075315327 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097632778 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079687834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.096423459 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084701574 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066518837 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.101558486 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067342223 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067778759 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06494811 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090085369 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096235926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109214963 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095038976 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069672117 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076101479 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.101784216 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074099827 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067022073 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109437286 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077608067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.097801651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076018947 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070022817 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096957243 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087601169 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068186424 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067546694 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066819327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07186355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068299868 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067487626 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110887032 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06760444 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070492692 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111200451 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066554387 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095209675 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074336158 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070919351 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094034617 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078647223 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098599886 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068525269 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075546764 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.094908468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070904796 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103065633 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074736054 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066306447 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098210555 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074431 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.06763827 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096541802 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.07118843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06811801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076219264 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072298059 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101151358 seconds)
  done (took 11.153829424 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.184035639 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152696395 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.0978828 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.17018516 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077185785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077697737 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.174073138 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.121230562 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067638335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067739967 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095959708 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113595151 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.133282187 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.148255967 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07780952 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.095481269 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082950932 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.14355337 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.174850916 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142054871 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.110711736 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075741715 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.09692115 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06914108 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073275963 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07998375 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.088628799 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106076137 seconds)
  done (took 4.331947769 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081890651 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12536563 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074220709 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0874583 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.118471522 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067377958 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.096734734 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069381761 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078420664 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.106625722 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066915436 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.100157996 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074518524 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099295273 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069504249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07355588 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.101701236 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069524451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070182538 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10016138 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076539522 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106745922 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072071398 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065894465 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101815545 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06712524 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.091522675 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084803279 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.094160687 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089404645 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064776876 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102744241 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08032863 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.095207703 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067859246 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066860357 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.093964873 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067619022 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069167096 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092613297 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066755319 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056679016 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.093443255 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079733901 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099831351 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057040648 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071376161 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099625061 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073258214 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06470573 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097389777 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070350431 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070312548 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10161038 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072514833 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097669654 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069942237 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065330349 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100719955 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067702963 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064067061 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092060508 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073245665 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06582346 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102944053 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071746756 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091491948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069002563 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069087235 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099157699 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06834628 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069605995 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091379806 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069806649 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071469957 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.096163337 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068055556 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065854517 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094938583 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068131783 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054699031 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09498307 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053966009 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070824051 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093834423 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066574284 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06661315 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071221679 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078407395 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098391808 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073533244 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095078228 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068888711 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070785499 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087073172 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072255258 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082487335 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110478256 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066620071 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093841365 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081604897 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098206092 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068772908 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056451456 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100935058 seconds)
  done (took 9.740264683 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094293761 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086936759 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096667072 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082804094 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.116737203 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088079854 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073950713 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100967497 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068992462 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.105946357 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073888322 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075284132 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094477322 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076586154 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092607081 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102812179 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069334115 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.102525392 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074027389 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099890319 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110109391 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080918723 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.100792855 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068473779 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071177484 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.107121776 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089099145 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10612073 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07852406 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074217906 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.10638075 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089827443 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.100807965 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071875263 seconds)
  done (took 4.275982762 seconds)
done (took 38.52057337 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.30407696 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.518172274 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.293945585 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.247441933 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.32066302 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.313791429 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.310328407 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.297054164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.511424007 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.299406691 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.538640072 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.960192684 seconds)
done (took 60.151133029 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.29739348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.446774725 seconds)
    (2/2) benchmarking "String"...
    done (took 1.56205598 seconds)
  done (took 4.250156206 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.645348918 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.149835022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.547111907 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.291173444 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.289524845 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.594408223 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.85355283 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.097119695 seconds)
  done (took 28.052750595 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.290698576 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.642393106 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.365034322 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.364880799 seconds)
  done (took 17.894336447 seconds)
done (took 60.376395121 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.27947553 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.337594056 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.302251721 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.27194348 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.390949039 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.316700612 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.534220158 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.484717815 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.29017581 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.282396656 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.287927802 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.294114022 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.321650648 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.553098656 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.300070449 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.290998559 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.317880183 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.73868907 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.655671087 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.308507704 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.311235992 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.306415254 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.291333496 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.292959442 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.346693948 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.28883067 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.290195179 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.303302525 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.188700307 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.291828979 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.36396112 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.824254843 seconds)
  done (took 193.885621508 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.291546422 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.286090191 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.362425918 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.333488852 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.731306548 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.491110384 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.429253767 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.80007069 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.303878537 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.318408192 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.603327487 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.289619941 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.605745986 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.254814181 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.302554066 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.39635596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.548701582 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.600206402 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.307885394 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.553823801 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.313954967 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.499281159 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.403953442 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.538678862 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.325178071 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.295436001 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.302123945 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.291149372 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.482882033 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.486648091 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.300604759 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.33672849 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.81111654 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.150801487 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.317340194 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.295822229 seconds)
  done (took 153.194352794 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.842470947 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.291184816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.292692389 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294529695 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.31867162 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.293553041 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767089753 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767763136 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.780594808 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.520434291 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.351376973 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480179192 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.295250319 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381124246 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.305526832 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.292215116 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.311395455 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.316070098 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.290866593 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290478209 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766148611 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.304024174 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.408842688 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.299509818 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.292578108 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319211986 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.683733879 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.292132748 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293254464 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319030523 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.605214069 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.33360671 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292464702 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.519995611 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.534476563 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.401137084 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2925816 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321191703 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.294657377 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.557738352 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.295802 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.294453929 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.294295494 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.295231929 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.808470785 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.295125604 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.772438754 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.295558618 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.120465243 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.295358487 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.293955394 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.445172323 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.641352304 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.29784523 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.295909589 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.298346653 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.295050387 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.297846795 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.323749986 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.414372623 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.393190452 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.299955854 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.299719685 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323395687 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.296177529 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.377083083 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300522167 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.835282091 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.35494302 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412047393 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772188128 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.300762378 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.387202421 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.414124497 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.298022833 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.29714167 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.29819563 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.297348109 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.297886705 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.401028445 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.300739539 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.657393538 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.304743417 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.301147149 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.357854219 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.39057867 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298768616 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.548814448 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.298946659 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.29953535 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945034711 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.389260998 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.297423451 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.29696366 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300725504 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.66029517 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.777214691 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.399909343 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.300891249 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.441337316 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.304493366 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.670908258 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.766301176 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.842742336 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.300421013 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403220916 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.302444179 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.296982152 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.301527505 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.298048678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.328514239 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.296372428 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.357477929 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.302264216 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692458783 seconds)
  done (took 354.068792121 seconds)
done (took 704.222779584 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.98852776 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.979914792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.089397297 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.975862766 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.939974589 seconds)
  done (took 11.217982059 seconds)
done (took 12.459530232 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.48127455 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.481379231 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.358608121 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483254808 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.330188985 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.497200468 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.458453251 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.325909049 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.401385414 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.376722755 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.402091646 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353843673 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.330800755 seconds)
  done (took 19.524876482 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.6188942 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.613154059 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.371698198 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.616392756 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342116686 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609614204 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501885457 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.515969969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.493400379 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.319520338 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.312410371 seconds)
  done (took 17.560790381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.621705518 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.612275863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370644904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615737304 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.342569093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616768722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500895211 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.509353034 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491716264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318179508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314070236 seconds)
  done (took 17.557123609 seconds)
done (took 55.887401804 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.310439698 seconds)
  done (took 2.551490568 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.347412222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.504677239 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.327519985 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.319510323 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.309627068 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.313898698 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.319580206 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.314211219 seconds)
  done (took 12.00510467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.304097759 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.305707401 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.30789252 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.311049744 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311004592 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.30577057 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.307228439 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.305673552 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.304672008 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.310200133 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.305360523 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.309991598 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.306016117 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.308423089 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.309833984 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.304676006 seconds)
  done (took 22.161920836 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.307937364 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.307286773 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.304687101 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.305501691 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.306085154 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.306190974 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.310028977 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.304099831 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.310003764 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.309181025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.309508626 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.307465667 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.30821957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.307967412 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.306842636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.306571391 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.30747797 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.307834267 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.313719424 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.30530652 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.308989323 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.306076969 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.306934903 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.306110015 seconds)
  done (took 32.625027728 seconds)
done (took 70.585745273 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.15860983 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.764446465 seconds)
  done (took 9.162781886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.311310487 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.308962615 seconds)
  done (took 3.864717304 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.314122763 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.309707741 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.313501178 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.314065771 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.310787413 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.311981068 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.312245703 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.309698588 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.31252058 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.312536064 seconds)
  done (took 14.365873999 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310162737 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.309724261 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.311964274 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.313289303 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.314085704 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.309300046 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.313177218 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.312494646 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.312837784 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.311149062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.312320591 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.311777272 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.313259318 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.310070965 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.313785116 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.307963384 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.312583412 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.310984775 seconds)
  done (took 24.85740989 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.313054818 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.314256726 seconds)
  done (took 3.871379747 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.311675891 seconds)
    (2/7) benchmarking "second"...
    done (took 1.311289081 seconds)
    (3/7) benchmarking "month"...
    done (took 1.31074581 seconds)
    (4/7) benchmarking "year"...
    done (took 1.310851209 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.310981829 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.311981031 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.309225373 seconds)
  done (took 10.418224283 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.316362873 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.504758698 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.588243305 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.998077961 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.316384943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.320117572 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.269615008 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.318124733 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.321455412 seconds)
  done (took 15.199356206 seconds)
done (took 82.985501857 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.285290202 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.308456087 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.156802163 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.329244236 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.321842875 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.651760592 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.345614732 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.547824349 seconds)
done (took 39.196663609 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.323143564 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.088378704 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.08956534 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.307991359 seconds)
  done (took 11.734034835 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.299795039 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.170158593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.297313341 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.286351492 seconds)
  done (took 18.303185767 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.897524618 seconds)
    (2/2) benchmarking "read"...
    done (took 1.637459333 seconds)
  done (took 4.782913124 seconds)
done (took 42.393352389 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.314166539 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.310956668 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.315926639 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.312969439 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.314189771 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.315371085 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.309489049 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.312092756 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.312971113 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.315868629 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.312055713 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.315549367 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316603231 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313885036 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312813851 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31574617 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.313759539 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31002082 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.313062269 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.314659672 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313448019 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313203422 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.314188283 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.310540069 seconds)
  done (took 32.774223801 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.315950645 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.314828533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.313850428 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.31618542 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.309943307 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.312329649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.317525899 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.312015356 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.314304321 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.317051591 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.3100802 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.314935036 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.31278472 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.314161865 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3161885 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.310139343 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.316250259 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315600621 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31474091 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.314662194 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.316869153 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311656567 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.313787084 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315136435 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.315806304 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314439072 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.318243369 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.315901218 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.31340919 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.31325238 seconds)
  done (took 40.682360768 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.321633046 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.325173069 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.317184933 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.317454093 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.315972845 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.313179273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.317146429 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.316869962 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.316360315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.318702936 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.315515362 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.315571939 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.311545983 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.31471057 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.314394708 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.319013648 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.318723228 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.317529034 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.318019839 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.316438471 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.31833961 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.31637626 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.318044114 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.316955555 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.315836128 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.31931407 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.317462415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.315996296 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.318506857 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.319061388 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.317449178 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.317837153 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.317809321 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.316530489 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.318940593 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.318611299 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.323139161 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.326083216 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.314577375 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.318454026 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.320053483 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.318485022 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.318019993 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.319071485 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.319775364 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.320426283 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.320767024 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.320650404 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.319811956 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.321209068 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.319344708 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.318681066 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.320751252 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.318613239 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.314530961 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.322149915 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.320994866 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.316865525 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.320703106 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.319322862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.320125033 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.320350446 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.319244646 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.320042996 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.320405091 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.316492203 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.32127091 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.319512486 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.321382395 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.321857345 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.31691813 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.320627593 seconds)
  done (took 96.185879999 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.316250907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.319514108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.318622722 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.315965427 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315282141 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.320320188 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.318719797 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.321238344 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318248432 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.320154469 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320836554 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.318275609 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317469769 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.320558373 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318099142 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.318206829 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.320765173 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316333294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.319940694 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.322264846 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.322245918 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.319087961 seconds)
  done (took 30.274528218 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322940591 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32279359 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.318130703 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.319965424 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31974886 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.322316169 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.321834427 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318842464 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319541723 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.320484881 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31989926 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320279619 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321007552 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321046324 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31923968 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.31853939 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323612463 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319975394 seconds)
  done (took 25.023746645 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.322480718 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.321987904 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.324318799 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.319963941 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.320945139 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.322187005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317324637 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.325018627 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.322117254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.321613578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.324106889 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324275602 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.322665865 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32078566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.324694402 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.322171688 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.321123433 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.320521243 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323183926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.32207019 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.320252671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325016666 seconds)
  done (took 30.347126892 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.32657079 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323404293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.318730599 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.322640362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.323057978 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.324253153 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.3242774 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.320037471 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.320986418 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.322040474 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32018904 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.32284562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.321600363 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.321857569 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.322851409 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322870756 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.322258326 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.32319801 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325516766 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.323324376 seconds)
  done (took 27.71139821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.323653145 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327813745 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32571627 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327494391 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324992235 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.326976777 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327082194 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326599459 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.324997228 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.324587423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.327814828 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325781783 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.327768803 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.327360552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327368997 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324674281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.324532197 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.327746121 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.327735051 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325831932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.328693652 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325842553 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327173553 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325456239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.329686138 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.324811753 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329099446 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.329264393 seconds)
  done (took 38.404478751 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.322663702 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.325020001 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.323393783 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.323791887 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.325124327 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.323753781 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.323809805 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.325105153 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.323498617 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.321781931 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.325278461 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.327746635 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325522579 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.328196255 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32481258 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.327622403 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328323148 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.326193345 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.325469245 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322969613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.32815284 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327916308 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.330227505 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.327442086 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324880898 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.329315458 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326912754 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327751214 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330114185 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.325908194 seconds)
  done (took 41.040181092 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.34778296 seconds)
    (2/2) benchmarking "in"...
    done (took 1.347239205 seconds)
  done (took 3.957329696 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.326157616 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.328353447 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.330750021 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.324611434 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.326915751 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.326716044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.328848535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32834505 seconds)
  done (took 11.882456814 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330374969 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.328533925 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.328761475 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.330500339 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.328186104 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.333688306 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.340793908 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.343024656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.332256635 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.33120014 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.337041892 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.338026699 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.334719067 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329790773 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.328326964 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3288859 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.331434623 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.331955944 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.332200096 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.331043073 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.331240022 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332945677 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333908453 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.328605401 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332817755 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.344262563 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.336617958 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.331131179 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332355094 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.336821773 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.32960415 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.328427923 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.331075155 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.332123389 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.331262673 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.332203569 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342578816 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351234104 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.340902449 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.333961326 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332617367 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.328642595 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.334660309 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.334599533 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.333584666 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.329428586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.33328804 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.329664568 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.332641244 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.334353614 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.337968213 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329915581 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.329249716 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339335787 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.335448272 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341488734 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.350095902 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.335993502 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.340880692 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.346060355 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.3471067 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.340565211 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335819523 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.329684652 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.34242349 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.354893437 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340653621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.341640005 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.331038778 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.332749692 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.343313116 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348917838 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.343997745 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.334644402 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.335214451 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.333188759 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334048936 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.333558231 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34265639 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.352601784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.336011585 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.333879411 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342663753 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354950172 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.332833517 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.334572632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.333766033 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.334564103 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.334200887 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.345733449 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.351052168 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.336781485 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.333694636 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.332318477 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.33853533 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.336921705 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.333898651 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336610427 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.331143484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.335500159 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335441017 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338535245 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.343742325 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.336422795 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335025878 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.344771667 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.335201824 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334385245 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.344856039 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.335512287 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.335036265 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.337472327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.343858548 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.331895535 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338303213 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.344963807 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.336211287 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.337139291 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.336126724 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.336824651 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345828971 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.361690651 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.335395787 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.336394216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.340741634 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.347010541 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.336057672 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.34067503 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.337706605 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.334915484 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.335209458 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.338716521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.336345504 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.33825059 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.336432295 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.340843816 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.334853127 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.335993625 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.337043985 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340114757 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.339986763 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.33742633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.341053506 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.341920023 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.338571596 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.340539844 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.346489482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.338095615 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.337708636 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.338850308 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.335162988 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.337781432 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.336067073 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.338333761 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.338854645 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.337645446 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.338688662 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.338578029 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334831951 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.335938005 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.336763736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.335499077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341763089 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.338682524 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.344211009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.338866268 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.334609987 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.337991291 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.338531356 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.339467123 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.334113186 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339367003 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.341927326 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.343377355 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.339006897 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.33827809 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.342307771 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339323561 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340133297 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.338345912 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.341886112 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.345521867 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.340109912 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.348320301 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.341029028 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.337971026 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.34031491 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.340928908 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.339748156 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340867259 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.340978789 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.347614728 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354846809 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.34767713 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.340279836 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.343269882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.341630346 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.345612289 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.346534332 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.341639558 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.340036008 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.33805064 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337968608 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342712371 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.344073834 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.343133289 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.341279835 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.337006737 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.34115743 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.341568929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.340535562 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.34346358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.34415985 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.338082933 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.34103161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.342235608 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.341404925 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.338031611 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.339727587 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.33997232 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.34346415 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.342836193 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.34958893 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.339017058 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34215658 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.342431279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.342331729 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.338365586 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.342527013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345730525 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.342025084 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350684264 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.358598507 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.340442289 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350301387 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.356769676 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.342230462 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.345382385 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.341724107 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.341032849 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.34450824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.350649995 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.341513857 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.342540548 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.343529159 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344091229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.340575919 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.349865981 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.341243877 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.341704042 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.337201562 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.347097152 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.340887386 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.343974758 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.342956479 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.344313937 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34374679 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340430546 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.343663714 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342242077 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.343188766 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.343975403 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.346132303 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347744357 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.349955757 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.350833598 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.345070986 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.346999321 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.342655466 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.347631656 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.345505513 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.345568283 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.343160363 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.357983413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.354990403 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353893588 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.349295463 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.34361864 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35321315 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.343555533 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.348379593 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.345178512 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.345217237 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.344937241 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.344452877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.341065847 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.346641034 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.345226239 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347266716 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.345944671 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.348976852 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.344109952 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.343843738 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.347639627 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.346617634 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.345300947 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.346058832 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.346268426 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.351023993 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348190915 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.34654328 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.3444891 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.355190271 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.362740643 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.34710247 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.344579053 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.346464154 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.345966955 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.347513905 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.34656705 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.348608892 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.355471581 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.349474507 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.357699759 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.348160949 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358770136 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.348251095 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.34935369 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.355049094 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.345162871 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.346593201 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.348237827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.348131794 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.356611374 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.361849122 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.348247344 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.351351011 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346889055 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.348503951 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.346220141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.348057538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.34702664 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.347781832 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358985111 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.367041377 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.350861558 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.349862738 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.345344285 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.348998599 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.345780488 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.346027881 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355587124 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.347958276 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.348759082 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.34577153 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.348019652 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.348847573 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.349367341 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.349049539 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.346453797 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.348820116 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35741334 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.36574184 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353200697 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.350202407 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.359566911 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349196888 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358303922 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.365282363 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.350693478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.349978806 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.348861954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.352149134 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.349309417 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.351635315 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.349967524 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.349719325 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.351160883 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.350543353 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.352798592 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.349642589 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.349646614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.349602018 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359122328 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.372297597 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.349632169 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.354442922 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.34553058 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.351951615 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.355417396 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.350186488 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.349838358 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.352471444 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.3596286 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.357243213 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.350088821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.349796048 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351076672 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347793831 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.34752945 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.350812356 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.34779427 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.34990462 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.352580775 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.34991461 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357195005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.350531641 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.348231714 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351456318 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.351517497 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.362528359 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.350340893 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.351234197 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.351740917 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.346941907 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.351672621 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.353252208 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.350580197 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351898065 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.349537609 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.3488694 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357853239 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.358698545 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.354533058 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.35032599 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.349961456 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.349231592 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.35294089 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.351961352 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.35251451 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353458803 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.352657346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.353666448 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.35339658 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.350951069 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.353298868 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.35266693 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350864037 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354385857 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.358653035 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.353216855 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.349206025 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.348384225 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349248412 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.348918253 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.349959433 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.362060259 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355243954 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.361943451 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.358843874 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.354328404 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.353657232 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.35615736 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.360430694 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.34965667 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.354037833 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.352967535 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.356279461 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.353064211 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.353204094 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353664905 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.362225123 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.351603883 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.347134973 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.363652086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.371070062 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352709528 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.354910874 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.353892871 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.35258327 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.347225331 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.350529253 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.3507802 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359713264 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.368167704 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354323331 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353759094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.351586747 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.350452283 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356057868 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349911356 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.355520694 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.349709128 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.353735583 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354722723 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354286685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.34788205 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.353207993 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.354693483 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.354001255 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.3596963 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.349461143 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351417835 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.353495931 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.355654795 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.355169667 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.354162179 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.346517084 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.35111982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.354711828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.351648462 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.357479198 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.355309297 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.353652579 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.353797029 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.354077775 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352479395 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354682764 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.364822253 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.361627869 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.352391867 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.355020157 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.354779012 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.359039944 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353131703 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.355616913 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.357143149 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.359334604 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.354503745 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.355117325 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.352416833 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.358507451 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374687382 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.376286515 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356684673 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.358252259 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361368915 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.353664819 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.351822952 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.356132661 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.357607473 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.357600941 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.363278604 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.355190611 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357710162 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.372317608 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.355991337 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.356927785 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.360037956 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.364876269 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.358948313 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356289102 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.355604127 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.35919634 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.374098957 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355460361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362669266 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.38627546 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.371865159 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.35740133 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.356827631 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355502982 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.354957978 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.359746107 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.356114838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.35618534 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352780012 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.356735892 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.358616923 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363255406 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.358014036 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.358145203 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.356309541 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.360267047 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.36157015 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.355366086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.358632942 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.35895959 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35834593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.357790789 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359418624 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.360839827 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.372617047 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.371065078 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.35987588 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.35704352 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.356607791 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.363401325 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.361474776 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.369408099 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.366655706 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.358718109 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.359543856 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.361412958 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.359906091 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.358274633 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.361329457 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.360059239 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.359898459 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.357135654 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.373048531 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.369693516 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.366733338 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.361700998 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360054425 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.35926183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.363077486 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35881544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.361812983 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.364620328 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.362092185 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.364242221 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.360614102 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.359753663 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.363736667 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.368454451 seconds)
  done (took 804.437819828 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.356055861 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357594592 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.357362587 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.358111271 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.357334266 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.357161281 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357770614 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.356943603 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.356174764 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.357303526 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35513012 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.359779535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.358648068 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.356769785 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.357575764 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355884368 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.358554942 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.358800693 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356392167 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35884939 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.358981907 seconds)
  done (took 29.798837448 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.360882514 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.359706762 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.358071583 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36161361 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.357865942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.360559875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.358236857 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.361065618 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.362654138 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359888896 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.361623418 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359652396 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.358608445 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.359748786 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.359051597 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.361543347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.360730729 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.359243049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.362499775 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.356362547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362147134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.359607238 seconds)
  done (took 31.214559328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.364678366 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.362477729 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.363311793 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.360431157 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.361302314 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.359267087 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.363043034 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.361719326 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.363544263 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.366544398 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.363775698 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.363121087 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.370156463 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.367339939 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.367767938 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.361862208 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.506613285 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.362399173 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.362801369 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.365075576 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.357691 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.371421879 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.358052522 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.361325977 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.36198851 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.365536618 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.364286652 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.363676732 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.363889433 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.364760176 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.368205887 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.364659747 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.363949475 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.367002717 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.364134377 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.363249032 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.367186466 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.366464226 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.361634518 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.364352915 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.372805555 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.380032256 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.364763432 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.37257935 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.365083632 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.36529902 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.367083852 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.37236066 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.362565742 seconds)
  done (took 68.320149078 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.366182281 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.364425517 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.362006988 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.364735579 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.364710212 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.365096005 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.364044315 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363698496 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.36114255 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.362339314 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.365084366 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.364410823 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.362733351 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.364554407 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.364543615 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.362220371 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.362155422 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361320532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.361296911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361808684 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.361597484 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.364228405 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.365387253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.363951964 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.366331831 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361927693 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.363523161 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.365707065 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.364089982 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.36382548 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.366943866 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.36567053 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.367371124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.36553637 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.364731183 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.367517175 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.368491036 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.363945057 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.365187093 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.363929472 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.36627805 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.366642555 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.367168435 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.366416919 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.364942465 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.365507789 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36333733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.363876834 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.365061678 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.367988098 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.367826615 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.365737498 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.367773725 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.365144511 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.36739907 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.36687849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.365119892 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.364764812 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.367907949 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.36653885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.365168038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.368320667 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.366224412 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.368457904 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.368165655 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.364873316 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.364896894 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.368019107 seconds)
  done (took 94.124420817 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3675558 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.368884396 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.369803763 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.369507539 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.369902064 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.370624529 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.370754312 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.369240852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.369646155 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.371284818 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368994108 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.369617534 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.370267298 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.37008576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.370373198 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.370497376 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.370604297 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368911338 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.370088035 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.370996899 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.370539036 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.371360305 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.370806459 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.370503249 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.370529568 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.370508963 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.369331936 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.370623206 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.369691027 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.37087245 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.370189832 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.369829497 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.371055938 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.370593163 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.371745413 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.367558838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.370995154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.373120443 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.371355243 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.371561527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.371159464 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.371040942 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.371805542 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.371796402 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.372148285 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.371965059 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.372241862 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.37350188 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.37205843 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.371734269 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.371174753 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.371262605 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.371894715 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.372971143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370874755 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.367972761 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.36993854 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.371893696 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.372173184 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.370964395 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.372196961 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.369244575 seconds)
  done (took 86.285853696 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.366642931 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.369412744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.368598647 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.369050898 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368625148 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368803091 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.371569027 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.371255313 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.372408685 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.367585645 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368461019 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.368077112 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.368592524 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372311927 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.36899466 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.368256891 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.369748922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.369740608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372245989 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.368981761 seconds)
  done (took 28.693083356 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.369290254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.372393238 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.368967311 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.369735929 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.37309664 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.369844508 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.372516171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370492518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.367016105 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.370575733 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.369251234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.371122141 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.369612904 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.370370874 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.373770055 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.369552004 seconds)
  done (took 23.232182615 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.370965979 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.373239777 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.373873562 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.373831183 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.372351853 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.368314767 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.373557157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.370977576 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.371787058 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.374194904 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.372405723 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.374855146 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.37390997 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.373035927 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.371298065 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.373848687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.370548387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.370072469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.373230391 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.374055677 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.37143262 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.37111996 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.374759801 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.373876871 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.373209028 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.372297894 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.369948627 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.36845208 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.372717869 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.374148072 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.371476785 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.370011058 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.371878621 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.372713854 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.373609208 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.369629617 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.374492494 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.374030453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.37446126 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.374234514 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.375617061 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.372224119 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.371840399 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.369841124 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.369330584 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.374575841 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.372244672 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.370631006 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.368199527 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.369304844 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.374958159 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.376363622 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.37345015 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.377244715 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.375761627 seconds)
  done (took 76.795234962 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376533407 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372877828 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.373832089 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.37183339 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.374650823 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.373331443 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.376534537 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.373836981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374031374 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.372578551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.374744537 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.373805517 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.372830364 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376545755 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.371186319 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.376741481 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.372355925 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.373854589 seconds)
  done (took 26.03985551 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.376156607 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.374839298 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.377044506 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.375581281 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.37459755 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.376830455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.373168146 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.376428497 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376226639 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.375647853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372963805 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.37642664 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374778672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.374921192 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.373453136 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370828592 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.379018244 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378662003 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.374776357 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.373555549 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.37930788 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.37745282 seconds)
  done (took 31.572237364 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.379124428 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.376782455 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.394993965 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.418687927 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.404392249 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.377916528 seconds)
  done (took 9.660307286 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376119309 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376209694 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375081034 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38014984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376072037 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376332238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376447296 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376335984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.373229205 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376596904 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374721174 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37943159 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378357869 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376736841 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379857888 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379708812 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376345652 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376762341 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376931222 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379769144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.372081729 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379598357 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.376522775 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376619477 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377515722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377181402 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379070339 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376531275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37711491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380822893 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379469838 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377644333 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381210502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376675075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379928363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379210836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377979228 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38036507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380861306 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377310596 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379598402 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381338945 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380436695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378916035 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380351093 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378597233 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378764846 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377584634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379913406 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378264635 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379648703 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377505406 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38154819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382256074 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381159545 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381631308 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378592664 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378728501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380304083 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.37589511 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378157398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381151868 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378368463 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379148686 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381081258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378836567 seconds)
  done (took 92.285989097 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379100475 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379061758 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379816211 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380513556 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379246178 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378505567 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380079918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380154085 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378604521 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378840632 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382132125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380085948 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379694537 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380387487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381223817 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379610418 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379269843 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380113008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381037641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384588351 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.376891066 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379430181 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380405323 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379471493 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380437352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382441437 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379371401 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380351648 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379483138 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380639299 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380100049 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380413659 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380064159 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379942577 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379806006 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38069501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380571007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38068749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.378877081 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382307643 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380732062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383950342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379867974 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380569208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381343462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381224658 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380659774 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380522527 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380962382 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381797079 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381811601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382074835 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380975788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381695454 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382053437 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381477832 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382793737 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38121566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382198381 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3855932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382336757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383706028 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383124633 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381987466 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382075369 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383190108 seconds)
  done (took 92.449538632 seconds)
done (took 1874.444026864 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.464509538 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.451820249 seconds)
  done (took 14.232002675 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547537582 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.498967374 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.383012549 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.406168452 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.383479192 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.379077764 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.383871941 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.383102188 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.384783973 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.383987861 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.383759633 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.572592333 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.377892231 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.382028083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.385133801 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.477320741 seconds)
  done (took 44.036761322 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.421315214 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.390102813 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.507425232 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.403617259 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.421233951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.573094375 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.437976742 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.389386258 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.549125713 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.434954319 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.872468424 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.420556531 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.390002654 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.446238816 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.405892332 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.574021114 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.633488138 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.874960691 seconds)
  done (took 31.464051363 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.795784789 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.416282068 seconds)
  done (took 9.531468454 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.410360264 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.380203508 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.405028911 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.383107109 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.385097238 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.437519928 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.460169567 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.462149427 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.402215942 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.442441578 seconds)
  done (took 65.49495399 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.407310694 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.390596146 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.391195047 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.388390231 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.380065052 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.395643009 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.389754703 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.382881243 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.653638877 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.504282804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406687061 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.396462733 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.389748409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.390922445 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.386388396 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.42314525 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.567368861 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.386505379 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.386317131 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.39368696 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.390142788 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.492090927 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.427261556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.387736747 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.504931773 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.677152825 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.39229572 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.394220104 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.548976569 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.386845463 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.38989086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.389574874 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.392060139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.946457097 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.889490512 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.395540263 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.408492261 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.398778491 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.387176581 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.516064771 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.389548752 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.395509533 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.383561873 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.873871895 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.540534179 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.496310862 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.534201858 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.393981238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.392164551 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.449545294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.390595188 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.392756672 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.417784873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.132931125 seconds)
  done (took 113.631357771 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.422608017 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.872484624 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553202095 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.40057387 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.891122932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833149642 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3851951 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.643449056 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.420909279 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.849968085 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.665628076 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.729663422 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384385104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.38750443 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.383121504 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382960652 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.643181355 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.680945234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.385635675 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.380711598 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.43648852 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.884288698 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.61089181 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.456062275 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.422546857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827252992 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.610609837 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.730748363 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.388351296 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.382579595 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.672830536 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.396485196 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.385511727 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.38287379 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.657028034 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.717449216 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700620718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.386927722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.427825304 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.386920006 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.412988366 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824488105 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.708661238 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.62626698 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.750578626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841041217 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.386659248 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.386302314 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.388478523 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593179079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.631873056 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.876120691 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.615732928 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.399607474 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.642963438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386982541 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.448613398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.856345615 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.716760163 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.726495473 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.433281118 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384141992 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384916751 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.918850965 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.391391036 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712031127 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.577599658 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.387297318 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714069951 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.715666825 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.716800579 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854662479 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.428583125 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.410522556 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.440535253 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.890970433 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.670132875 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854737974 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.404085333 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.386389991 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.698644465 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.391241821 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.667885887 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.934043065 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.8701502 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.440391336 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.414625315 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.388344128 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.854964984 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.852136482 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.636114308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.75470597 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.667727321 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.454593212 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.388385517 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.387693685 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.399720301 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.625202556 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.401253127 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.752158127 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.851418386 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.165135036 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.434127095 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.923423084 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.629361696 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.40162961 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.391828082 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.3891432 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.608862316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.461054618 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.405884469 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.390277193 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.856013855 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.259403303 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.689373705 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.095746288 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.670957192 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.391207788 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.875083277 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.392334304 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.855442765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.438723831 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.919382522 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.657236245 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.445319537 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.612846758 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.757313225 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.403540845 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.872368549 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.920562091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.617747162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.867685822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.151138029 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.391965593 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.901495629 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.410910275 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.421459777 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.574256934 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.410984784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.652091903 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.411079891 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.88044818 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.427867344 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.666387957 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.501212219 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.888421011 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.448317393 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.672941957 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.433898632 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535130092 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.409447513 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.43008861 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589116748 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.506448494 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.391979981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.93691683 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.390813909 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553067677 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.928575947 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.428833525 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.682068898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.393240235 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.397687765 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.707350231 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.432572683 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.068459285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.392338263 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.668499429 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.35894846 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.849425739 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.391278921 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.923857939 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.615118453 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.409064085 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.39290038 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.195307035 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.391184124 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.55225597 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.567107577 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.872958408 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.394231783 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833577215 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394780347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.629086803 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.407112548 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.39510426 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.745914516 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.44399962 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.396035204 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.425316177 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.394898532 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.392625176 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841207588 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.434344884 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.115467718 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.547035079 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878099557 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.704743454 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.879810677 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.454183025 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.410975316 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877393412 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.451360606 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.679433386 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.395512277 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.432189145 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.858087688 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.394000475 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.88924988 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.903488734 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.418166684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.659827994 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.394857401 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.447353168 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.392671556 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.640867406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.727017044 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.396652199 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.393851908 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.616378578 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.63511671 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613349529 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.411589461 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.39563183 seconds)
  done (took 862.767734583 seconds)
done (took 1142.474842695 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.39529946 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.39233873 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.380647674 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.394009255 seconds)
  done (took 26.896368127 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.407183894 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.401486917 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.402007337 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.401676377 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.402167945 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.402865723 seconds)
  done (took 9.750356661 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.467003111 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.396025318 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.397504871 seconds)
  done (took 19.595138108 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.616848358 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.597344752 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.753475823 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.43450391 seconds)
  done (took 10.736388042 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.404568486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.402454079 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.403818391 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.40623084 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.409048857 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.40938735 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.40576973 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.40567037 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.407968662 seconds)
  done (took 13.988987187 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.05927984 seconds)
done (took 87.359732693 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.479215849 seconds)
    (2/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.100097829 seconds)
    (3/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.396558587 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.411162008 seconds)
    (5/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.416478399 seconds)
    (6/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.60348167 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.473729009 seconds)
    (8/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.594419788 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.653441833 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.274338145 seconds)
    (11/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.186981184 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.727757965 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.667986887 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.438261773 seconds)
    (15/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.413044541 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.422584137 seconds)
    (17/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.410389078 seconds)
    (18/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.599685893 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.620434896 seconds)
    (20/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.87185707 seconds)
    (21/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.660532772 seconds)
    (22/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530982717 seconds)
    (23/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.381709128 seconds)
    (24/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.746711755 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.442822512 seconds)
    (26/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.272354335 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.695343273 seconds)
    (28/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.485227187 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.733010395 seconds)
    (30/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.745781911 seconds)
    (31/309) benchmarking ("sort", Int8, false)...
    done (took 4.441969204 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20731712 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.422319817 seconds)
    (34/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.839956441 seconds)
    (35/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.396820963 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.499461394 seconds)
    (37/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.089778596 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.097102249 seconds)
    (39/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.460262666 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.395297156 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.719029597 seconds)
    (42/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.166496865 seconds)
    (43/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.674649722 seconds)
    (44/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.604589952 seconds)
    (45/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.39948965 seconds)
    (46/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.750456702 seconds)
    (47/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.39914789 seconds)
    (48/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.68130552 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.957549274 seconds)
    (50/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.049621235 seconds)
    (51/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.711163957 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.512193887 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.693411477 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.658845348 seconds)
    (55/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.400573886 seconds)
    (56/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.953529364 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.40038036 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.392044024 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.831283187 seconds)
    (60/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.760857371 seconds)
    (61/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.230119431 seconds)
    (62/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.618231942 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.449250188 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.414065609 seconds)
    (65/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.392455321 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.784470539 seconds)
    (67/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.131288871 seconds)
    (68/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.126077939 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.043593461 seconds)
    (70/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.550988871 seconds)
    (71/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.515455633 seconds)
    (72/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.499575371 seconds)
    (73/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.208199309 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.412910324 seconds)
    (75/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.575474047 seconds)
    (76/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.421064991 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.397092392 seconds)
    (78/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.36091695 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.596682628 seconds)
    (80/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.379382968 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.049389383 seconds)
    (82/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.773780937 seconds)
    (83/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.377587152 seconds)
    (84/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182099361 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.541009178 seconds)
    (86/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.606977111 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.265115044 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.196759473 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.392507112 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.945441876 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763181288 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.461478885 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.275797165 seconds)
    (94/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.400824836 seconds)
    (95/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.39970432 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.51354278 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.140378406 seconds)
    (98/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.915368776 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.415507862 seconds)
    (100/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.402254978 seconds)
    (101/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.208051694 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.523791233 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.407623873 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.438756367 seconds)
    (105/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.377182456 seconds)
    (106/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.508038995 seconds)
    (107/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.498805529 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.442110037 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.50343056 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.515619796 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.759437991 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.40804885 seconds)
    (113/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.747739383 seconds)
    (114/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.679960106 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.418788542 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.607370889 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.258228587 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.392323393 seconds)
    (119/309) benchmarking ("sort", BigInt, false)...
    done (took 6.393064651 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.395261196 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.706633728 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.449078134 seconds)
    (123/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.436994888 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.89419317 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.417823246 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.673466207 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.475502316 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.822667734 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.104330867 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.656279963 seconds)
    (131/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.673098417 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.413410316 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.484051913 seconds)
    (134/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.512662977 seconds)
    (135/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.428395229 seconds)
    (136/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.571974693 seconds)
    (137/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.498434539 seconds)
    (138/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.959696732 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.468465819 seconds)
    (140/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.39341203 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.434308392 seconds)
    (142/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.058719158 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.744890058 seconds)
    (144/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.447790979 seconds)
    (145/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.418468635 seconds)
    (146/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131169397 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.059553619 seconds)
    (148/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.431299511 seconds)
    (149/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.688832358 seconds)
    (150/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.408527896 seconds)
    (151/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.39401547 seconds)
    (152/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.422627371 seconds)
    (153/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.554066652 seconds)
    (154/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.399552175 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.754028427 seconds)
    (156/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.961452661 seconds)
    (157/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.415092638 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.41779739 seconds)
    (159/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.904655827 seconds)
    (160/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.709542344 seconds)
    (161/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.382901811 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.203571137 seconds)
    (163/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.204291866 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.596993458 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.964052281 seconds)
    (166/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.384600615 seconds)
    (167/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.426282948 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.740938365 seconds)
    (169/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.506396619 seconds)
    (170/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.45264224 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.400394566 seconds)
    (172/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.38048653 seconds)
    (173/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.443844343 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.398047003 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.423033315 seconds)
    (176/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.684843546 seconds)
    (177/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.406142753 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.770573163 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.990149726 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.483318446 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.601108424 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.11677414 seconds)
    (183/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.868486157 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.505461075 seconds)
    (185/309) benchmarking ("sort", Float32, false)...
    done (took 5.396946804 seconds)
    (186/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.693626813 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.392497486 seconds)
    (188/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.405927752 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.113540228 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.434929908 seconds)
    (191/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.469503376 seconds)
    (192/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.005162609 seconds)
    (193/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.611609477 seconds)
    (194/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.831130138 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.515266141 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.619581768 seconds)
    (197/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.408607245 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.448718068 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.873415915 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.48029705 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.416189537 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.824346551 seconds)
    (203/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.742157674 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.392603981 seconds)
    (205/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.460043826 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.446525998 seconds)
    (207/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.531564331 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.019414047 seconds)
    (209/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.503642863 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.455560281 seconds)
    (211/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.465890036 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.757481902 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.710745351 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.809534046 seconds)
    (215/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.420753995 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.405792381 seconds)
    (217/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.604681834 seconds)
    (218/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.127847234 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.911217343 seconds)
    (220/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.490631822 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.026976467 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.027608374 seconds)
    (223/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.125931843 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.640996333 seconds)
    (225/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.40854454 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.868938337 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.826108575 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.951199259 seconds)
    (229/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.935673912 seconds)
    (230/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.259432913 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.470064587 seconds)
    (232/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.779599995 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.511473044 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.427828706 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.411740767 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.688963789 seconds)
    (237/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.403732224 seconds)
    (238/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.466462102 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.459194636 seconds)
    (240/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.392127891 seconds)
    (241/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.459815389 seconds)
    (242/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.393332007 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.553992911 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.451245703 seconds)
    (245/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.397336991 seconds)
    (246/309) benchmarking ("sort", Float64, false)...
    done (took 5.642304382 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.242631828 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.943817313 seconds)
    (249/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.408020047 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.24910221 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.456330139 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.871298085 seconds)
    (253/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.725843237 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.794263165 seconds)
    (255/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.622412183 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.414126848 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.502205873 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.019443297 seconds)
    (259/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.536983242 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.602027023 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.254503092 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.941909198 seconds)
    (263/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.921815054 seconds)
    (264/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.402555878 seconds)
    (265/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.669347548 seconds)
    (266/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.121149373 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.445117264 seconds)
    (268/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.587989537 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.924734344 seconds)
    (270/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.216077618 seconds)
    (271/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.420369725 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.793979191 seconds)
    (273/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.874894778 seconds)
    (274/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.502766712 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.796979391 seconds)
    (276/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.42912741 seconds)
    (277/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223910489 seconds)
    (278/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.493611481 seconds)
    (279/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.400727996 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.52665739 seconds)
    (281/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.40353174 seconds)
    (282/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.920388422 seconds)
    (283/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.592235453 seconds)
    (284/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.466712386 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.227965521 seconds)
    (286/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.825768873 seconds)
    (287/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.002210628 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.486774965 seconds)
    (289/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.958851969 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.486870567 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.487987909 seconds)
    (292/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.401804419 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.486025944 seconds)
    (294/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.390296088 seconds)
    (295/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.528386981 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.699343258 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.568816238 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.433125762 seconds)
    (299/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.613526844 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.417096893 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.444197888 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.398394918 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.402350613 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.862791565 seconds)
    (305/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.824506417 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.421418479 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.42823024 seconds)
    (308/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.430592755 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.389792172 seconds)
  done (took 941.642340257 seconds)
done (took 942.97797889 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.434263078 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433064712 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.416115048 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.437036792 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.527131586 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.449469823 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.423991441 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.41590408 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.465014674 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.467107365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.41745002 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.449810412 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.419692638 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.414282748 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.416304808 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430086027 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.379279231 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.422457085 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.430330525 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.425054051 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.431707544 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.414922944 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.465123596 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.448806839 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.418108058 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.417365384 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.419735751 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.438690199 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.526143703 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.419833161 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.416118688 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.427017071 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.376587879 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.419825076 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.412549547 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.432336178 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.427774301 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.427220028 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.417136069 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.449151721 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.758446152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.421773856 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.42069607 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.419327884 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.418202815 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.419598536 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.417351423 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.42389382 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432757558 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431091154 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.761639634 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.436063082 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.42009783 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.417815599 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.430386841 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.418310141 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.421927353 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.434341438 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.440623477 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436423231 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.376511439 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.425635311 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.421496755 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.436592207 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.426799094 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.809373592 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.41962802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.425781138 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.764333272 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.426394715 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.776192014 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428851869 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.421399991 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.43380329 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.451613686 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.38438275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.417103824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.420609696 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.426390763 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.419869008 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.429162351 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432680976 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.424754001 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.419975667 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436585375 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.453762199 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.428349218 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.421820341 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.431350755 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.441404926 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.429695363 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.434597036 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.423454128 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.415662517 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.430634362 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.424611723 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.425361695 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.425608246 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.428548498 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.433050855 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.757284368 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440175685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.418509076 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.416818311 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.41980196 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.436465445 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.765323314 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.425122272 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.442714015 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.468559562 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.421583304 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.383172768 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.427671243 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43577232 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.432279268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422481552 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.416407868 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.382647282 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.774704819 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.440159885 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.425381742 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.420272368 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.435701165 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.421926816 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.420479281 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.39040655 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.42671522 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.435827079 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.544922547 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.431837124 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.452644322 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.421365881 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.425022907 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.455980188 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.440332138 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.455144976 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.425065416 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43928373 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.437006509 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.415755867 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.432460074 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.43122281 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.423849004 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.431768111 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.41907415 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.454102179 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43282291 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438023301 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.44204191 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.54525118 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.419412953 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.381404082 seconds)
done (took 237.414934265 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.48401821 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.419364286 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.526621858 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.419725037 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.521463815 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.522615825 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.419535803 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.417321806 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.415102014 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.802740979 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.419854561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.418201034 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.414626815 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.422245046 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.501840159 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.422527433 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.416553075 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.762913818 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.422390843 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.492917359 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.415341297 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.418513876 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.422418585 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.806416534 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.418284667 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.41850858 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.493804596 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.420625008 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.769193056 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.419927439 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.419153724 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.771081171 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.512436824 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.440360431 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.433168932 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.430649089 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.520159148 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.439757701 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.502048307 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506361178 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.528010553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.46229615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.417573954 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.424435494 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.427714372 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.425660108 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.420928723 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.450541742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.420798755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.42137066 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.765734311 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.433064696 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.422001943 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.421732269 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.421702145 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.454559267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.4223239 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.424110641 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.515038055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.424686309 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.48803514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.810545929 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.804306634 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.425031075 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.423247945 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.423260051 seconds)
  done (took 154.448698019 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.492763529 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4995366 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.53447545 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.429087219 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.474626405 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.541013295 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.424838071 seconds)
  done (took 11.753724311 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.43250173 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425574826 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476288014 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475681499 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.426764399 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.576062902 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426347507 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.433633534 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.423769401 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.478626247 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427412704 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.427220331 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.432498177 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.422087664 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.474437388 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.437625622 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.541968362 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.428584575 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.427174731 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.58205764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.424371902 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.433113893 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.479013819 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438188576 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429711021 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.434016856 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.013090652 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.428541844 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424125762 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.426675338 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.424162096 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.467171049 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427269728 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.425667674 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424981655 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544580865 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.42736814 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.424179398 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.426857443 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.423620918 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.427305094 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.426650626 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.427747132 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.424600698 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.426920691 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.45200389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.42808112 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.427260327 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.427866856 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.428765407 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.476638891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.42837166 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.425365594 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.4233863 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.482163489 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.434650054 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.430218966 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.425584771 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.427034491 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.42584964 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.585184926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.476615589 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.427704029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474967023 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425445904 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429030431 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.423865616 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.426691924 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.484324088 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.426833598 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.485664561 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.424542057 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.586641841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453661366 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.428464364 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.432037816 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.431962225 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429331046 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.426373007 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.432990783 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.426386222 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.430536462 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.432636245 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.425748421 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.427233291 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53633968 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.53626069 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.424882856 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.440621318 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.437436956 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.426887703 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.481732289 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.429615863 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.425836126 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48167229 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.54614024 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.484113166 seconds)
  done (took 162.466925023 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.435012742 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.438731662 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.431924353 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.44607133 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.430836385 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.430643507 seconds)
  done (took 9.973578843 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.433344522 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.432210522 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.430515448 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.428845076 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.429874655 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.432110514 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.432282502 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.430555013 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.433334448 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.430018017 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.431825709 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.433092045 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.433459348 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.431972428 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.433254161 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.431460432 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.430348666 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.429278929 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.432428318 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431823587 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.524414189 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.42940349 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.432200796 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.433699966 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.437787318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.432329578 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.43667568 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.42884692 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.431745646 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.435073535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.435654981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.431947914 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.430520662 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.438486654 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.436541707 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.431636303 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436396683 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.433780174 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.427413547 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.433012628 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.434004295 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.433448396 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.859849555 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.432755229 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.435256381 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.435197217 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.439861933 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.441772707 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.433514792 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.436084063 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.436638372 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.433090933 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.433052172 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.43589128 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.437412221 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.436161094 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.44019036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.432818203 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.433897096 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.434524959 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.434574537 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.434416202 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.43589591 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.438633714 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.439580452 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.434121002 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.433776407 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.438419752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.435274714 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.43177057 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.436882352 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.428988135 seconds)
  done (took 106.110992993 seconds)
done (took 446.10334834 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.935045833 seconds)
  done (took 8.29937115 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.531147438 seconds)
  done (took 7.894565904 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.39809747 seconds)
  done (took 20.764877733 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.427022836 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.440680002 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.442288984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.447652695 seconds)
  done (took 27.119303442 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.690326698 seconds)
  done (took 8.052323457 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.428217452 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.420950692 seconds)
  done (took 14.21207104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.550538104 seconds)
  done (took 7.913074909 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.888600335 seconds)
  done (took 8.25680079 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.437039248 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.442506012 seconds)
  done (took 14.511259342 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.407289755 seconds)
  done (took 7.770130488 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.581833915 seconds)
  done (took 8.943004658 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.419331528 seconds)
  done (took 7.781086855 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.49910061 seconds)
  done (took 7.860877111 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.937895404 seconds)
  done (took 9.300085657 seconds)
done (took 160.042522517 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.420600625 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.421273895 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.421614064 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.425491861 seconds)
  done (took 27.050439722 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.482610174 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.4614129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.464144827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.473845386 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.464308844 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.462469413 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.454492448 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.454917709 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.473752035 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.465246069 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.463976904 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.465315774 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.462117219 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.454296945 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.464327275 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.464567561 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.473174323 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.464718708 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.455005914 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.465972386 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.430001014 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.474105138 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.466434275 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.430496427 seconds)
  done (took 36.454807811 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.627225385 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.501016047 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.584199648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.482084986 seconds)
  done (took 7.557622813 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.481538178 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.482670097 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494256986 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.533785511 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.566041708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.492918904 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.457969571 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.451937277 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.437078726 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.484364949 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.559991254 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.500041627 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571137252 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.431051811 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.617255151 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.430956357 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.431017011 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.482732818 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.534426832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.548517193 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.43173019 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.482641813 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.486031829 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.500600202 seconds)
  done (took 37.254923436 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.430083454 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.439121983 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.437228973 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.430660088 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.430769893 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.430300046 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.43736389 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.431087134 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.452170893 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.431524917 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.429511888 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.430932127 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.430919277 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.430878085 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.43100218 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.444032099 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.444510864 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.431142319 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.433703601 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.437802203 seconds)
  done (took 30.058967915 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.425840191 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.282213941 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.777686408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.681622729 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.426258436 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.424675904 seconds)
  done (took 28.383685675 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.498024062 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.622823017 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.435785349 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.76995841 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.849217626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.437229814 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.4333737 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.654797739 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946007359 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954465591 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.490330402 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.487897177 seconds)
  done (took 20.945819934 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.432581255 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.429692191 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.435168919 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.445688842 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.485061792 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.440665269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.440277321 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.425578086 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.487446447 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.492008129 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.439468247 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.486449822 seconds)
  done (took 38.807165627 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515048222 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.47133411 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293808879 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266455735 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.807053744 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.639159575 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.250263104 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.896285274 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.434609744 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701203849 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440764982 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521053769 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.685693125 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430677616 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431930251 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39932881 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659729534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915876423 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431617344 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.296027388 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457702429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.440474133 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.475497682 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.460136365 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.641534385 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.561920956 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.689877867 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428885469 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.697810721 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444055836 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439510258 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.429056186 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.703093504 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077792221 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523375666 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439390534 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.201417183 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141922204 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.427593121 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.384647575 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.239227636 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434466341 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440688945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43068401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.36474126 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441887417 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.906535167 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.440154597 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.14190683 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430289818 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441701466 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526019487 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.434751929 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.248485609 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522977901 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43153219 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.428277996 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437712064 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00143483 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803164185 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.442915747 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.368734641 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.53752634 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.392131769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07539454 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.534808468 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.435193743 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.434837833 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365789432 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.366387205 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451624766 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.780350244 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.452256573 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.081657081 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152991948 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.431663273 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379589299 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977234579 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439810424 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.369095285 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659246092 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43153696 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366861719 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.374753658 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.366717785 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110650529 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442928072 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.79241213 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441914924 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897925271 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.446549144 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449746305 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455872811 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.656498435 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.31615327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432351448 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.296317883 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594321595 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453880551 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.903745493 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369780858 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.437209881 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689672877 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.643880407 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43489137 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.414281274 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654124407 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435812475 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.451876866 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438326518 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447279024 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.042985029 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446452328 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.816238778 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453728017 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.433694189 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152074619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436417618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.538530628 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.439636869 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675553649 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.183055044 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437199539 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516147089 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436526427 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.433788093 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.409899494 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951845332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434243007 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.437578801 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434246777 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.44670554 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.435244519 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386262759 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.433203425 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450640834 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.439285985 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.659488535 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441135242 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713797684 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.368794973 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.764147444 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.524709302 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.657418181 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.612884314 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.436633579 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696951048 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439276391 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441278958 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448723296 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45424851 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534181494 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457366649 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.438288679 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.695648266 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.440199401 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.440003451 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.424168787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440075763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441807932 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.441629549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343263831 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047301023 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414332182 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443687393 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325945346 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.449695404 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500733071 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.442810677 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.446035377 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.164147535 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.317214635 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.445282036 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.439237233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665351491 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447143867 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.410728074 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520381942 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.65020251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051047579 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451748539 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.37229732 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.148193164 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.129524587 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436091377 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.373048753 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437147883 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446836749 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448740429 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.665461829 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.053791823 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440707495 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.334261593 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.446491282 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.448794518 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.443751943 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43707888 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.1404018 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.832708961 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444717705 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.45300382 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581708776 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.452666994 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.373198453 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.441825278 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443938692 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438374776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436786981 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471194484 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.340211471 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929849493 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701415956 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.204894058 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452033966 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.514575583 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.472820857 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.437827709 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343017196 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463378915 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.455920551 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450243846 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.449667615 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.391805253 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.102021602 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006552886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180147852 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993701541 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.442823086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.449306752 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.441513301 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913650317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.37636289 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.997115837 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62161198 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.914337729 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385860544 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655233344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.615845073 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172761142 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452526944 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668180709 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435363017 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.351041086 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473796118 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652527894 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476136049 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.442769641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.371052894 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.726757086 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709700412 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30265242 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522067158 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910784593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356402218 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.464477714 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.440362534 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.754611036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616381385 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.157005423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.613617842 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442130391 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.44276207 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933343251 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448313957 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.668024177 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089131376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.446495982 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.659375151 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379641816 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.451957506 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.451793035 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.442852742 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.661303649 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.443930301 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.698072738 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453084491 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.376567269 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44559938 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001531739 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.300147617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.44883832 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442062021 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161803452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445014538 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718544031 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.44707801 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.136986972 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451875018 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.37778756 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373878093 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.136787577 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449343805 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419111065 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933534637 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.533896888 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.548683575 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46331047 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495787613 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69982002 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.456650957 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057756007 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673446415 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.314225697 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468135522 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.543475881 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393099272 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.452204294 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.442837677 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679986555 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353364771 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.668414461 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.325994662 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.354342522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.441786981 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657668834 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443705997 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443458254 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684761111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.155232121 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.443418556 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1744839 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467917914 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.44749115 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363930016 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551416574 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451324904 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522493409 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452019135 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.455710719 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.455208136 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.61327919 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444441126 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46765083 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.457427207 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536016938 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.862172403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.148367159 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.450120087 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063078996 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.191823944 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063200835 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45998901 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442798957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445760134 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380317493 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593835388 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.669639288 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720090678 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575536153 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.592808874 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469289934 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392016726 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472951554 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65939268 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721401026 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341497794 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451849661 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.46084892 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.449823556 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458205331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.659202648 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940480615 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998214192 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56724205 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453324836 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.921750008 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.724332641 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446380794 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447309157 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038337771 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.456634492 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.772614801 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.453707152 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448961322 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596560834 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457562805 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107564234 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.459685568 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.607062878 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.220918467 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.454423269 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.707010049 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.885512858 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.459170862 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064414206 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.204299422 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712688642 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515019867 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457946526 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.560858737 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596566418 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.448410741 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451720422 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448355786 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664217317 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.158898683 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.459171206 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069637295 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.714363201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.446426165 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.449005371 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473144972 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.459235985 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.674932895 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.14351497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.675474782 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.458740051 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45620267 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.267270584 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070324758 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46334269 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382995544 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.453383757 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688077494 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.685490543 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470036408 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.902917658 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.160958735 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003569767 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.422949625 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471822654 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454759559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207668459 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069885142 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.159438108 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944668871 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017999175 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460980795 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.726713611 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.45451862 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.45948464 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728095157 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.453966976 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450145917 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.46466955 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0667069 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193086549 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.455239895 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.386964188 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.389496411 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.794922239 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16426597 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389348199 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454198987 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.639611421 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.452396199 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.580264028 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.463022306 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.452615482 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45306913 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.187282199 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.734026888 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.456595543 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.445581553 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.441808161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457018632 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462532516 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725042459 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459060098 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.128282168 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.804301822 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.709698182 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4584115 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.43802748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.454806243 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451829543 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.440738334 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.648733533 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.682246505 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008728793 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.460985249 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.464631264 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456424874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.669448795 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664055183 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452465154 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.487114971 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462973871 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470674171 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.365348426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.955298521 seconds)
  done (took 1643.857759362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.49031147 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.470033966 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.459583525 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.511617523 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.467227733 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.542937948 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.517037345 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.566183995 seconds)
  done (took 53.416561755 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.466635552 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.690590479 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.48355271 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.454641359 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.465857788 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.466914205 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.887889318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.456898412 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.465462026 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.464253967 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.460799753 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.457457465 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.095270922 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.466364379 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.454405804 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.451531693 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.464632077 seconds)
  done (took 67.551362668 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.460842984 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.897260245 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.546034739 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.454984092 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.389481813 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.454332458 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.061807199 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.521734652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.466674209 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.686559462 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.098493422 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.482091958 seconds)
  done (took 85.914035909 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.46200086 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.461612862 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.461696641 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.462959054 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.461886441 seconds)
  done (took 8.703081529 seconds)
done (took 2087.318736757 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.710216044 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.146037835 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.100884309 seconds)
  done (took 5.640982808 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.60608417 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.653459091 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.775671882 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.780299049 seconds)
  done (took 8.209907602 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.741919352 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.85276563 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.668111139 seconds)
  done (took 6.657349377 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.806243143 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.461986006 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.536378712 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.457935279 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.459973004 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.460864674 seconds)
  done (took 20.776792986 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.462697032 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.465197494 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.463847627 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.464404748 seconds)
  done (took 7.250626281 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.443877984 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.21400957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.443170902 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.458494392 seconds)
  done (took 18.956444065 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.207889245 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.227385794 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.208389505 seconds)
  done (took 8.040929332 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.461771471 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.30266918 seconds)
  done (took 10.159592778 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.779798943 seconds)
  done (took 3.176258573 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.592912523 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.727543615 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.555069267 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.428111667 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.595152575 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.117956892 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.016525905 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.626948611 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.429908611 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.529675309 seconds)
  done (took 29.015630646 seconds)
done (took 131.793574294 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.134200392 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.700319506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.664634075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.138653961 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.695884235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.666580063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.672662536 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.117052997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.665558938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.603720605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.104991695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.689779833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.835723289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.702006319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.837389371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.826671278 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.696821569 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.170259594 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.791551324 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.02788998 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.673230889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.74371027 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.938530437 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.819094206 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.694368789 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.615914861 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.322718862 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.831251533 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.96360493 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.397322551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.618711235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.200937679 seconds)
  done (took 194.959998515 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.463483812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.469059018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.478934255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.459453534 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.460338619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.472504889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.469597934 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.460592495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.47575686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.464221149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.461494382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463277968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.465526486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.466279187 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.460619844 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.467760971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.463698327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.469784125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.462906862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.474798098 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.462972274 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.475784614 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.462183867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.463343335 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.467214504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.465894679 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.462248722 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.464120702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.461714092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.463201748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466680044 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465825052 seconds)
  done (took 208.311814985 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.470765372 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.465048211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.466210021 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.463240366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.461580957 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.477877096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.466689271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.46915687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.46324068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.466132915 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.462944709 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.476111098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.465528404 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.46197095 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.477890926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.462359323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.466390397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.471732517 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.463522126 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.464812174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.466181367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.466368585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.46295423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.464050741 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.465098209 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.463775632 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.469171109 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.46437369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.466027268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.464641336 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466219611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.466109015 seconds)
  done (took 208.328228861 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.65871125 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.472759657 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.470355628 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.401625381 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.469990422 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.470155679 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.470065379 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.669966528 seconds)
  done (took 15.488880567 seconds)
done (took 628.486482464 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.761032489 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.481936126 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.669785139 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.493154801 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.25533293 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.494721822 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.495591058 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653316136 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.970899758 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.644450492 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.686989997 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.491723695 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.8482392 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.493853609 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.737062515 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.5871129 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.325727465 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.439531909 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.798140705 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.034404105 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.740767646 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.992452734 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.659617216 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.993071853 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.833076216 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021171014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.239654578 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.328672931 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.493963095 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.8014559 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.1407169 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.464014145 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.553389608 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.532538645 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.58534107 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570002181 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.466967632 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.531671121 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.675795553 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.758297521 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.038338444 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.771772326 seconds)
  done (took 98.954124623 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.464262005 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.463530658 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.462129218 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.4637432 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.464082772 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.463279275 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.463191512 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.462666918 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.464284427 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.464831516 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.461093551 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.463788147 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.46358053 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.464729788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.463022988 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.463203667 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.463891782 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.464999282 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.463091601 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.464348177 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.465454166 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.463520538 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.464587817 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.463074828 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.464970727 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.463083801 seconds)
  done (took 39.463653508 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.476232208 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707006325 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.885630726 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.486158069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.477036992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.480164779 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.550767936 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.481425055 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.479390603 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.47788801 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625965986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.480604987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.508956914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.889511941 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.479663195 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.47726978 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.478763433 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.477777122 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.715614063 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.487467474 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.570356068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.479798964 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.548763397 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.490848068 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.49517842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.474845285 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.48107694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.002144749 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.482273017 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.628654909 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.242374307 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.554085961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.971912086 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.901836796 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.248835139 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.480366161 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.478290411 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632164078 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.48041277 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.480354046 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.554648282 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.480223709 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.892459623 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.104454026 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.497158174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.47787264 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.026067799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.637153592 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.714601947 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.491015556 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.913630318 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.485090523 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.478813439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.479722378 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712011109 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.487228132 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.476094311 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.050585652 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.503683025 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.555147842 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.482482821 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.480089605 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.723958333 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.477011233 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.708443292 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.479736605 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.484169903 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.47799176 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.891835472 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.48505605 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.120076633 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.495651535 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.476778955 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.630535236 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.710090193 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.052551322 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.481302809 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.726211221 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982142205 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.550922972 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.481785833 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.991838299 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.555216461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.482349726 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.479821836 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.479458124 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.478172919 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.522354949 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.5509704 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.046853024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.114127912 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.0665162 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.570339482 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.492103096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.479353683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.048937708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.495207398 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.478676557 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.886709238 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126752462 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.496876259 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.485911741 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.105565687 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.49832602 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.554513912 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.486321601 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.89896558 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.485094352 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.524355816 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.477730004 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.487593749 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.484230065 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.554304316 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.484273684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.480450105 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.086445163 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.655446223 seconds)
  done (took 192.667608641 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.476348003 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.474024136 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.475405698 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.472772314 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.473562666 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.4797833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.471787733 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.473763567 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.478796796 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.473789925 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.474053925 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.475729134 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.476691447 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.479217878 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.481833134 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.480235663 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.086518196 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.479323052 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.472835956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.475021403 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.265818319 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.480511838 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.475644419 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.476982196 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.474880534 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.479106743 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.475315484 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.477352932 seconds)
  done (took 156.149781576 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.483182884 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.031187498 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.48658595 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.610037694 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.50363538 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479718506 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608014504 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.539836561 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.486178918 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.478279159 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.480616245 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.77194647 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.485817829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.969872528 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.664722756 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.612577366 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.973344264 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.483714779 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.48083705 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.481825476 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.609366881 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.490086377 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.772604771 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.032007325 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.485930155 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023668178 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.473192415 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.482975601 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.484270561 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.032251026 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.484149802 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.775977389 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.557185636 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.542676634 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.039541031 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.982292149 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.985208641 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.625846244 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.485640454 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480376078 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.480758956 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.472143063 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031551948 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.485910627 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.483532694 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020516846 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.500505609 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.485737165 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.491440631 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.483285248 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.542843701 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.542840713 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.782311377 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.035801563 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.558750319 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.50687742 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.610422605 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.860807649 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.489682099 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.98198519 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.475814166 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037709478 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.489831681 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.472984036 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.484708809 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.489389958 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.627857486 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.612565997 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.984513158 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.489518924 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.982764295 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.630916652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.48610603 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.484712947 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.485928759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.033616431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.981438084 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.627037556 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.617541056 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.673695718 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.477882169 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.486155834 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.473809796 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561038241 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.486160705 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.037484728 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.986259239 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.489260583 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.485497806 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.487808618 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.485745596 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.654605357 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043179521 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.562363106 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979601432 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.800628655 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.786103301 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.489705341 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.541616793 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.488361292 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.785028672 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.491295608 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.542886476 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.929100255 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.788127605 seconds)
  done (took 174.729462457 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.720740183 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.638942332 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.575830848 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.595995362 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.009143892 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.069854353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.573835713 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.615963496 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.592049737 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.736775856 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.142785765 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.580070079 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.669759635 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.565264834 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.184232288 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.559344193 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.581583563 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.620821094 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.594325484 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.516521859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.06864651 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.770202142 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.633274492 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.420690256 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.58200942 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.220677008 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.221028731 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.995913342 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.652292811 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.597804367 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.998404575 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.617939917 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.209856452 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.108779067 seconds)
  done (took 68.661616959 seconds)
done (took 732.027025586 seconds)
SAVING RESULT...
DONE!
