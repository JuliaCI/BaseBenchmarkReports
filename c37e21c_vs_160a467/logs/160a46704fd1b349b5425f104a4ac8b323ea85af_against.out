cset: moving following pidspec: 32074
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.187406725 seconds)
loading group "string"... done (took 0.536192655 seconds)
loading group "linalg"... done (took 9.565972589 seconds)
loading group "parallel"... done (took 0.162685334 seconds)
loading group "find"... done (took 2.574293177 seconds)
loading group "tuple"... done (took 2.123042537 seconds)
loading group "dates"... done (took 1.397377232 seconds)
loading group "micro"... done (took 0.192446796 seconds)
loading group "io"... done (took 0.504520744 seconds)
loading group "scalar"... done (took 57.719970062 seconds)
loading group "sparse"... done (took 13.966946665 seconds)
loading group "broadcast"... done (took 1.341812483 seconds)
loading group "union"... done (took 10.34213942 seconds)
loading group "simd"... done (took 3.60292969 seconds)
loading group "random"... done (took 13.338278044 seconds)
loading group "problem"... done (took 2.223429568 seconds)
loading group "array"... done (took 23.705640831 seconds)
loading group "misc"... done (took 1.134747553 seconds)
loading group "sort"... done (took 3.793801618 seconds)
loading group "collection"... done (took 20.642981559 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.752186074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126688067 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203963761 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22528241 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.260502888 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170150908 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.166864616 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.164097158 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.63953079 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206838603 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141559456 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.388288694 seconds)
done (took 6.174018607 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.352883258 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.065006539 seconds)
    (2/2) benchmarking "String"...
    done (took 0.196760889 seconds)
  done (took 0.93286838 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.0832258 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.165689983 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112632638 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099604232 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098306265 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114770889 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099124025 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113557542 seconds)
  done (took 1.480209995 seconds)
done (took 3.522240047 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.490258714 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.89187975 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.499583468 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.191910606 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.31024721 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.369223646 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.277268803 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.232059692 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.096587759 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.090616285 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.201646368 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.425683791 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.431659563 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.93403575 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.074270165 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099815912 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.164360999 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.786979805 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.085313926 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127589701 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.504586405 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.221792867 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.121281635 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.11144131 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19111126 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132134118 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.144687552 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107955492 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.667295834 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135853632 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213217045 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.089348782 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.143807814 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.174734365 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.222987604 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.117054202 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678533453 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.207157563 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100655098 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105355138 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681124452 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.127282975 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.213808178 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110178088 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072882368 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.165777505 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118135802 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.08463554 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098778868 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106663179 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16392177 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.446075193 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.111105064 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.201277638 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.098557816 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.707607225 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102679607 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278963477 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.130010339 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.11001049 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.082380328 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.095639072 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162994955 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.10053477 seconds)
  done (took 20.43951123 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194250268 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.211690285 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101857143 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.150017667 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.147741282 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086899875 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.092924607 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.101881188 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118589798 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.200402362 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130074037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218984717 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.081254986 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113150731 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.188700976 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.239839877 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112352387 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.127566659 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095010572 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.116950635 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13173703 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100757418 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.11730544 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101365998 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.178661007 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209284786 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113522092 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127959269 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095565586 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102962266 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147883673 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151724724 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097334548 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094562629 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.195549583 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.1121855 seconds)
  done (took 5.602756054 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.240642653 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.108216675 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.250178554 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.19464494 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132766211 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.184972364 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.19740326 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304867444 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.25272474 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.219684009 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.167980322 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132316018 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101586766 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084181388 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.1071211 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085393894 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.084133276 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.845082144 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156889162 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167985922 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193851826 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116405303 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08677101 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366597394 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105889608 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089902928 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115608306 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068766304 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.225761434 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09679261 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.473760642 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087118049 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119849082 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134913122 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201992294 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127427693 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143067991 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099154621 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106171692 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.195166247 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120670076 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083580354 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083455699 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137945302 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138316476 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098012109 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125070891 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138125236 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091170763 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112498469 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.105376839 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.036171115 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197193498 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.166553914 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.107229597 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.278636868 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112891495 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101700547 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113827593 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.783773788 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.140334015 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.088082979 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09925004 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099841322 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084462186 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.47672681 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107438005 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.144686474 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.090763987 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.163035984 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099975681 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.120357989 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090008006 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104903776 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113682771 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090027238 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1017063 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.091858433 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.084939834 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.113041313 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116678397 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106900047 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.086511638 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152254657 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114064044 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.1103241 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129181084 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095307489 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.089321875 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133019071 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087900347 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.108906948 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206628993 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101061135 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.13260333 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090076713 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117073191 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.133897321 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.107363295 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.259384182 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088014624 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126467212 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10719337 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13117874 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102890781 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085668304 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105784647 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.085068381 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085514797 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165635534 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.091688758 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.086254517 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.109163138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.099384909 seconds)
  done (took 27.542585351 seconds)
done (took 54.256655462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.802910191 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080561052 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10125678 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083315329 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081877937 seconds)
  done (took 1.887801451 seconds)
done (took 2.612479546 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.187971035 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.268824149 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202980836 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.132305627 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153595763 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.172824723 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.155890494 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.171753906 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153058883 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.173721727 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171160481 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110599621 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194134085 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16949091 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.125637951 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.189228543 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.108506884 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152626127 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.109041955 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179488194 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.108282043 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.09111093 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0913822 seconds)
  done (took 4.312242473 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109363801 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104530558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.108171957 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125559948 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091266048 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106847309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125771666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111420906 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106233447 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118216759 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09147762 seconds)
  done (took 1.930126669 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.10497861 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101874945 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098126986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122076461 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091348668 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104027072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121258778 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112554461 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103847953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118981676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09136748 seconds)
  done (took 1.901892086 seconds)
done (took 8.867688066 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.183641416 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.817368319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.185246364 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.25046813 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330401536 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301773769 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607194209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.206970583 seconds)
  done (took 15.720975639 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.120760434 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.208285032 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100104478 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101623838 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.115508862 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103468927 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096706698 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.116523448 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.09689147 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100574241 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.117032604 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097008652 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095440155 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.115499789 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101991603 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095067993 seconds)
  done (took 2.567205572 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142104389 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120833429 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.121719661 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104301728 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10004131 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.122498263 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106731785 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.12076568 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10092964 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100845691 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.12423144 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104083016 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103885337 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.115500401 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104419143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123015665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.115277356 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104328724 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.121263092 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.120653503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10493873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.101713717 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.119905189 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103865883 seconds)
  done (took 3.504753406 seconds)
done (took 22.526099567 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154975096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106277325 seconds)
  done (took 1.000095907 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.171410729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.188124921 seconds)
  done (took 1.100926228 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117331668 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094360721 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.143076983 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109634426 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096152372 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112599742 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121389144 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.112734761 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097409729 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.096750948 seconds)
  done (took 1.849154761 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099254309 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09952769 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12744808 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164879933 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122092184 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099360616 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.101783103 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117037531 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.101370065 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096777262 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.1186773 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116559092 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101246339 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132978462 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100026282 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.117788014 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105523836 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099995858 seconds)
  done (took 2.764920045 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.097421448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097040221 seconds)
  done (took 0.941426099 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100279857 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096475502 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09672185 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114667055 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095949625 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094836571 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113124484 seconds)
  done (took 1.45962686 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521990565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239770539 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.371915317 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076222592 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125691429 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.330568318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.108059205 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076731762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.095344046 seconds)
  done (took 2.718852568 seconds)
done (took 12.57981431 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097653784 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.209804959 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.600372104 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.139874914 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096470029 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157379733 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346622041 seconds)
done (took 2.399746227 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341466732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.182327738 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088200969 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096934959 seconds)
  done (took 1.454920053 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.087670668 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104275631 seconds)
  done (took 0.948463121 seconds)
done (took 3.158554105 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095181132 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.116974051 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.112593721 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095522262 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.094590556 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.093612009 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.113416632 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.096307712 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.212190352 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.113150929 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.094584371 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094870903 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093300425 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110817549 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094378549 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.094701913 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.110503869 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095340296 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.093985776 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093842205 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110930392 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094524345 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09384867 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.111100381 seconds)
  done (took 3.307621894 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11764684 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097024926 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116442246 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.100004109 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.098911125 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.116617979 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.100624117 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097443598 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115911724 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098575594 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100053682 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.116705744 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097903665 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098526647 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112291983 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099442169 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099245002 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11378225 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097401135 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099195627 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.115593262 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098167653 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099498554 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114869645 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100840713 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099136868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.113911098 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097666685 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100008679 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.11646743 seconds)
  done (took 3.905907837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.102674938 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.091919688 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094446086 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.119789549 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09271564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095858817 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109168903 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096490354 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096047953 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.112005285 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.097798786 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094580826 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094517074 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11374625 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.097344817 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098341109 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.121251073 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.095897024 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095542842 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.113260374 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09903149 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.095395781 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094461182 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.114395664 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095248278 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092171609 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.11312822 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096384319 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096457025 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.11157021 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098796641 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098391839 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095176459 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.122143547 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098177848 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095021451 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119687071 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093343747 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096899594 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.110074602 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.094563763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094657684 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094103627 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.119669991 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096087935 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095703459 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.111668144 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.09730988 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095636929 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.114487742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.094724692 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095376894 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097242811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.113916665 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099258874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091354209 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.113436078 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.093819214 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096454659 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.112035983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093478022 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092939273 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099925175 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.114213589 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111074279 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101170055 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.113278023 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097493596 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096316615 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118471026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098644957 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105700994 seconds)
  done (took 8.093935091 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097143361 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095309201 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094499301 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112723224 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095786457 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.0950689 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112485191 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097042059 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096014285 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095246674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113509731 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096764392 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09553915 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112071207 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096425614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095475997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095113633 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112334397 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095512627 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095651276 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112400227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09603544 seconds)
  done (took 2.975600804 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239974858 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102651222 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142937866 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127716628 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112858663 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.127107428 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100992483 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101139929 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117133666 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105654834 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104746965 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117522263 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.11443545 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.121418594 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106160358 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106031374 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118064277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106842101 seconds)
  done (took 2.942211946 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096940805 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095736723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095776326 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.112947282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09619338 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095349796 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111971255 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096997173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.095773342 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095731291 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.114407618 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095984448 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095426334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112655475 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097074484 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095740267 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094761285 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114364862 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096851729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095775347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.112938905 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096533245 seconds)
  done (took 2.987015819 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111621738 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098444589 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132335487 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102560241 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096932623 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115193609 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103948393 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097418454 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.123423947 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098566897 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09855385 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11455683 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.112885905 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098404595 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.119920291 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099442033 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098033269 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114963454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09898987 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097476592 seconds)
  done (took 2.906414649 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191096734 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130905176 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114300335 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119623738 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132113836 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113537987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139262246 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11407187 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113769014 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141470272 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112992278 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.131040753 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122285639 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117239054 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.130446193 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121841857 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.137181692 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122581974 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113586022 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130948956 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124088273 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.129385054 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123526897 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112782217 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131054798 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114903113 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112030384 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.136192048 seconds)
  done (took 4.307670281 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097398179 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096111652 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095978318 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.113702269 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.096812236 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097133937 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.112504883 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096884465 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096437669 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09494043 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.115141403 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098231308 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096824681 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.113146882 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098582902 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096887603 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096428782 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.114329338 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096737993 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096806827 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.113303153 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096924922 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096447283 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095477987 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114257836 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096446743 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096615384 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113897173 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098147606 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097174606 seconds)
  done (took 3.813545954 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10866578 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106168806 seconds)
  done (took 0.992194895 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099355557 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099915672 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098814551 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116833497 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100196425 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099087382 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115086894 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099650415 seconds)
  done (took 1.607099949 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.188414064 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.212492134 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.120034112 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108059423 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.212125016 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.192023618 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133972178 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.120188978 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.097362887 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.089607722 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.204685569 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088858944 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.115609571 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09454846 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095967151 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122102268 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099163531 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.1069602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.122351116 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099356053 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101832134 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119266448 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100823872 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.107100419 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.109727882 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100168558 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099625964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.128279231 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095031063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09760563 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115865361 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.098602974 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101185818 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.119825326 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099400847 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.213240653 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104029782 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113306086 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.099264298 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103146688 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.146809011 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100480329 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.098957397 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113564037 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102240285 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102166269 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.11990179 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100255369 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.090901788 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.110013843 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100742394 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093723188 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096643507 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116794354 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09757986 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.102288283 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.117863439 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.095002855 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09367091 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.113903058 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.096878347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.093662875 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.118357278 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100673028 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098606422 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.118180321 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097607466 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.098285083 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.118136578 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.100050593 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097059387 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.13080451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.098694721 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102380964 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12236665 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099237108 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095534204 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124030832 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09729539 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.097966784 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121154633 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124891728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098503047 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113903092 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.093568234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.104210544 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.118439252 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101145406 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0905427 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123919845 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101078898 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.099528212 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.108800289 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.096256473 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.093518375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.121233038 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.092381834 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098186594 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.097008783 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.121692346 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103689945 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096244101 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118837105 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103726533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10303178 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11635935 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.147340527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115537062 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.095122616 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09995075 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.123741507 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093847881 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09708585 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.117579794 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095889763 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.093018403 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.121751143 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09838716 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099437824 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.120834177 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100960016 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099502833 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.118240286 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098583572 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094322829 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10254377 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.126468562 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099153645 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09967362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.119835101 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100517462 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.098029059 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.122037939 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095581069 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102669273 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114222157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.097897524 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09981171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.12315702 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099469672 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.093847024 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.116819595 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099626908 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.097077169 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.120575211 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099953006 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.094816811 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.109443735 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.100059627 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.093346134 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119174833 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10788417 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093048219 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.119887922 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.095064727 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107013083 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113385899 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103983769 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100841064 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.121896709 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106071751 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090943258 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095168767 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.122140348 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100173554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09415205 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.119236161 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098704432 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.104248103 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.11182685 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102516317 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.090366874 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.115699588 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104418316 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100500891 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.121483493 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.095108318 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.135897571 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.131295358 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104217038 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097290185 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.118080985 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103177593 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097895099 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121480186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106188059 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103619264 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114374216 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09880735 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104405958 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.113851303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101619114 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09659415 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098676902 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.110789667 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100359848 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091386868 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.122505251 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.100608011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10273473 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.124712071 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101693679 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096359348 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125462562 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.095353911 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102949027 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.110563643 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105366307 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108175812 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.124356816 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105024102 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.099652293 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115563103 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.10090627 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105811723 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119156238 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.100079631 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099857213 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.091515347 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.111149488 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103769681 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100966569 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.113222793 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099601559 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098662817 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120090216 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097212772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.091117116 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.124116057 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101707777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.093928805 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117714485 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.096023291 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.097351553 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124739124 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.092594464 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.097688578 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120020575 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103642637 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.098571757 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.118872871 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102460333 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105504769 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.121411967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102380434 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096225653 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106233918 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.116419813 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099037522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.093774653 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121327131 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.092933238 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.100570005 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.118178498 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.096808951 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096072674 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122491837 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107773703 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104486242 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117193619 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.104996559 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104525666 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.124868027 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097967164 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104961629 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.114240885 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.094664092 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.09631671 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.111375161 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102725699 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.09554984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103726959 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.117189151 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098741562 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.112364239 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121464718 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.096908737 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.105154643 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.129847598 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093425924 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.111925143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098020474 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.099241098 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.114667459 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.097663429 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101439815 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100104632 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.124216099 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101600882 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.096227568 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.120425162 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106321668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.09588876 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.126044755 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.107452357 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105522994 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.114820654 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104154778 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.096025432 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122512628 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.094519164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.098765669 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.118516794 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099640536 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.096985358 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.118377273 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.096463643 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.092864897 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.115998412 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106442379 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09711951 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123630336 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09961244 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.098324985 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.115000126 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096549076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.105028602 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.097890906 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.136174999 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.100774931 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.092381378 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.113864751 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105712279 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099143292 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.125955234 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094789941 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103518906 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126125433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104076523 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100967401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.128069479 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108542166 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105947131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12451266 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.094517469 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098032193 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122601531 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101448431 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102454412 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102395294 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.114264803 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101548147 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106057807 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.121522992 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097914795 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.092924205 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.121326664 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10654171 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103392 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.123249574 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103971282 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10109012 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.115897866 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104653567 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106694523 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.119683412 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107048999 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09984181 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124535066 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097685811 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106087406 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101042286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.115255095 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.094404244 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.097638646 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.126991064 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.094357365 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10458236 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.126119371 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097916829 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098351916 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.12462664 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.097242862 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102308155 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12408125 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.098893609 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110625953 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.121058179 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.098354775 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104899896 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105388948 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.115650311 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099527259 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098688735 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12863547 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099426998 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105711873 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.12246773 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106750225 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102115805 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.124723417 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.105700299 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106737804 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.115045335 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107930776 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.102510695 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.124443666 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.098602029 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099029626 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.114211411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.10036804 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106831771 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.116928348 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110191018 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105180707 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.098107837 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.119328937 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106351747 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098947803 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.128161411 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.09827655 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101821094 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.114648304 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102760209 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098970605 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.127449825 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.098170258 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095205426 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126230565 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105420798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105083658 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.122765704 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107877142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094447522 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.114598912 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104753598 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097352989 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.129216089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10473965 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.099241092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.119047226 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.104092239 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103270867 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107871687 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.115135238 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.098515962 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.10067479 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.122765213 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.099499364 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.095167406 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.125222807 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.100345936 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102356659 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.119776966 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.095570211 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098894621 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.128949 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.099722782 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.095774455 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.118700113 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109240349 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.099726632 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.117953477 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.096926382 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10675307 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.122595048 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108560124 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.09708456 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.121622572 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.098667534 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.103746193 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.127807826 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.0994894 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101436965 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.117886494 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107760432 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105389063 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.113675008 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.099124995 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11056468 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1073545 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.122895896 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.103704096 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100155569 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129288645 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108455609 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.103614199 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.116151949 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.096047437 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.098885436 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.116478335 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104798381 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105655187 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.121448042 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098455743 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10571258 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.125862987 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104815378 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103055327 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095454961 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129461511 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.099591158 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.102925344 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.116585988 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.094873429 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104767897 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.126622316 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.100219402 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.100160024 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.123345159 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103845245 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09598008 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.119003225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104792795 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105236294 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.126853898 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10030192 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099703058 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.124559653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113075019 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.103014483 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.099925831 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.128372633 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10758207 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120967655 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.101618142 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.103948011 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.127797546 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104962034 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108370346 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102188386 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.120885127 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107479614 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108084586 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131293019 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0999262 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.095659508 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.126619779 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.099984426 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.095600357 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.12489649 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109340508 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109067647 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.121724993 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09906884 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110478608 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.127315934 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101055161 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.098921007 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.119990038 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.107201775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099044942 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.126224587 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099062035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108720358 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.12882957 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108181339 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110764664 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.116519554 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108200796 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.103079814 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.131260032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103488704 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.0970473 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.096230103 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.1266946 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109512518 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107801517 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.126510544 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106983257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105645191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.122443973 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.103318658 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099372475 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128580021 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107670317 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.103242692 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.124077127 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101452856 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102342446 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.102838904 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.128133128 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.109694775 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.102679511 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.132322697 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106238661 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.099647063 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.11985105 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101792411 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.105373122 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.12371454 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106304052 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.099400186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.11760963 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108848328 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108590537 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.122424372 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109340816 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108823014 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.120802913 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.104868174 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110077155 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.125643226 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.104627935 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.101941508 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.10479938 seconds)
  done (took 65.481060196 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.153031429 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110302572 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126339411 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.10626325 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121203932 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126700174 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104755776 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106044235 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127733738 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113043327 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104516696 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125705236 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119876704 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144476461 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120693062 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113697843 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125543223 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106723262 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104293745 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.127533265 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119409317 seconds)
  done (took 3.337655824 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104934246 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104883889 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104360957 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125495601 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104577439 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.104426297 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123333031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105573087 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104471419 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104032689 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12530715 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105308252 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104041562 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.124339243 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105120611 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10449235 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104024615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12386419 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.105047872 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104089857 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124690387 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.105274368 seconds)
  done (took 3.250408522 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.132171144 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106554071 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.102682203 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.125897679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108856294 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.106276473 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.13035084 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.106711186 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.11274037 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.121799259 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.096284935 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099404945 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.102561572 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.126230127 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.098614028 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.103912505 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.135118279 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10806329 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109021711 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.126406038 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.097175781 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104797541 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.125865657 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.096045489 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109228475 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108471333 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.130130083 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107948606 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.095003637 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12896308 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105594347 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097950929 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.116557293 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.097414303 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.096119536 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.1074347 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.129850669 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.104768294 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104989327 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.116245554 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106449396 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.108701824 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.115960075 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.106868606 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104588649 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.098457554 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.128763844 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.105030492 seconds)
  done (took 6.147440422 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133633565 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.162934934 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.109295356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134214009 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141433332 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114089747 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.107296604 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136588719 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10753717 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.130540579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120639499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.36250749 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.13278003 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.112736659 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107179348 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131879924 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110864526 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107090738 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.135175338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107815535 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112107162 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.13191693 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118217907 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.137566233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110299812 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108050078 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.130450182 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112235217 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.114905025 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134701377 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112589512 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111186266 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.139710486 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110658959 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128201918 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110076038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120216143 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.131695669 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109915536 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105739772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.129832692 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113820368 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110071052 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.140920666 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110498996 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10912332 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131451444 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.106906826 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13710051 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.109618891 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115791871 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.139314577 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111101848 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.109151828 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132986 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119588111 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109205999 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.130105943 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111371706 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.137966845 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107768635 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111821861 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.140294624 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110398837 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114274392 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.140733321 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110992399 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111211068 seconds)
  done (took 9.395985935 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.138591933 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111794339 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.141295449 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121007099 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111680049 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.134141743 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112654452 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.134059679 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112554473 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116763195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132815745 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.241854411 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109863655 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119639768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135481966 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113760259 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112075966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135386073 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113152057 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112254973 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.134691926 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121535994 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.132986202 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12173441 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123077757 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.130744122 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112551692 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112040745 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141623086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113221367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143292893 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.113552416 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113453843 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.141502184 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123577033 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.13440049 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108798413 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112398402 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.134029266 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112848957 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110834705 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.142054704 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113931013 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109499714 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134864507 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113150175 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120211401 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.144507631 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117838679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.143096124 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113292355 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119583619 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134102744 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113117428 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.141567015 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128724 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139280874 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120600684 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113534701 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.142316448 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120983259 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.148580197 seconds)
  done (took 8.670588587 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106975967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106956993 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.105299853 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.126863691 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106608836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106021853 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125889561 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.106575849 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107263702 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.105184125 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128199015 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106624083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105530197 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126453092 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107767394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105511513 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104201948 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126676608 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106151499 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105339913 seconds)
  done (took 3.066526307 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110745851 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108008203 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.106706519 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.129109634 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108026118 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107604178 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.128410241 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107962363 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109627027 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107378856 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.130904473 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108468286 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107392832 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1290036 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108057013 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107917683 seconds)
  done (took 2.660735568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125370822 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123864378 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207204192 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.109040467 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.131763649 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.115299419 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107167226 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.133413248 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.107123816 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.113400836 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.134971313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111992211 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.122702633 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.132188239 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109406233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.110053088 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.128974003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112269614 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109420735 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.210818473 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110355366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.13301318 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108833641 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.110135015 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.133247758 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113859661 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112562663 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.131419635 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110937957 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.109136091 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.132420544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115282262 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107155056 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.135117364 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109805365 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.110555929 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.129333413 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.109401848 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110532984 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.129007477 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.111402334 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109731222 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107292133 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.132145128 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10990076 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108173574 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.129635945 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.114437084 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109005715 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.132844844 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111014921 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114060491 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.135060389 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118273315 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113862106 seconds)
  done (took 7.52258636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.120206918 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111584199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.142528483 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.107634333 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109687467 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109579043 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.133041958 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111501743 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109648651 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.129000218 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110659282 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109693866 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.131824783 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110922729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110013001 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.132706749 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.108135887 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11016949 seconds)
  done (took 2.96326613 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109374497 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106834012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.107248655 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.129343136 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.108442119 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107083481 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12753441 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108177338 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108180634 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.106682875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.129398833 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107736502 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106924781 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.127960147 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108198899 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107593556 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107843349 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128988473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108196135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107537199 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12856575 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109017702 seconds)
  done (took 3.350489 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120076133 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.233519054 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.114035002 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.240513834 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.128532566 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.105306131 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114603045 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.128682031 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.122132813 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.103984804 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.128406191 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.105172219 seconds)
  done (took 2.499614431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137186416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145982398 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133120979 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111286665 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116654529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135570296 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114181645 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112737977 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14526967 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12352267 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135473553 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122985397 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12070412 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.143824917 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117509457 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13980165 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115196965 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114072917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133915844 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128366818 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134368683 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122233899 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113365724 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136290993 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115398498 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121381168 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142947283 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124340793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13686921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12151132 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11760657 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135579859 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121958801 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145093024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111164766 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120028476 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136161761 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129171759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139773628 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122915682 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110220614 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14135459 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122731764 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.140368226 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123460875 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114297648 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141138357 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114662835 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112996231 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15740357 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118284285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.144619446 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119332239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14188443 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122926141 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134307034 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147094891 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121260206 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140334615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124846149 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.142396182 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120175697 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12032323 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146346326 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118154539 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143941765 seconds)
  done (took 9.340304005 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148708467 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11076904 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137358972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126594548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143365687 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115447734 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113386574 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135238093 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114446536 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11097019 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.178279732 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11452685 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142409321 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126189794 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113806061 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137997121 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11500842 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121315086 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133431136 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134391315 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136565176 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122765135 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142962552 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123945322 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123545462 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140763471 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114551377 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113202969 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137829966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114025673 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140970824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117100002 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122152557 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.133133573 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124165936 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112960512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135683116 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120325639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136223276 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119324996 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121945323 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150750303 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115330206 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135131278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125871872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114591847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136912196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113168281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113842165 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133636835 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125724487 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145602951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125900911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122031366 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136988921 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114148328 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136128688 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115184145 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114898699 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140809554 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123036804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115329959 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.160350725 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115158118 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137976189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123277969 seconds)
  done (took 9.280881983 seconds)
done (took 175.563536971 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180025472 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.220835183 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.203500029 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.162429684 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.099736278 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.158978433 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.133483121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.20657939 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.100797901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.099810806 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.12647338 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.103787694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168169274 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.123690104 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.101075255 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.103171329 seconds)
  done (took 3.14971805 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201217443 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.345882222 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13946407 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104372193 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.107147687 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.127631794 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105103359 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.107176132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104780071 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.134866577 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106354768 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10136564 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.133254201 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.101744102 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.125931401 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106892351 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113252674 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.126254181 seconds)
  done (took 3.26425572 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.123915552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.167801218 seconds)
  done (took 1.158992451 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.137492294 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220501238 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299885296 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176714579 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125233196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.145904804 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153416647 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140379587 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.193962417 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140029982 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.117351396 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.124118876 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.131700221 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.110556547 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.145728594 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.104681388 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133482216 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.143071794 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119684715 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.106749504 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.152663545 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108874714 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.13238027 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.121631423 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185035424 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139694179 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.109930669 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.131629177 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.107196574 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11968785 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.135194835 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122270015 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.138395986 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162903586 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.131973663 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159428043 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.135443145 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107128481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119597779 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.128534474 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.109494345 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12979746 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.119800504 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103655757 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.130746181 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11327241 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107965988 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.130983365 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114022983 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111865103 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.135687872 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112244813 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.181127417 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112346111 seconds)
  done (took 8.204276238 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.907500652 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154800844 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105131033 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.060657496 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150802264 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119603159 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.93122681 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133089742 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258374923 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.925184953 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121730277 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.136289525 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.250044595 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287882039 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256766681 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364408331 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.760305719 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.117002963 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159510319 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150300655 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134126615 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123791586 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142334896 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429450972 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.105335855 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128296637 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110091716 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135382062 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16131791 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.130245861 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.109962923 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.206994665 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.298831208 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217481395 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107634826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104686076 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127244958 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170496594 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.297942725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22422945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.17636433 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124469112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106218184 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109737692 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142395453 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.104602631 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187950183 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.197804655 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.176683506 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.132147024 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115271709 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134922983 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.109450907 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187110792 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105432597 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365984924 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366709601 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128406487 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111810853 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.140250525 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273300533 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108764105 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243511654 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150544223 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223235908 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.106673609 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.804707659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.195121216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.105533004 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.13210654 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112832159 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111417301 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.131292011 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166497236 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.428748335 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113231583 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132206133 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106187643 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.232838572 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.106793088 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10584503 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187322087 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129081596 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.112965783 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.114369753 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.135219288 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.175198217 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278016483 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135566904 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112413021 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.110683095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138480251 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.107511683 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.239557548 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.23725943 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18554149 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.239865403 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11187554 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.191924164 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19402516 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.111556893 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.197428397 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112324892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139575426 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112024406 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.233512077 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.165206523 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109266241 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111125443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.133830502 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146297375 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.132868481 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113114657 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.197660236 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.4908979 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170735054 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.125988243 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111362521 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112872983 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187239105 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13585165 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273958761 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114613783 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.193971003 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112319768 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10386105 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.135631525 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.190220037 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115419614 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112954715 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133476822 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116124672 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.286716026 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229530996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115434148 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254935554 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203439719 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111319769 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201111893 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135373926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.172333782 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140541391 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110566945 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106123556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81534709 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118778474 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.112209609 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134489339 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.189968956 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129171071 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110667656 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107054053 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104665526 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80972909 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111157072 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105352925 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.109389401 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134423416 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112219867 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133722491 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113731042 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188555103 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253206006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115801748 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.133458856 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10670736 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.187742785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107583752 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10746602 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.132324829 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108944181 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112436995 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.134626007 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110677054 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196305143 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185755991 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.23998578 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.58773619 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108710863 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.128550058 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.251431657 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107433303 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3322375 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136123783 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.244168037 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192073842 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.105600271 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367611661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193626739 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21188854 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110881463 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199811913 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105364674 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112708927 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.187371276 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.129849164 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11495793 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.185806352 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116498417 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114777257 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.28371061 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108861552 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253627957 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105034851 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.198603081 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109851554 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.133809312 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.334259565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107572599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118759159 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.189194806 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136084845 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109753562 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.891367371 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108169296 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114940306 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.140102545 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.243155873 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190964208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112981555 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.13728007 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117460578 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.190276157 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.235764094 seconds)
  done (took 48.066874448 seconds)
done (took 64.711227205 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260937564 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173287074 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.35840357 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154940743 seconds)
  done (took 1.889426673 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.264177484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.171349556 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.248039842 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.104338608 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.256282963 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104341845 seconds)
  done (took 2.048001771 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.177659982 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172740724 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14988744 seconds)
  done (took 1.400887519 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.215823779 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213975996 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351615265 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.240608469 seconds)
  done (took 1.983308509 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.284655512 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126147148 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.134201501 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.232581015 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247415509 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213984277 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130026096 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.181936084 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.136000164 seconds)
  done (took 2.619015661 seconds)
done (took 10.83543364 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.261706857 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.120584841 seconds)
    (3/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.143740578 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.301126913 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.392822544 seconds)
    (6/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.119438063 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.239472762 seconds)
    (8/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.41600417 seconds)
    (9/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.226658069 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.313987177 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.11516603 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.142671901 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.20618726 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120535989 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.271386015 seconds)
    (16/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.22416743 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.207459484 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.166515216 seconds)
    (19/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.205032597 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11444363 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.152981463 seconds)
    (22/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.156668939 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.244283669 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.363179082 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.366725896 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.193048112 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.117691857 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133821447 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111256845 seconds)
    (30/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.17847454 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128814363 seconds)
    (32/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.322346402 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107551266 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.26324969 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.223551234 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.143355971 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.139784079 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.140295704 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.174528445 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.168919028 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116711781 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.159671215 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08544522 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150838822 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.088392407 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.268217375 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.085777225 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.221026222 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.089835005 seconds)
    (50/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159067914 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.134601089 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.179361755 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.442368527 seconds)
    (54/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.362010109 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.121300175 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.108639136 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.437530151 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118985659 seconds)
    (59/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.141939336 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090578813 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131990533 seconds)
    (62/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.08411538 seconds)
    (63/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.156271887 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.201623368 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112183652 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126251872 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21921592 seconds)
    (68/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155771075 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.135819574 seconds)
    (70/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.14327481 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.212330771 seconds)
    (72/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.128300384 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0915494 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115178417 seconds)
    (75/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.147544319 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.154872012 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087535851 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.086591193 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.199806 seconds)
    (80/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145858853 seconds)
    (81/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.122586128 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160503382 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.114624097 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.093600141 seconds)
    (85/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.153519632 seconds)
    (86/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.161320671 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.086705201 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.086948761 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.147553952 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129415632 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110350484 seconds)
    (92/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.088485394 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.107170479 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114337095 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126416573 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131591842 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130837335 seconds)
    (98/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083725344 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135126763 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.115491967 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.124851466 seconds)
    (102/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090401655 seconds)
    (103/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.289020607 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090339405 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.133832045 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117855504 seconds)
    (107/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.083213526 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.221734025 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090768961 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.083865773 seconds)
    (111/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.148690592 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.176628464 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091358146 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.131630385 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110693874 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086505387 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.085922468 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108707194 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.133224466 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.198976798 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.114416058 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.117290929 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.106765951 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.086533191 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.167967818 seconds)
    (126/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.084531995 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116788443 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106109584 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115491514 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116427436 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10880162 seconds)
    (132/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.085098148 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.114341668 seconds)
    (134/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085439197 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122809899 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.142554903 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.084867367 seconds)
    (138/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.136637449 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127403575 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.154215059 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.090038647 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.087080573 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.084294593 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.141943321 seconds)
    (145/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.085706112 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111193835 seconds)
    (147/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083567618 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.141529375 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.119640341 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.084290602 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.086322192 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134643894 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.090125821 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10962536 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106290705 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.133059733 seconds)
    (157/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.087644895 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.08732052 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.084777916 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.115231873 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.088338943 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109599358 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091564678 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.14055706 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089291297 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.084324571 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.107124956 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.114422211 seconds)
    (169/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.092437019 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116912392 seconds)
    (171/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083700202 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.083433593 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.156627961 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.087444886 seconds)
    (175/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.118653341 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134428629 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108641563 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090966746 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.090304037 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.136600198 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.118129989 seconds)
    (182/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.090344643 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.151130411 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111106821 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110407357 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.133454018 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.112813811 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084589854 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.086668461 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.144087054 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087810425 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.092056025 seconds)
  done (took 28.400914346 seconds)
done (took 29.306002516 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229669777 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.135541976 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.116850055 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.115796235 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.237827821 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123540745 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.158964222 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118710641 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.151469477 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.1189598 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.106528967 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.129666256 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.142031157 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.251188935 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.121331768 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.108536517 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.134707725 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128668262 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.132359905 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.159830619 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.239332255 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111200602 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128376685 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.107483707 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.239621771 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135682217 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.118360686 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.117972646 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.155708737 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.119322122 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.11750333 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.133648474 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136030052 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.13275525 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131107946 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119284913 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108796232 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090836636 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.143121433 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.118997546 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130315533 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.14278248 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11936574 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108843197 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.144136735 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.117816322 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108570611 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.146185298 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.108629223 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.11797035 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135005286 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.134252887 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.117146485 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.131398613 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.107798241 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110432471 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.156018525 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10943185 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.131214131 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.131557449 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11113957 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10843238 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118953721 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134323193 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.117944709 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.109397209 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.143890494 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.120545735 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.117174115 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135322607 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110158025 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11687356 seconds)
done (took 10.523307746 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113214424 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151834421 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.251892271 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25686316 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.163632552 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.126811946 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121796677 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.159342758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121861436 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125345445 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.170587794 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.140228038 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.258628663 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.150380579 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.125715887 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119928102 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.145323137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.117282382 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.256252556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132421078 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.158365497 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.126002941 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133663355 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.151887515 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11372215 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.168659238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.118290822 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.121025535 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.135945909 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.122531415 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133051615 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.138306929 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.116821155 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129145432 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.155216012 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.123946554 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.123927534 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.146853124 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.113065086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112636724 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147511788 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12845787 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114574506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.151699989 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.122246685 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.151742147 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121263608 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124958509 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.113556912 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.145684526 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.115092905 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.162093033 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.126080366 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126848632 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.150339908 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.127205003 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124345595 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.149744757 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.117231305 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.125400843 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.137858745 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114125573 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114075402 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.157927242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.116983632 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124239049 seconds)
  done (took 10.201201627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.132864116 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141520317 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.1486114 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.124466974 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.117486183 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.131928224 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107091809 seconds)
  done (took 1.858375413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.109332605 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.27164824 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.26196464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.261996992 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.253867506 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.272917379 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13175435 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.107531024 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.17028033 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.118989153 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.272048076 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.354614801 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.120503301 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124467586 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.265861251 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.133580398 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.26741877 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.110191983 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123939874 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.266006861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.126292465 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.170261075 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122086261 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.13675562 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.267662516 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112127125 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.314112792 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127611545 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14732928 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.124062848 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124051521 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212255495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.268304585 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123176708 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14242004 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.261607405 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.228736364 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.15177968 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.312205787 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112741756 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.252266169 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.151343571 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.125302324 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123479593 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.150862558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.250876894 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.128408408 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124522788 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.150941741 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.278007865 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.121121039 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.269429256 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.120388877 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.151150184 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121831188 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124873731 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.158247462 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.124578798 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.275914488 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.126572796 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.261905627 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.262902373 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.258525149 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.264925407 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.161966049 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.269730826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.218260141 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.150831718 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118125907 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.125606772 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.265990025 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.150669927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.122166091 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.254887338 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126626505 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.271339872 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.268346031 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.148467043 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123877936 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113029935 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.148525123 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112161133 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.25733173 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124482019 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121077817 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1555113 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122165168 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.150302148 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116606451 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.132464355 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.149207153 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.121570096 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.128541468 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.151244962 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126389675 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26837382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.146005511 seconds)
  done (took 18.344003196 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.113066435 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.111882332 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114383708 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.135957014 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112639476 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111000163 seconds)
  done (took 1.674352827 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14785587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.125437228 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.158096194 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125553925 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.195937304 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.230484465 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.263508879 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145332954 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.144424102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.134952 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.258562718 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.261370344 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.259498029 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.127848538 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.263431583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126018473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.264144082 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.150777814 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.134004917 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121374432 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.151246369 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.128445224 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122160376 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.254396544 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.154022941 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.128077495 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116991869 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.160679941 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133614604 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.118185237 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.154797765 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.125648959 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.140358731 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.121952682 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.264499392 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116908309 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12051219 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.155731367 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127130835 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.124025638 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.262172104 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.151520276 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.132595925 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127234156 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.147226886 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117763594 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.126363609 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.145517292 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.265776528 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.127352862 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.126000684 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.153220709 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.126243756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.126455741 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.143354339 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118628108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.152209751 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.239461135 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.157340834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.117209599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124560453 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.15435494 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118972684 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.155840699 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.127877525 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.127293293 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.144050767 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.127800303 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12297393 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.150242375 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.131241341 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125853303 seconds)
  done (took 12.214618803 seconds)
done (took 45.239492862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.592078082 seconds)
  done (took 2.57670775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.114903066 seconds)
  done (took 2.100575038 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.783554762 seconds)
  done (took 18.796908102 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420493598 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.351391989 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.993172834 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179438567 seconds)
  done (took 2.926418981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.078715364 seconds)
  done (took 2.078745807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.414344268 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.28013767 seconds)
  done (took 1.681907273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.72456056 seconds)
  done (took 1.718622271 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.888957191 seconds)
  done (took 2.874939913 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.275328948 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.249630003 seconds)
  done (took 1.52480102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.668224194 seconds)
  done (took 1.67056664 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.590536072 seconds)
  done (took 19.597531286 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260211848 seconds)
  done (took 1.267439507 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296520487 seconds)
  done (took 1.304223659 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.569142927 seconds)
  done (took 4.576781839 seconds)
done (took 65.692532748 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.12605284 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128629248 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152501362 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.12765396 seconds)
  done (took 1.530810343 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.129719746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124931236 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.172029269 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12517896 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128688308 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.12277825 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.151525413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.127265186 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122389708 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151904062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124023441 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122769637 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.153449493 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124195307 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121880049 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.153635816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127458144 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123794451 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.15097949 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125816501 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124618751 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.151556014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128534414 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.127061657 seconds)
  done (took 4.22540426 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122111688 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116067541 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.117586284 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.141003725 seconds)
  done (took 1.509964223 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.133724691 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136563818 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.159700833 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132691714 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.136526294 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.160051464 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.124381001 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121377107 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149981623 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.134395655 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.139784916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.1649925 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136756376 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.151418222 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.138052617 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119814803 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.151607085 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136801773 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131413506 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.159479786 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.126913024 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131628205 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.155355342 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13602206 seconds)
  done (took 4.377692175 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.200603774 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.136062453 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177447596 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.171176435 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.180545944 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.123138096 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.152391592 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.156065409 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129870113 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.1315951 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.15071405 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170134216 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.155381497 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.126986352 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124214888 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155412957 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132972801 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128149335 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191665965 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.127277844 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.154829171 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.137784388 seconds)
  done (took 4.327983327 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127734641 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115362871 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.138547395 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113504792 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.126903451 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.142277812 seconds)
  done (took 1.778670996 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.11512862 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109353612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.110248413 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13531465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.113596627 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108987146 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.133850772 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.112068823 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.109712815 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109003067 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.135045896 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108664691 seconds)
  done (took 2.408047258 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211484278 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151735494 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255817917 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391897433 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193845694 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192993743 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284361748 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192748599 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182502303 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170986474 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213872565 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168029321 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185767599 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19398277 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175529079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.162791086 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205274548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215220667 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175597221 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244475949 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162587563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209809466 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197276733 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181072985 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14613349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197681819 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125841004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160988196 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174272321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198515289 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206621415 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158256592 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147388836 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219382404 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265317943 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210431255 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299550047 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140120343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.204760326 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.219579276 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234873036 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174528733 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223164229 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160081678 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13424786 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22633522 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182933353 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.188934636 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.167576118 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150094114 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214747812 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184444582 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202463803 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169414267 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306965443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167091102 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147121467 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21057424 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219563286 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206902078 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215016373 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12880118 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203726688 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22443464 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219942143 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.174845436 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.196035515 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131770041 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167909154 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.239813786 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218109217 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163772405 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.224133035 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164814791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17828197 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1979925 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162210997 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240520485 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202817021 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.126515716 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155883459 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167402668 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133000565 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.223246143 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128292227 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251327618 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138264759 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.214336719 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181972795 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186561301 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165533513 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195290913 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165625546 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18226665 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.106987885 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176271334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163968609 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189298784 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13474304 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15714578 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174713955 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13496346 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185484751 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.128430169 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20158148 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.14070901 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192592291 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175808053 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.164245386 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18486122 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179891598 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.170682231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201821039 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196716417 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164984109 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137197141 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250825726 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203450606 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142278823 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20217275 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202222024 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.184360873 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140535527 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199042338 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198358076 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178960691 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233242576 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14594422 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166637785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.144351137 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20541764 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165190506 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.192237171 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137959296 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19749518 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193045084 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.160440304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146109984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215040872 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139492143 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12906094 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170784729 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142320512 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.176308017 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.156797765 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.171251781 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161715812 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200866839 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173366326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190263307 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141604561 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207342719 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136092401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.203598691 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154545468 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.152143441 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179958763 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231182468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134538949 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214966412 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166381566 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213613835 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207550664 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135837645 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217008734 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133881555 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.126807379 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195918753 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2012184 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168245657 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222669437 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207648323 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170924299 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.19705318 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153363294 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202127767 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.215273329 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163139219 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.172176646 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177876679 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203294711 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12660593 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.128334899 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.161995272 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143472616 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16325775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14356594 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214172204 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17044435 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207951168 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202876265 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144990967 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.225414152 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130861088 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193356933 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180668425 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172601679 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.193716348 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223539987 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21097986 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146925084 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198701504 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.128213674 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132095236 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.167422917 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164472354 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17215281 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14140898 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175916278 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197543044 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205713915 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152951416 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222118891 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198717753 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232095324 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.128498897 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.166235588 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199444676 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172714433 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.21873187 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139408293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.192339024 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198772295 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177783438 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194975512 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201905039 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213101413 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196608159 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.199414381 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1368001 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17775308 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165778232 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173172011 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166592651 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176595961 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139015899 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153043277 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.173524449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145694775 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220706784 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178372741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180364216 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.187732021 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173773535 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16061131 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148647734 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.210830273 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151370248 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.110440502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199733985 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224302705 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155074555 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185689195 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174233467 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164205322 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321689804 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216506743 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176319591 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172129557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143665597 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207313118 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162832616 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193263922 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188398322 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176599854 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241602871 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176095394 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.172616891 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13666205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151794146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183543271 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.143309356 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.186389863 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.196422645 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.149740217 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22273496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142289914 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203079976 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182835247 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.179776651 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.155824117 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144765196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259036595 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204760886 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204328867 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.171449229 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196582684 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188841501 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129986461 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16109229 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137892374 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.219512982 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135440066 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212812894 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.196585032 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188734871 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209012145 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166319323 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176286625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.133371434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202343017 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15609272 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215980187 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140747277 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.170815923 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218075133 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.13329776 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136289151 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195319159 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.315368337 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154657928 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201109412 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112868628 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307124129 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136481247 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137902247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192189065 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174708706 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.168206624 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186942723 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208400722 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146546766 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190638154 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141964531 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206923766 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187066896 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202033688 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209954993 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.15007451 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19558754 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161977233 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205436006 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151945691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.183530549 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164272729 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229759804 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178483069 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.16829281 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173859445 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204457216 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177190564 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207103513 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145084757 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218886405 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135023343 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201127742 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142847612 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160891944 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164857585 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.199506994 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136385106 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206107854 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205258771 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138320223 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132248259 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181893247 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171508191 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177873326 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13617154 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221385946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.134965956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21738423 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243816133 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136638081 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17117828 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177552822 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135430609 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173585384 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150875236 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164412532 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.180457623 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182923979 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.164300628 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181143195 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201396257 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197229647 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160378455 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175629314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.271200231 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133673606 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226973625 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154283001 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230090305 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183395719 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180276661 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2047346 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156368367 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200401363 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151618705 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.256553101 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170409034 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20269077 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136844502 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177911273 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145026417 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.168411566 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157511988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20329987 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147861614 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.142331044 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.202567819 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150216112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.18338169 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146850336 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236624372 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155598426 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221520239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223745433 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143519349 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211227103 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178484229 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164743434 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.168127038 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211959896 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149153242 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188219587 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.139904111 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.17212129 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220595556 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.161402272 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165586265 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209888053 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174325615 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208008813 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.140351104 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215670843 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147005869 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21325237 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133343336 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.186282693 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175625435 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169333034 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.135026922 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204969741 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16644501 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.199936511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148938863 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183823831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227334969 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.1292005 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170099117 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289786646 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193903021 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230526587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138142309 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141828247 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181781274 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164712963 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.201405421 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176801779 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.168858535 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135448167 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.179808909 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.163625431 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170947245 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175129682 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.733071539 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163063803 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219653492 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.140771272 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290210181 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147446832 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206053386 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.122603925 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134232015 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175396077 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142731495 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175795222 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183949134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250266658 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.198034873 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.153247858 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169705861 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.13397355 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135936228 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194675493 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157164079 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20445047 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15358902 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108307863 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177053573 seconds)
  done (took 88.543396096 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181305931 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17155572 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.184209983 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.24055164 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211727906 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308425183 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.246804883 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.313281756 seconds)
  done (took 2.953150391 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12632856 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.167682154 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148473975 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.15128521 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117203152 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.514923208 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.166893001 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.127151141 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.165885116 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.160346277 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.144554673 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.572786569 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123589212 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.15139398 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.128198797 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.143306492 seconds)
  done (took 4.209692946 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.961259998 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.544360262 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.964255555 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.311683246 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.241272754 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.216833737 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.800362156 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204954783 seconds)
  done (took 12.33869345 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177207509 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.172799217 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.463820904 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.341797305 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.219046196 seconds)
  done (took 2.476909932 seconds)
done (took 131.679003965 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130867619 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.131058906 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129162138 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.161172872 seconds)
  done (took 1.642204166 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200039283 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.096868712 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.128186575 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.09676838 seconds)
  done (took 1.625187446 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.396076275 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.096927356 seconds)
  done (took 1.615879064 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150792735 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139544726 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170311176 seconds)
  done (took 1.576399905 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.143461873 seconds)
  done (took 1.247571025 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123276587 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121743736 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.28151684 seconds)
  done (took 1.635626868 seconds)
done (took 10.449248474 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148962582 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.935210147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.454664772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138603377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.747075393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405200768 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424843765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182872418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187447207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.146140936 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137343066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.696269454 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.44029219 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.884217698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.425157159 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.884209018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.701354822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146381319 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125056186 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.117716679 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.43305324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115939657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118010353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146381539 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698680075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.4254423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144082376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.8950109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115947988 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.150121378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.408140195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117118982 seconds)
  done (took 21.192816605 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157289474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174185382 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.16816001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118103999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120166166 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.148175447 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.127924764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.158025555 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.193298085 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.144540942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139455084 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115943967 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149357884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119874672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140907263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144431732 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.122633446 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119815799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152726443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120402763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138833463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.144213548 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120039644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119610673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.143181849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140987545 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116642903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.156346192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118256762 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122593005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.15073868 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118813734 seconds)
  done (took 5.542681505 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166275656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182275519 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168983984 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.154707366 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196298962 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11945944 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.2338713 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155799927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.223134449 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117767526 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138548235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.146010786 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157013677 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.146009922 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143070887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118383019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.150365371 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121174271 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124957901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14715395 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140035145 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115501148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147673735 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120677893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11764599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.170883318 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118744051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128869437 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146779163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123370292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124205007 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.147608342 seconds)
  done (took 5.828995695 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133867837 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.133311771 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.140162112 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.17133516 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.127648766 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131445906 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.162234381 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128016592 seconds)
  done (took 2.240067073 seconds)
done (took 35.915848586 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141690721 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.134377378 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.139084941 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.165344041 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.2795828 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125699267 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.135881901 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.156266932 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133654685 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139619167 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.146396364 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.128227282 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137266249 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128754121 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.276922393 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.16766736 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.28568375 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.280531311 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.128314188 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.134018424 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125558841 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.284330825 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.164998168 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.127473274 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.27503389 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121631412 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.273366555 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128994101 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.161150985 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118376433 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.284467292 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128058398 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.157887722 seconds)
  done (took 6.820106443 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.235643083 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.159880342 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128602436 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.126541035 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.127953202 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.157225511 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.267877736 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.127789794 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.127028236 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.126856008 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.158811292 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217694209 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.165233712 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.123903176 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.128340658 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.146522368 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.239267205 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.160006794 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.120647068 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.099458077 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.121793867 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.159056153 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248967437 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.156000397 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.128263566 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.127222032 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.159315391 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.133878132 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.129404032 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.158964118 seconds)
  done (took 5.790456186 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.13334851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139705771 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.174188489 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.194947622 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.155067369 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.170794716 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.146165766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137330705 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.17886367 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121600091 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.135008827 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.187216782 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136528489 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131170142 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150807615 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135883323 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134995829 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.151797977 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.130220263 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138175597 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.170366737 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.138160004 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140907127 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.159722703 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119686454 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12815734 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.161469445 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.131990651 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127941859 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.165345861 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122764155 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121629423 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152593211 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.156452702 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121210175 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.164891745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142672329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132403203 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.165177582 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153331427 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121648962 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.152913734 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.146802668 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.175213486 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.152761294 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131963074 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120637579 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.167000684 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11929682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138174999 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.193318155 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120047056 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.141036694 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.151836501 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119196636 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128131886 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.151884068 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124913065 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134261807 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.151375377 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.142250496 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127808035 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163698791 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123001414 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130866619 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.148309862 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.12125456 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.124214582 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.176383931 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130852367 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15759971 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.149399007 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.133978816 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.134321296 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131530272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.163842697 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.120142098 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131129665 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.162822975 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125017085 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131473915 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.154985477 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.122241398 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136943523 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.17126698 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134480982 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.131663613 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.162538674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122588805 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122808569 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167922317 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122829018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12309282 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.162671046 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121654566 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124077276 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.160616436 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131256294 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117881086 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.145275823 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.154971561 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120357828 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.144912719 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.155123797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124035814 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129601697 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.191990223 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120762941 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128734419 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.163071699 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120599541 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.127924418 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.152898471 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120682834 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.135251379 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.166384086 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129321934 seconds)
  done (took 17.784722435 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.379512539 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.368424058 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.217594909 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.413847436 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.164973829 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.256546477 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.40096195 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.374158507 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120077288 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.186157228 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175816927 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.334117069 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.154078345 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.149023375 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372819149 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.449738582 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.149637793 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.193086316 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155512674 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167549738 seconds)
  done (took 6.327951973 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130597958 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155519451 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172884129 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140740263 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.130992456 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166936309 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121869304 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.142730035 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161976937 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131710276 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.12337995 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128670081 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.163864561 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.135995572 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135371417 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.183449019 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129445153 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124326838 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.175014223 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124657063 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.107334073 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177787101 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.129721401 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.172614983 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.14005633 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.130413617 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.149861179 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127443589 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.128365075 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128615836 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155962171 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13007338 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128821326 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.140046008 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.134399125 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.135683876 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.156793545 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.12481902 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126069601 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122585552 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.165374866 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.133569456 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12859994 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.135142974 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14184953 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116486397 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133994066 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.165140303 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.112066407 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.139516822 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.164154255 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.13493281 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128791635 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.17232265 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.128826465 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.137246063 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.161975266 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.135095178 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.124963683 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.150817437 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.119863054 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123946162 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.158318996 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.135933024 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133141006 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.129686509 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159617009 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121289508 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125426861 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.154968847 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124304628 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133704124 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.171636708 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.131412871 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128059782 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.162250155 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.130201648 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.101053131 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128113063 seconds)
  done (took 12.163138218 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147542971 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131697207 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.166141599 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.155939769 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132612617 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.126933694 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.163779509 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.141765288 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.135809991 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.170908773 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.135181714 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134803068 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.175584544 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131561614 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.131546999 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.168086763 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133807381 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.188917076 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13542825 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.147258829 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.166168054 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127065644 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.133875271 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.163146299 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.150361403 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.132428302 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.179381468 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.134235252 seconds)
  done (took 5.303576328 seconds)
done (took 55.309187925 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.309354872 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.491601977 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.264146228 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.264776752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.305462199 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.293322081 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.270225432 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.276744063 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.800092169 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.240033786 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.264934672 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.26179764 seconds)
done (took 29.192116309 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.496458793 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.410411587 seconds)
    (2/2) benchmarking "String"...
    done (took 1.602381167 seconds)
  done (took 4.171639562 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.254590883 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.255236018 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.505743333 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.254691621 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.255913616 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.254787273 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.276507996 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.262581188 seconds)
  done (took 16.209385915 seconds)
done (took 26.276420071 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.302368788 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.616696362 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.518150814 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.237864425 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.257295847 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.254448383 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.256120965 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.324723067 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.260580808 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.243184811 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.691429757 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.561977215 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.266661789 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.695519229 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.244239209 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.266421013 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.283341573 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.64796504 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.259088305 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.29803423 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.236702981 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.238478558 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.267001224 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.270963922 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.263838089 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.262641293 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.30348604 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.255757554 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.621421948 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.26697428 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.302758977 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.257513426 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.297522175 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.26471801 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.256524868 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.27318722 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.639204756 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.266899469 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.237762595 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.269824042 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.630300226 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.27543361 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.268315327 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.265853504 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.242491559 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.322560154 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.24150209 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.37473571 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.28298893 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.268810689 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.286235359 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.66544217 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.270754242 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.284523413 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.262954544 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.603501496 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.280390477 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.360600129 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.287941685 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.278554091 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.269458999 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.257927198 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.296002343 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.271876943 seconds)
  done (took 148.532987427 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.258815036 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.262780879 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.258386985 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.272161481 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.258552926 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.265754759 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.264467312 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.262289497 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.271491326 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.290981846 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.26654419 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.263032428 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.268575829 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.236537144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.268012269 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.284143389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.268487702 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.277652798 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.269598858 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.262395363 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.285052629 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.260975328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.26502466 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.262549072 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.306629792 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.372256377 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.266644914 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.287936436 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.270724104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.260387112 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.262930615 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.25968416 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.261230032 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.147213503 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.273088659 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.281365836 seconds)
  done (took 82.80234146 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.263359835 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.262144828 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264376464 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.29817662 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.269026568 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850332605 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.866490139 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.327934795 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.33422717 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.26994907 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.717994104 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512803044 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.262166719 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.354601167 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.261686192 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.274140337 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.261960901 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356722335 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.28738708 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267671374 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26312606 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.870045942 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.277272298 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.652048131 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442419075 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.279604971 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298954461 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.662901181 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263569487 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296070421 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.603735312 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.314324503 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.262422399 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59685764 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.73270235 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37734161 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.263628061 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296907421 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.266082961 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.552041239 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.267316001 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.263390788 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.265814558 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.88625056 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.264695198 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.853160895 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.265128627 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.245955169 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.26474733 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.262707421 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.264673399 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.523127005 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.968426252 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.263882515 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263920531 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.266360155 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264815506 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.263643232 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.300538627 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.3460734 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.162919916 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.263373551 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.268732195 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300398747 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268843502 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.478504191 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266148252 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.352062823 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.327354267 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.362747553 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873393123 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.268140179 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359513031 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383655707 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.265783397 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.271411399 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.27176391 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.272272663 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.383994274 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.271706242 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.987435628 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.450102934 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286344057 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.751800789 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.368206933 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.269731728 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.62769052 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.26878983 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.269563362 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.021540904 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36361721 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.267277947 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.269628484 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269823702 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.986841255 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.271565934 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.882081228 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.546951294 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27019162 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.926810231 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.276060525 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.162374601 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.88870778 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911528691 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.273444214 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385148942 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452545176 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.287919135 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.270834415 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.801248429 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.270218586 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.330723164 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.271700925 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.672187028 seconds)
  done (took 386.136753931 seconds)
done (took 618.615586737 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.249415858 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.252931866 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.254207902 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.25234741 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.249787641 seconds)
  done (took 12.412676964 seconds)
done (took 13.565800222 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.485075168 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.4754308 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475332065 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33817763 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.48893611 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.49252477 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.395062023 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.340847593 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.463032717 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.48694816 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.473184058 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304233457 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.487143321 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.457402179 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.289445245 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.385324854 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.4126344 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.413250823 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.355240908 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385628858 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.506568223 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.306387575 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304168894 seconds)
  done (took 33.679689288 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.570828424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.287073646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339723723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.549194786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.319792362 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566268604 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.61674254 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.287989979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451642082 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.294910411 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291121303 seconds)
  done (took 18.732318714 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.576528116 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.2858497 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.359977549 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.559497122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.321911717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.583716392 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.631251919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.284829712 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458434502 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.296213357 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291552772 seconds)
  done (took 18.806498998 seconds)
done (took 72.37324874 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.3115345 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.376976561 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.305996754 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.289808027 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.288522887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.289235174 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.291755212 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.289774152 seconds)
  done (took 11.600590798 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.287710112 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.288787052 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.288319102 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.288478337 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.288576426 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.287857764 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.287569411 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.289622925 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.289987147 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.288865202 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.288139705 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.287433891 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.288347873 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.289753973 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.288009042 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.290808383 seconds)
  done (took 21.779485468 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.290685401 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.288553402 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.287484944 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.289650868 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.290303495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.289442644 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.290553796 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.2897562 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.288495586 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.288164117 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.290816418 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.289459361 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.290244505 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.290974734 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.289250263 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.291284622 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.290328234 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.289615716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.29471383 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.289619566 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.289786757 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.289793198 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.289623667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.291283938 seconds)
  done (took 32.12159147 seconds)
done (took 66.657769596 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.275671034 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.288329631 seconds)
  done (took 5.723047821 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.348188555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.349068099 seconds)
  done (took 3.859301849 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.292560915 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.291987625 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.290649826 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.290701989 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.290849437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.29187458 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.290918343 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.291939138 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.290036644 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.291126296 seconds)
  done (took 14.07241132 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.292241783 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.290459776 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.290145571 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.291757964 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.291577349 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.291969945 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.290630635 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.291444747 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.293409105 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.293403716 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.29166414 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.291817903 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.292750212 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.291700688 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.292358615 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.293807977 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.290645157 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.29185491 seconds)
  done (took 24.413809533 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.306575677 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.311699367 seconds)
  done (took 3.780354804 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.420061035 seconds)
    (2/7) benchmarking "second"...
    done (took 1.33558594 seconds)
    (3/7) benchmarking "month"...
    done (took 1.397836597 seconds)
    (4/7) benchmarking "year"...
    done (took 1.390228547 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.335788752 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.312954082 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.333126756 seconds)
  done (took 10.688536125 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.279986897 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.599741672 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.793534435 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.447423627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.273486218 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.297158451 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.272478533 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.303713983 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.301027287 seconds)
  done (took 14.731985678 seconds)
done (took 78.42796464 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.278664008 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.306383855 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.302169487 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.300094696 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.588205424 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.319193545 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.282256092 seconds)
done (took 16.5400951 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.266348196 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.260858466 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.263855848 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.291142241 seconds)
  done (took 10.24393454 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.280352715 seconds)
    (2/2) benchmarking "read"...
    done (took 1.607187313 seconds)
  done (took 5.050014608 seconds)
done (took 16.455703224 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294730698 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.294614881 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.296325303 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.296130567 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.296299079 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.295649884 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.296593648 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.296162078 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.296539907 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.296956181 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.296171542 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29596659 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.295309715 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294900115 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296094173 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.297200004 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.295168668 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304804987 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295983212 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296969433 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295948927 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.29540724 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.295870953 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.296517959 seconds)
  done (took 32.276716002 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.298103055 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.297666045 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.297547572 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.297336257 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.295601897 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.297694363 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.29729204 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.296694704 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.29604344 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.296940133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296209112 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.296058479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.296501803 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.296593693 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296160067 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297500997 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.297529923 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296806418 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297428705 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.298192522 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.296481022 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297691845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.298136509 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299755998 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.298368646 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296207305 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.29866497 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.297228101 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299106677 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.298676647 seconds)
  done (took 40.085704005 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.301659916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.304643588 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.296797653 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.297278904 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.298696577 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.298738322 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.297419478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.297705156 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.29959961 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.299348695 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.299394157 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.298390508 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.299549349 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.29827782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.298336675 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.2992006 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.299444398 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.299854508 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.299493935 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.298589995 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.300024304 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.299236013 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.299273465 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.299347492 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.300127353 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.300122313 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.298968652 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.300446762 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.300703544 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.300367247 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.30088069 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.301187228 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.301009607 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.300018251 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.29998712 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.299973725 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.305367645 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308302622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.300756137 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.299549694 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.300536207 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.301639478 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.300435967 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.300710173 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.300398714 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.301885914 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.302905661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.301458172 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.30158424 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.300816302 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.301172935 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.301513739 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.300634435 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.30009902 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.302837827 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.301882779 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.30272627 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.301490103 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.303033763 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.301957459 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.301724499 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.302643032 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.302418542 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.302071661 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.304244243 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.302866831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.302057504 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.302313827 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.302240761 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.303299049 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.303629024 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.303143059 seconds)
  done (took 94.831100615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.301748416 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303716254 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302561324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.301938971 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304097077 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.302295364 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.306028604 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304546248 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304022039 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.303427484 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303793794 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305133341 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30335774 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.30331278 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303128954 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302689719 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.30342679 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302037387 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.305047831 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303424685 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303111722 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302846425 seconds)
  done (took 29.847267405 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302928576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304702667 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.304435871 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306454109 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.304973548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304743212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302675574 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306073479 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305645284 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30349252 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304197012 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30326486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305603064 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305871792 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304478757 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30628472 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304549117 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.305583122 seconds)
  done (took 24.658248164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.30300261 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.305727398 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.304014734 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303574162 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.305416604 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.306721464 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30584195 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.306397063 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.304779478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.30566981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.305940708 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303883633 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.305451439 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307025524 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305063224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30584247 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.307066487 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306877352 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305527007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306678177 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.305929045 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306280612 seconds)
  done (took 29.897695064 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306087188 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304792722 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.30670656 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30565118 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305313438 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306137473 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.306661281 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.306647007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.308657229 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.307316159 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307078023 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.308460374 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.309207552 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306663115 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.307439971 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307368429 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307171526 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306548352 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306434791 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30785396 seconds)
  done (took 27.316195602 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308429915 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308740845 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30880956 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309114918 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307948548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.30909952 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.309170661 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.309413278 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.310134747 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.310632597 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.30977914 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.308762096 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.309832858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310644531 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.309793895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.310045218 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310484197 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.308668349 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.309059504 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308592545 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.310269284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309687162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311291711 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310386502 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311303711 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310509206 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.310676763 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311000193 seconds)
  done (took 37.847154593 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311783599 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.310797933 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.307530376 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.309814932 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.309615765 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.309970236 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.309060782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.310179349 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312140346 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.31153659 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.311615969 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.311618462 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.311612024 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.312980179 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.311420332 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.311106384 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313712946 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.31161944 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.309191887 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311834196 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.311288325 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312178348 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.3098213 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.311678201 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.310610006 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.311247869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.311961054 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.311836754 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310066715 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313577653 seconds)
  done (took 40.51413215 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.331492022 seconds)
    (2/2) benchmarking "in"...
    done (took 1.330398457 seconds)
  done (took 3.840322419 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.311667458 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.311547237 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.312598645 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.312924772 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313431311 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.312439433 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.313120839 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311856938 seconds)
  done (took 11.679167231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.305187504 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.312883122 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.315397714 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.313486462 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.312463121 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.305386898 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313911699 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.318071356 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.307790575 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.307325567 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.313605399 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.312807575 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.309661238 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.308068245 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.306778159 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30935401 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.317200583 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.314756915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.315450744 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.315846384 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315451492 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.310599211 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312471761 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.318572625 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.307881963 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.317447355 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.314768113 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.319891739 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.307154191 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.3122499 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.311307645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.318132245 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.315091182 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.315561337 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.31566752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.315906917 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317212714 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316208105 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.315724445 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.321379139 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.318056964 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.315777578 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.311001854 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.313355717 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313649277 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.319428118 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.316368171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.317259631 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.308207618 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.313416851 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.32382184 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311322075 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.319844362 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.312957746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.316540237 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320825537 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.324659313 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.312417556 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.316852568 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.320915785 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.327707328 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.324670682 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317171124 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.32246781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320491182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.334316054 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.322943782 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.323815929 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.319628769 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.317478003 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.318691652 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329428 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.330194562 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.324527642 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319022612 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.319696135 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.313755093 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.322379382 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.319805346 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.321974594 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.324895524 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320861135 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.321553818 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333192464 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.313941177 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.322934203 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.319874418 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.320145356 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.312413722 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.324808013 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.328246035 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.319795395 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.312114734 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.31544178 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.317607067 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.324358901 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.311927267 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.316529889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.324584178 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.321436916 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32124917 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.315942231 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.322843513 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327000696 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322215529 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.322252928 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.329183831 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.314169967 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.325053666 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.328668077 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323978979 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.314445006 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.320687031 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.324819445 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.316390964 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.323170269 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.326727665 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.317691333 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.327029583 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.320940438 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322600821 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.341892118 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.328767034 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.323050229 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.318758283 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.332474899 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.322955323 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.321150087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.328895067 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.321373203 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.322339346 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.318331636 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327499339 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.317711297 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327645725 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.318375308 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.326706628 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.320954501 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.322940531 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.320824712 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.322971318 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.321749106 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.322690948 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.326136231 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.331726003 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.320835272 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.330630368 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.323541585 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.322090709 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.325416211 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.330657814 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.323662621 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.317608256 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.327932377 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.3157161 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326061922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.317492302 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.328412235 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324576552 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.324674886 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324915374 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.315835149 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.320808916 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.328410864 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.32377878 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.324913322 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.329611816 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.32510309 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.324767632 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.317961822 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.327831712 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.316335804 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.320829545 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.331869926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.328641241 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.325944982 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.322871886 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.333671497 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.325297895 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326184584 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.322122801 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.328093541 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.33152035 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.327795981 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.334869262 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327514026 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.326725406 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.321408743 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.322035993 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.327854702 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.32019573 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.335617282 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334913246 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.340879652 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.321841074 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.330115478 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.319201783 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.329460485 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.327175178 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.335411023 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.326054069 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326982483 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320421147 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.329115532 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.321370291 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.331674275 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.319698998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331117682 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.32834085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.327174759 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.327781751 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.322635851 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.327007179 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.330938661 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.328751536 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328417577 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.321810781 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.33225406 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.319905227 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.322320888 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331898315 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.328105549 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.336167491 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.336458006 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331789429 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.339592404 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.336389652 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.331438994 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331354132 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334001151 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.336660922 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340122597 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.337348869 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.332078374 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341880293 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.33922823 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.329943546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.335917081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.336448361 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.329249747 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.329526058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.338227131 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331891302 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.332306614 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.330073279 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327349106 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333671381 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.336133866 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.338487389 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.325719057 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.335041252 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.328383874 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.33460102 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.328160703 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.332137474 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.330419843 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334937222 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.339712591 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.332639183 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.326749731 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.335104643 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.332003536 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.330899343 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.325229147 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.337315116 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.333855314 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334525006 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.330371536 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.330857168 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335429726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.325037755 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.333876706 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.325981045 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343319287 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.353326904 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336422709 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.337321125 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.335550416 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.335187271 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.336803778 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.329779598 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329398716 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331472472 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.330262164 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.329348312 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.337222884 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.327002637 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.336470571 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.332961676 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.335317946 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.336224073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.333346194 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.328904507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.338252978 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.333198729 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.333703061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.326830703 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.33699865 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.330086112 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.337932242 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.337561265 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.330838731 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342615386 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340141445 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.33324242 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.333760949 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.331085785 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.329248631 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.333156191 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.339349995 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.330785607 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.342348396 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.330035487 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.337398151 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.331719233 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343745961 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.345121267 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.331403256 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.341584161 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336371633 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.327540581 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.332031994 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.338040752 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341543443 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.348197332 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.329837444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.340891356 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336959995 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.337000444 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.336224716 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.337351249 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338022688 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335552904 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34456801 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.344386067 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.336503419 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.342799814 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.345941836 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.336904256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.335574548 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.332421013 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341279753 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.347719591 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.334609862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.338131634 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.334523759 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.338968122 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.335717735 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.337241027 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.33693401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.335697806 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344786224 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.347054146 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339458351 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.337689048 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.345586972 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349577989 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345857208 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.350585555 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.336125434 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.343791433 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.338379199 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.336610764 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.338580759 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.337342264 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.341692929 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.332891268 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.342360598 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.33712736 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.337981673 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.34413912 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.345460117 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.334942624 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.346453975 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.357980689 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.334227748 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.343070784 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.340152576 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.333347093 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.342016058 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.341101281 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.332884627 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.336961307 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.34134146 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346269548 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.334949097 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.343178327 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336170337 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342980277 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.339008754 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.339951609 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.341054589 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.341230869 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.335396011 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.342840924 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342288996 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.352577159 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.336237224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341901845 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.338541674 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.352288387 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.352494068 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.336569497 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.346868302 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.341452385 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.334154146 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.339685465 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.345898215 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.334887747 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.344299618 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.333427211 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.339557662 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.34073366 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.344116242 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.347824211 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.345161179 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.33460206 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.336002602 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344674694 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.341930633 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.340053172 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.338775538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.349736512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.335237162 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.335946247 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.345069357 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.336513373 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.348392065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.33778888 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.344589781 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342275671 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.348885392 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34343327 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.344682011 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.335918466 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.339198305 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.350990728 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349843069 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.344609697 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.343180595 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.34674234 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.338592327 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.342260805 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.345205956 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.339643315 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.341440619 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347519174 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.339035003 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.340094787 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.339802341 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.346076043 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.349724827 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.350465654 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.3381151 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.352475765 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.354991679 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350632329 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.337672298 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.341837429 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.340850919 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.353623717 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.350844969 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.339646747 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354066308 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.353626802 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.349077794 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34549625 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.347658759 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.338336656 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347808408 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352211561 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.341994282 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.361116451 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.342569337 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.353292342 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352728007 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.352640081 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.338092065 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.341143557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.343222397 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.343747659 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.350526971 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345917103 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.35306899 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.344806787 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.357399419 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346633149 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.348273963 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.346873275 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.338635223 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354542933 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.339810005 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.348235016 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.351213143 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.340870031 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.351370571 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.353331655 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.341066672 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.347966115 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.354086882 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.348147408 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.342127398 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.348477727 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.355677663 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.359602246 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.349027146 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343518422 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.347829338 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.354053589 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350724974 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.350446136 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.344376329 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.363073265 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.3642288 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.343570292 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.347569561 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.354553903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.362850364 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.349780698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.35148342 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.346848346 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.350744628 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.357776728 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.350790757 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355118964 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357932889 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.348443506 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.355322693 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.344802847 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.35074329 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.353985763 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.360157967 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.350656476 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.347734579 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.364951635 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364969 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.352169206 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.376022974 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.358158574 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.351112853 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.35735181 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.342671045 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.352893724 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.346362972 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.357730564 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.350175815 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.351946042 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.351634565 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.342205046 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354937868 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.358732048 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.360916292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352484194 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.343398246 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.346379605 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.353646642 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.35183364 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.353620377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.350872546 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.353080475 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.353209122 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.346769547 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367051276 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.373048426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.358667143 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.353397323 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.352321015 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.354113904 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.359147377 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.353209171 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.359103029 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.353575823 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.353037119 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.350287778 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362398869 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.353502174 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.347014855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.349576143 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.348871919 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.356703513 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.363110685 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376125967 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.35864682 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.358698523 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354516779 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.355924533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349246529 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356790963 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353576934 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.348198366 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.350755479 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356849258 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.357788646 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.355885871 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.349022342 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.362291442 seconds)
  done (took 796.988802297 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353782778 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354111733 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.354187209 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.354094635 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.354551062 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354146407 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354769603 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355581859 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.35469012 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.35360749 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.354262169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354925091 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354512094 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355372078 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.35484145 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.355469259 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355942351 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354867618 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.356720154 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35651794 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354700161 seconds)
  done (took 29.667209852 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.354751546 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.354437576 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354014919 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.355567296 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355004253 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355251071 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356136591 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356770304 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357348593 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356477205 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.35574523 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356834323 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.356537873 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.356485639 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357312563 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356957962 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357587954 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356967089 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.355857555 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355666177 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357270707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.35545396 seconds)
  done (took 31.050216878 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357809373 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.356812431 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.351547235 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.363398864 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.358785984 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.359661988 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.358126762 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.357617784 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.359337929 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.350998775 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.351618713 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.353799477 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.356322762 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.364994947 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.354260214 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.363552927 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.356127826 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.358194046 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.358200288 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.357291021 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.362969933 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.371006587 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.357915334 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.349613215 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.361991441 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.359402713 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.358089333 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.360338386 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.351187194 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.362719634 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.359158321 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.354274543 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.362847721 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.362959111 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.353038182 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.363576704 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.359870285 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.358769781 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.359145365 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.361468073 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.380703898 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.359689882 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.363890945 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.374079153 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.360660337 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.354656574 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.367418589 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.360451108 seconds)
  done (took 66.480243673 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.359537191 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.36101073 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.360717344 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.361240261 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.362209674 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.360997667 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.359779381 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.361796906 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.361584228 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.361806108 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.361699974 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.363377245 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.363961587 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.36383935 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.362640679 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.36136944 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.364345113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.360499062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.36242436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.362461182 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.363270462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.36113531 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.361991451 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.362880949 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362539293 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361632919 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.361948887 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.361421141 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.362478447 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.362867435 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.362718986 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360749117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.362999616 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.361725779 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361205818 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362586126 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.363659033 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.363192759 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.363251495 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.362153521 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.361985351 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363657599 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.362272819 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.362292885 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.36304658 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.363881837 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.364679318 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.362259515 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.364059909 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.363146752 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.364462034 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.363387445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.363037698 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.363815431 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.365614357 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.363456164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.365252704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.364932969 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.365891593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.364899133 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.365379281 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.364632366 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.364534321 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.36451944 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.366354376 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.364556284 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.365914144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365022872 seconds)
  done (took 93.903639327 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365277262 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.365854236 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36694234 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365257734 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.364104306 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.365211057 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364853458 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.365587625 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.36569276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.366284624 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365616977 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.365076558 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.366390227 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.365935846 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367481796 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367604919 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.366692385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.36869426 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36695403 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367398786 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.369290535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.367613173 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.367986183 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368624437 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.36805844 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.366297662 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.367710542 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.366907849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366761695 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.369068682 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.368404082 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.367041413 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.367179018 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.369923136 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.368021049 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.369465663 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.367564067 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367978335 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.36906676 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367989556 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.369265957 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.368612396 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.368504233 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.368272083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367304096 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.368017653 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.369605648 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.369967997 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.367604599 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.368321352 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.369396623 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.369465575 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.370567748 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.370042725 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.370482695 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.369386832 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368467014 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368831888 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.370147504 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367836601 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.368995432 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.36824239 seconds)
  done (took 86.027200593 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.369328522 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.369269787 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.371111993 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.36948244 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.370919307 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.370999823 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.370189672 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370979215 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370841164 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.371176051 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373221991 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370840661 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.372087294 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371863512 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.368693942 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374320548 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36966532 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.370823657 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37140503 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.371050725 seconds)
  done (took 28.645658138 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.371889761 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371315963 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.371982404 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.372235831 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.371742251 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.372560309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.372974588 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.37232307 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370455483 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371140956 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372399041 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.373693552 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.370304833 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.373194486 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.371812107 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.371407946 seconds)
  done (took 23.178993568 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.371361117 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.371958597 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.373012166 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.370866153 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.373359397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.373335677 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.372905347 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.372535619 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.373041277 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.372987745 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.372596577 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.373170194 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.372039468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.372663963 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.37166308 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.372419617 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.371136344 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.372783275 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.371480784 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.372115533 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.374358815 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.372821295 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.373254871 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.372957909 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.374366372 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.374465038 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.373492167 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.373938756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.372131457 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.373731967 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.373537972 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.373625893 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.37330482 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.37353894 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.3734284 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.374454791 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.373690602 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.375091013 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.373856904 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.375296431 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.373967263 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.374558666 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.375233004 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.374361751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.373668857 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.375044809 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.375449437 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.377729371 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.37509387 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.375180661 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.376655081 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.374289178 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.376455366 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.376895262 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.374500997 seconds)
  done (took 76.782403125 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.376545281 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.373912371 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375101871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376681912 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.376630415 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.375463419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.375543493 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.377289759 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377888402 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.376237722 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.377904396 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.377748584 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.37821404 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37749463 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376222592 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377487875 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.376744236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.375781881 seconds)
  done (took 26.010551941 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.377343839 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.376643851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.377461714 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.376951307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.376413166 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.377881902 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.377902366 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.377887012 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.377453489 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.379051692 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.37615118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.376656615 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376452067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.378187732 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376932932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378223677 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.378578363 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.378832013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.376143842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377882052 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.37814617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379129119 seconds)
  done (took 31.539120335 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.369302855 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.369095028 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.369597735 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.385245524 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.388266868 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.369007786 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.369020749 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.369109438 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.393878714 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.418883884 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.412635951 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.387080527 seconds)
  done (took 17.835036752 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379192033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378225467 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380488743 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380449552 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381677719 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381157114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381006121 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380915793 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380152482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38070241 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380959996 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379396617 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380698767 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380848122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381017714 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380535537 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3925365 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38071852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381010192 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381118031 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380687216 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381285019 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380547009 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381370267 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380658641 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381505709 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381582088 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382042207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38130467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381517084 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381150833 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38241979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382530887 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382726847 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380125668 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381931426 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382437208 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383324194 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382861599 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38207117 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.38173615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381585591 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382002221 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381057454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382356992 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382232135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383030562 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382173451 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382076186 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382494363 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38234514 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382919764 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383076499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381716508 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383866134 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382450617 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383747728 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383018579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381535718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38285148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383457358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38289955 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382709306 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383076334 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382695504 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381857127 seconds)
  done (took 92.438970147 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383470655 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.38383295 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383913674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384140791 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384672623 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383529338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384026247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384223246 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384414507 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384123208 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384186325 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384620824 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384247814 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3848448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385048142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383388163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384475741 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383978012 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384337537 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385138269 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384890829 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386914009 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386656968 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385080098 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.38532406 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385321595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385612532 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385525082 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385858818 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385575719 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385587407 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386031764 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.386865517 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.385923172 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386524896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386585828 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387661871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386685614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387132618 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385922407 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38673886 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386236656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387831051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387174914 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387783104 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38691539 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385427004 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385834488 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38740703 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384980158 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387862371 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38597355 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388018012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386614692 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387949364 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387451699 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389448546 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385690133 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388120421 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386638636 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387162281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387903554 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388272121 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387464524 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387744665 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387813325 seconds)
  done (took 92.713927958 seconds)
done (took 1867.219638363 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547582177 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.505490456 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.376540534 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.386954785 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.378478239 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.379625194 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.39123873 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.377391293 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.380135554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.37834111 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.378721523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.579652924 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.419691717 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.378635499 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.379210479 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.474763675 seconds)
  done (took 27.955919218 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.409563863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.387665235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.512121033 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.384490906 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.409391335 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.593666927 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.449444235 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.385675279 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.578397036 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.405448767 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.391512895 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.408421218 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.385073317 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.389083114 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.406952655 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.594539898 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.681501821 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.392345704 seconds)
  done (took 30.410096412 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.90612118 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.388870572 seconds)
  done (took 5.537646486 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.408143818 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389779059 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.386881949 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.386236423 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.375777339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.381151843 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.383939823 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.380839359 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.376238222 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.550080538 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.391954693 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.400291229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.384935786 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.385152427 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.393605247 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.433103207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.533939152 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.396179989 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.390450087 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.390245507 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.385145872 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.479055355 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.432124158 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.397404134 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.527667635 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.3857292 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.392139855 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.396657412 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.519538774 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.399815436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.385353967 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.387636915 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.386471125 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.380769847 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.957539763 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.383891889 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.418496089 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396342246 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.395597119 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.543734913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.389542904 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.392133814 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.392608541 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.949396854 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511431184 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.521256936 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.402286093 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.394315896 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.389770676 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.454509956 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.391909478 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.390129224 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.451816872 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.277819827 seconds)
  done (took 88.636845768 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.399419988 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.378853578 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.56945324 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.403069902 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.380734842 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400851549 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.384226087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.719989997 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.411086096 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.379809387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.73476813 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.048795179 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387611837 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.427598962 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.400859477 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.410467636 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.380735669 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.381427684 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.381271853 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.38562516 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.982575072 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.388897588 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.404413663 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.543472664 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.425530094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979876136 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.398787492 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.38615926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.380793143 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.383237202 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.013093097 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.393114074 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.418850295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.383677206 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.695913823 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.830278421 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.80488821 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.392597109 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425175191 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.388981466 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.381933619 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987224516 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.808251136 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.384428582 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.384755886 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.982773184 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.382776446 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.386897705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.389234686 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.656757783 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.386492156 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.386760146 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.382112331 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.408161738 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.382517541 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.443472533 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.404037741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979782966 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.385296521 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.389074012 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.390623714 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.387591866 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.391897846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.390876503 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.385835206 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811336386 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.552482972 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.387568806 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806253477 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.010010424 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.385248212 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102625777 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.384417281 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.394901036 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.461198535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.38666058 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.383307319 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.973433903 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.409774396 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.387309091 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.788291155 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.391358259 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.708811731 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.406805759 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.384521782 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.005368816 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.401468699 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.420411697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.385980618 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.387587069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.384649229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.388269972 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.699985414 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.434358288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.387575353 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.388021684 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.393010195 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.389192011 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.386359326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.391682052 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084206216 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.391783292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.38720891 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.388817766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.386229454 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.413100528 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.387863641 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.388972652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.66788946 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.391997818 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.410520032 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.390510229 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.386859284 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.396520563 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.541908313 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.392192499 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.744619384 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.389753527 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387122512 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.413518746 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.38665914 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.399111002 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.387541911 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.422142941 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.364746037 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.752337435 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.422438128 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.390743605 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.389138279 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389941259 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.389220444 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.393406466 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.417616721 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.395991269 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.210856361 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.397826217 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.402638318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.388780173 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.401455703 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.390440221 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.39794265 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.39175254 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.702218054 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.706020443 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.55064122 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394400133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.388668629 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.22561156 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.395395994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.57946162 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.407746838 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.391429016 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.705441469 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.636119663 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.391924548 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.391054135 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.388582347 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.674074798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.392051833 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.726704516 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.050097798 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.394868527 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.395270076 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.220352303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149576179 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.397391714 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.390452932 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.710891615 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.410030571 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.393939373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.392380794 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.392550917 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.392550312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.397009071 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.392454081 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.393856816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.39060267 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.505171719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.589975065 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.41280796 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.393416293 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998954442 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.398307266 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.392698677 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.422274673 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.396176003 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.392189452 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.41738896 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.392726839 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.395984487 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.395119048 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.399219006 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076072683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.397590545 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.401153338 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.592670411 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.184234777 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.397194951 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.394294532 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.393532588 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.427512917 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027910612 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.447496844 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.763854525 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.401733493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.43696327 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.397105026 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.495267916 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014082099 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.396883107 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.395005996 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.175471633 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.398521461 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.077854046 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.39588698 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.394796789 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.102112529 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.39683982 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.398531679 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.393348112 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.395907704 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701725343 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.397692574 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.429993599 seconds)
  done (took 512.385685692 seconds)
done (took 666.166159646 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.396206244 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.399293091 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.399566649 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.400788742 seconds)
  done (took 10.856690005 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.412026138 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.40294075 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.410080955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.40110082 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.410920594 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.40014816 seconds)
  done (took 9.698531948 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.395271533 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.399950978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.399513566 seconds)
  done (took 8.456683644 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.632598969 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.425463316 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.802765818 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.408638551 seconds)
  done (took 9.532384642 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.41900226 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.411415289 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.413221289 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.412682852 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.412762652 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.41629163 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.412631889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.412428548 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.415385493 seconds)
  done (took 13.985765974 seconds)
done (took 53.790790504 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.525293401 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.440691156 seconds)
    (3/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.558425089 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.565686131 seconds)
    (5/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.8386227 seconds)
    (6/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.434711613 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.472226439 seconds)
    (8/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.405801006 seconds)
    (9/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.377557788 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.379351065 seconds)
    (11/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.576369216 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.435458119 seconds)
    (13/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.379215121 seconds)
    (14/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.440122188 seconds)
    (15/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.521014742 seconds)
    (16/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.467868328 seconds)
    (17/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.617282304 seconds)
    (18/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.611588383 seconds)
    (19/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.550996675 seconds)
    (20/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.439008046 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.498255647 seconds)
    (22/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.669433954 seconds)
    (23/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381253854 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.379395089 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.405950006 seconds)
    (26/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.02007405 seconds)
    (27/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.382231574 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.527497567 seconds)
    (29/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.524919339 seconds)
    (30/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.666927115 seconds)
    (31/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.674866031 seconds)
    (32/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.698347408 seconds)
    (33/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.510455182 seconds)
    (34/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.541559821 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.394471469 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.438432618 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.482080446 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.377352487 seconds)
    (39/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.676864549 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.382839891 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.47783848 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.477167366 seconds)
    (43/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.39910535 seconds)
    (44/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.673768487 seconds)
    (45/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.841992377 seconds)
    (46/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.036422398 seconds)
    (47/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.832150066 seconds)
    (48/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.21778817 seconds)
    (49/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.023690417 seconds)
    (50/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.73170374 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.677317542 seconds)
    (52/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.385441531 seconds)
    (53/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.535672165 seconds)
    (54/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.383755317 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.504277586 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.507425157 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.695540779 seconds)
    (58/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.58449769 seconds)
    (59/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.474869658 seconds)
    (60/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.713232181 seconds)
    (61/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.522775409 seconds)
    (62/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.485245169 seconds)
    (63/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.558684633 seconds)
    (64/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.495281257 seconds)
    (65/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.608760204 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.440152297 seconds)
    (67/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.934277594 seconds)
    (68/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.731425746 seconds)
    (69/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.501486468 seconds)
    (70/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.508261576 seconds)
    (71/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.38342006 seconds)
    (72/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.49020095 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.92359766 seconds)
    (74/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.440205508 seconds)
    (75/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.559005853 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.495932701 seconds)
    (77/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.975728569 seconds)
    (78/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.734533182 seconds)
    (79/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.588417105 seconds)
    (80/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.491019149 seconds)
    (81/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.40453387 seconds)
    (82/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.801181137 seconds)
    (83/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.479520643 seconds)
    (84/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.381514924 seconds)
    (85/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.548051622 seconds)
    (86/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.509903865 seconds)
    (87/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.801265516 seconds)
    (88/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.852982526 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.57269713 seconds)
    (90/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.49283002 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.508500511 seconds)
    (92/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.622583224 seconds)
    (93/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.389411481 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.536191472 seconds)
    (95/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.406766107 seconds)
    (96/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.428195634 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.491723667 seconds)
    (98/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.382291753 seconds)
    (99/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.542063562 seconds)
    (100/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.385441535 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.612444195 seconds)
    (102/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.801320714 seconds)
    (103/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.437452695 seconds)
    (104/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.720481591 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.545298755 seconds)
    (106/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.454915349 seconds)
    (107/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.438621454 seconds)
    (108/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.97399246 seconds)
    (109/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.759931192 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.386631613 seconds)
    (111/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.45911647 seconds)
    (112/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.429181923 seconds)
    (113/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.401601547 seconds)
    (114/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.492913288 seconds)
    (115/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.493512546 seconds)
    (116/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.383237087 seconds)
    (117/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.522326277 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.409688249 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.592629583 seconds)
    (120/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.491841899 seconds)
    (121/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.221513485 seconds)
    (122/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.457644619 seconds)
    (123/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.530973866 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.387463148 seconds)
    (125/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.521108093 seconds)
    (126/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.489862686 seconds)
    (127/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.452396657 seconds)
    (128/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.469780687 seconds)
    (129/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.399190659 seconds)
    (130/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.45453095 seconds)
    (131/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.50942109 seconds)
    (132/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.438342719 seconds)
    (133/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.715547619 seconds)
    (134/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.390475511 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.44626195 seconds)
    (136/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.533020668 seconds)
    (137/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.384968063 seconds)
    (138/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.594931574 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.565478334 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.498678543 seconds)
    (141/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.673818293 seconds)
    (142/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.810152689 seconds)
    (143/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.390302483 seconds)
    (144/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.454313657 seconds)
    (145/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.433840184 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.686932722 seconds)
    (147/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392013356 seconds)
    (148/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464704424 seconds)
    (149/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.480475489 seconds)
    (150/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.51774053 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.388641433 seconds)
    (152/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.623626441 seconds)
    (153/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.563903644 seconds)
    (154/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.412554548 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.512011747 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.575698013 seconds)
    (157/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.706693405 seconds)
    (158/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.649060953 seconds)
    (159/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.421176856 seconds)
    (160/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.789568956 seconds)
    (161/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.797358015 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.548440796 seconds)
    (163/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.986637268 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.471432606 seconds)
    (165/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.553208299 seconds)
    (166/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.405078292 seconds)
    (167/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.485203645 seconds)
    (168/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.943210796 seconds)
    (169/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.392545151 seconds)
    (170/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.488882622 seconds)
    (171/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.395606861 seconds)
    (172/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.39074401 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.54552079 seconds)
    (174/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.701536333 seconds)
    (175/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.508812386 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.604016079 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.531580309 seconds)
    (178/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.730372793 seconds)
    (179/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.798082721 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.618956401 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.459677875 seconds)
    (182/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.63039658 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.624065136 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.413133399 seconds)
    (185/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.453678063 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.594364527 seconds)
    (187/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.452156016 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.393497336 seconds)
    (189/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.591263231 seconds)
    (190/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.486885578 seconds)
    (191/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.388884108 seconds)
    (192/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.037854829 seconds)
  done (took 348.164709646 seconds)
done (took 349.425833764 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.441541503 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.516461306 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.419522505 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.421092961 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.422004086 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.417972837 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.441094577 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.420897137 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.433992327 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.434696291 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.414838683 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.428251686 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.435863277 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.431073024 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.4532748 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.420590078 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.420777395 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.430103444 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.434938807 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.43750075 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421452237 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.422404601 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.449300924 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.422848671 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.431507101 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.42721591 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.426881388 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.421082227 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.42816702 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.434692247 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.425827594 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.428361389 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.440004441 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.433110731 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422823647 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.433148023 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.423967726 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.518637262 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.44336714 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.435061652 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.430681558 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.440047061 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.428924999 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.428289087 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.435532638 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.451340831 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.43219354 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.438429823 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.429015215 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.420736159 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44790494 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.43704981 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.432740163 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.414356074 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.426896102 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439501832 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.433448659 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44460192 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.433691462 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.427542865 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.458179158 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448002013 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.437309718 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432657883 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.431751226 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.439134882 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.433317187 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.44020751 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.43142035 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425919981 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424616026 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.432664855 seconds)
done (took 112.551221386 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.55025875 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.421102177 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.584812273 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.432749064 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.597524412 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.556546954 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.432817802 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.432636757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.431626997 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.231286017 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.434193019 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.433851622 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.422011095 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.432793343 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.550608195 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.433091816 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.433178424 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.126039716 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.434089208 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.560027198 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.426255095 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432845543 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.434793739 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.23423788 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.422519334 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.417393944 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.561987812 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.43330539 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.130182091 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.414999419 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.420022299 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.130506603 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.561841928 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.452030693 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.444055543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.442973219 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.601087017 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.436882307 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.551390311 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.550162583 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.587069827 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.473528079 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.418883846 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.423321928 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.436293487 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.434284438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433595561 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.463870298 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.422045538 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.434202098 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.129444712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.445647012 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.444101429 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.434706363 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.43369632 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.455122266 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.434893261 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.437423505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.561797576 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.435741439 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.552324418 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.235922179 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.234226878 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.4370887 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.421472085 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.43598608 seconds)
  done (took 114.76809136 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.495464685 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.50391292 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.549995343 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.430652195 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.477431215 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.549889585 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.429055153 seconds)
  done (took 11.718021239 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.43372429 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439176359 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.474755854 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475528338 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.43744152 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.601941753 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.438743473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.440772626 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.437922339 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.477204572 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.438033578 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440117252 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.447204628 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.427798321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.476075558 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.441086763 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.548471341 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.430744112 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.437587405 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.582960207 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438482492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.448735479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.480053382 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.441233251 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.439870555 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.436714118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.189272055 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437602978 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.43992981 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439718553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439795684 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.495733323 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.440105389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.42950162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438703048 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.544179774 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.439163274 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436603461 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.439086085 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.43065469 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.440480804 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.438265944 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.44159928 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.439453307 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.439510295 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.45398141 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.439242461 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.438985013 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.442170949 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.440474825 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.48025286 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441077275 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.439264489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.439271871 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.483524086 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.449101481 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.439855392 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.438455332 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.440576428 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.439107117 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.582684686 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.477948986 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.441382888 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.478629108 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440911316 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.441094921 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.441741756 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.442050561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.521720922 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.441546829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.48120454 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.441150195 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.614347211 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.457594593 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443484847 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.436268139 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.434930541 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443933279 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.429354126 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.439315387 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.441244759 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.434503875 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.438635591 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.443065726 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.442805272 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.592224716 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.540264743 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.442523503 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.449079856 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.440772861 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.442551157 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.483342901 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443228226 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.444200488 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486836488 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.553797038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.488359532 seconds)
  done (took 147.582418671 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.447964087 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.445855332 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.439127635 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.463050095 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.434575717 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.43355279 seconds)
  done (took 9.952570276 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.438273354 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.446244307 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.444033418 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.444672309 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.444552761 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.44563983 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.44708704 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43567967 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.449902278 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.444291083 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.445621925 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.444750497 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.445565201 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.446623405 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.45100093 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.446457568 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.449024042 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.447179838 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.447049129 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.446432399 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.432217858 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.449173233 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447887541 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436622051 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.452623889 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.446345974 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.460753477 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.446140577 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.446061761 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.442584185 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.450974258 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.449040636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.436927236 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.442501575 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.450928091 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.440954175 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.449627286 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.444814008 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.44592503 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.449503081 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.445525295 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.45063088 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.448156357 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.445529055 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.440733728 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.442504954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.448588258 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.463344848 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.449387484 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.445918639 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.447651478 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.446996794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.452239789 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.448899502 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.439846216 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443555342 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.45143893 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.45036958 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.447109705 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.443165059 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.454859085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.448670712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.442102205 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.45544293 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.452982734 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.448608726 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.443631483 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.45185958 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.447526892 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.451041782 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.449504952 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.451469395 seconds)
  done (took 106.472288128 seconds)
done (took 391.771781698 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.980263302 seconds)
  done (took 4.272163892 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.622673118 seconds)
  done (took 3.919880925 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.038251791 seconds)
  done (took 26.339282014 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.507583931 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.441282484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.453039071 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.440390148 seconds)
  done (took 11.135770207 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.956941521 seconds)
  done (took 4.251083929 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.440699332 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.468180381 seconds)
  done (took 6.204477756 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.738203521 seconds)
  done (took 4.032403151 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.295626039 seconds)
  done (took 4.597082125 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.455488909 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.444986369 seconds)
  done (took 6.201264019 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.412112795 seconds)
  done (took 3.705921884 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.93472315 seconds)
  done (took 22.23441373 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.46313888 seconds)
  done (took 3.764835186 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.476726605 seconds)
  done (took 3.7701789 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.463805947 seconds)
  done (took 6.758726989 seconds)
done (took 112.48143975 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.440692832 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.445749569 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.446505866 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.447100562 seconds)
  done (took 11.073545856 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.513968881 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.513997905 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.521148978 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.509397259 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.509978379 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.516189339 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.489868658 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.475862286 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.506554727 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.500976132 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.518707345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.509359051 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.517139794 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.475847945 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.500832507 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.519208898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.506883971 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.523943826 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.485554764 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.50894219 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.450876478 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.51004978 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.502543087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.450774119 seconds)
  done (took 37.335789294 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.967595373 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.521653731 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.604393794 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.501840778 seconds)
  done (took 7.890154098 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.557171417 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.558977331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.573500384 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.615209299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.648626099 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.570985863 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.479970892 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.473866026 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.460964723 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.558554477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.636086378 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.558389366 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.774370797 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.453185536 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.774068616 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.456144423 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.453094575 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.557482123 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.607642313 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.636445264 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.454428917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.555927559 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.563215275 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.557975816 seconds)
  done (took 38.834857845 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.460785198 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.469767941 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.454861683 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.469856745 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.455185516 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.454906507 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.456135146 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.461381598 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.453543975 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.454329135 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.456138567 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.469118928 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.454714574 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.457896973 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.462014247 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.457176261 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.457420021 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.462312287 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.46322504 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.455874781 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.455652852 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.462456632 seconds)
  done (took 33.404199895 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.440631575 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.443056826 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.794833451 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.697422061 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.44215535 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.443525041 seconds)
  done (took 14.557720163 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.532426285 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.683126019 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.451479308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.886016323 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.97798926 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.455731153 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.450495395 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.722944696 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.10581691 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.119174209 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.520710779 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.532501439 seconds)
  done (took 21.738259185 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531832373 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451463635 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449607896 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526618972 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454621518 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.452199265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.506921063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991466161 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.46035427 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.728133517 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466291225 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533776738 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.700688451 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452534323 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.458334594 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.42902654 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.685952208 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000513411 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453791842 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451858627 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490413854 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.463855916 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.69678368 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.453587556 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.451792788 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.716023215 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.454795454 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791953307 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773549601 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774489019 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.463525413 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732527159 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942858036 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565235412 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.690865099 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470874336 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.456652614 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.439821909 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.459563624 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472543502 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.463038574 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771064317 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469509981 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.461670045 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472681262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999381527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.472113312 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.461282532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.46124554 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.775557954 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551810668 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.467100218 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.461795339 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45162228 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465889094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.467988027 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573049913 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100224325 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456121379 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483676215 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.462077811 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464627789 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463989355 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236251266 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.470859674 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.462954059 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462977837 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.456992131 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468550413 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484603367 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458143799 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.478384699 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457876489 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365015293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467616372 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463273144 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064494187 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4745003 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.461079 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684520806 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456858928 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.458119853 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.457949675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.458816802 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293918011 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467669573 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.424500777 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48644238 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999715582 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.703948511 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481603831 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488399821 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.681558328 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.428129184 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.458547396 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.466382617 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.466151606 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.480820454 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000607304 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.461784199 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.46650221 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.707196454 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.671987081 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45971909 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445312553 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.004850019 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478657945 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.486765902 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.460260753 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728750907 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.188659492 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785382697 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465696107 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.501332214 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.459432625 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353611881 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47676622 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.470889085 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.462807952 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773541898 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.409194457 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462311627 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53371042 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.469451998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.459963864 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46781768 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.466619552 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45906327 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.681444773 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468594434 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779049504 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.468142232 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459710335 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.472340715 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479428529 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.466898473 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683438001 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479344219 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740240634 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459977013 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460627709 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460760022 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.681802028 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.474147267 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.472624255 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803108972 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461591543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.467656537 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.783852889 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502939079 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576552569 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496797255 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.478950443 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.716975449 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.469827514 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.468313385 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472552123 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.470536705 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464276621 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.471391361 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.459468666 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214864522 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439428425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468212721 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46510813 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.47753922 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538444247 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470108623 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704754712 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.468444127 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504460006 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.47574433 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.461797878 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691939129 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777985259 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.474264331 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645659963 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.979027313 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187243619 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.484404274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.465822383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.46281157 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.463267718 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465539967 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.463435832 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462933251 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704260965 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.78552552 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484817723 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.200022471 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472515903 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.479956948 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.477458705 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7797939 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.478662303 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.464093423 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.464386741 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470200068 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490331632 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.785274789 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.69104879 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.481098751 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464867275 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.027341145 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.474911496 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.465326519 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.465883597 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491795913 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.482988995 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065311938 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808753342 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.466706629 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788937544 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4872208 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.487877297 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.464520561 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480088238 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48404903 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.491133964 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481856598 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.709836109 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489017712 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47388681 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109062866 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396863723 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137104555 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486199504 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.475737573 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47260449 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.992574098 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467929271 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470653854 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750003694 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.991541556 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470207535 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98867658 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483963842 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.380192223 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789352748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.70286364 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478802522 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.486598922 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793005653 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.687696938 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497595738 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.470002895 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474954539 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.437189806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066097792 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487771978 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655609803 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992738419 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482032465 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473922549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.502836085 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.493691317 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941092708 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.474965468 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470382511 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481837844 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490121077 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.076658535 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477621382 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472570733 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200630633 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484458524 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.007435071 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474779619 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.712017111 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.789764955 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.767582752 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.478402526 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.491370335 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.7245871 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787768844 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478476744 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483481003 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148291571 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.337082824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.481303806 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471411393 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373728325 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472092584 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844830463 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.481180132 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.477697158 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487878586 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474471291 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47303329 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.472586944 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48311714 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445272889 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026056641 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.465469397 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477264235 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479474491 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480554951 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.72397641 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.492076911 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.198659566 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71129294 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.464040495 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51176781 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47788132 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490410039 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.450319385 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.472114243 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.472537085 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473562631 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.699095245 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472889435 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.447568674 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.547684877 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.689294973 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472055984 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483921688 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727925167 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.473564443 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.497902544 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416511253 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510360145 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.485164844 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479518879 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468310927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505123597 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548679745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713636198 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.7951685 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796648022 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949298603 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492060565 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.481373754 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.49133728 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55625743 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492620034 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.488671029 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.480148668 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195767012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364045123 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192031553 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.79708989 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480846551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484187993 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473594876 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716897451 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475337086 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751836092 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476662126 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.468734368 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497681356 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474879946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482547209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.691824912 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75101231 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.476790879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494540494 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481831422 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.477133976 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801442073 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.694416443 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035039046 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086020778 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478794668 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478952621 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032957815 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757860701 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477359608 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479759738 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478849176 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.48279327 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498898745 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.488049834 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479542319 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707836474 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794131181 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98792065 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80052587 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.504253006 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.355448809 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478993475 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.732286987 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320444765 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.724976128 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221570797 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341096708 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.739931302 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553853964 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725944966 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.482848629 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.716635843 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.479091051 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.484358085 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479379751 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480075215 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.47920645 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797675155 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221709422 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.741595623 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.485721091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.480057093 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51650852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.721490487 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.704614836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326565992 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.702150583 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804341288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49547396 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481830747 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223728773 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.809089013 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487209659 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.487806774 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730573935 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482899869 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517473571 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.359653654 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.480283103 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103666981 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.695529185 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503260791 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490517094 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.347835866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22931409 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.493232719 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045696486 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.484190008 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482832302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764472711 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.490417031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492123523 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77607144 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.488405102 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.494115317 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735004744 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.220628176 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.400879555 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.49585812 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506312246 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.489983125 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482712605 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527749633 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48636383 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492221226 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.941726112 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.487415153 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482934173 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497173458 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.489820525 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494777546 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.487434956 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485152805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.493989512 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.46376191 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.45698011 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.49962086 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.608057315 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08888907 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484610186 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099197061 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.820903073 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.734141114 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.494588556 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.457845891 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.490722559 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485910613 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484500043 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485626434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.477348835 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100724024 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.489494287 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.811257062 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.498433043 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.698811149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6980921 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486524207 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.740490613 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495712328 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5093154 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.455328284 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484574395 seconds)
  done (took 1032.801200079 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.531569321 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.501908224 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.554975623 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.507538373 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.512237623 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.624689076 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.492170912 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490203223 seconds)
  done (took 21.546500624 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.481399009 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.489737948 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.486433243 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.491803886 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.496149036 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.021624323 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.484291613 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.48589413 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.504121579 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.486370328 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.487879124 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.18719358 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.490204687 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.496648201 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.489507809 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.4897872 seconds)
  done (took 34.409715098 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.589390058 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.661108395 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.878207287 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.553529509 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.502269346 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.483199883 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.858152171 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.498347348 seconds)
  done (took 28.357781764 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.495093921 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.494262263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.49265874 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.493980587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.494922435 seconds)
  done (took 8.804716152 seconds)
done (took 1292.048026086 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.49547024 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.494512232 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.495098563 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.493914297 seconds)
  done (took 7.311530556 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.45715785 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.458834152 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.458222167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.477162219 seconds)
  done (took 10.185618473 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.919328129 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.122359716 seconds)
  done (took 5.375073857 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.489821961 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.254816833 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.240497317 seconds)
  done (took 8.318949897 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.797404511 seconds)
  done (took 3.13099426 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.937550768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.008967938 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.480101278 seconds)
  done (took 7.762651716 seconds)
done (took 43.415598224 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.488927291 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.247707307 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.634700276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.483596927 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.643565407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.637162436 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.753309425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.478532248 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.488812379 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.488215929 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.487470097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.646159216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.743377637 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.246327526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.745976434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.249587745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.644207183 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.481747168 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.484070864 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.500510897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.757510004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.482395013 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.489248312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.495667702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.649293062 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.627065364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.485631068 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.249087397 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.492453494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.500436816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.632951491 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.482808835 seconds)
  done (took 86.254692654 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.49039382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.490742006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.481586717 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.520033728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.481658351 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487695294 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.504007571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.480727243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.497312262 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.487587983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.482273155 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.501862493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.483866284 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.482090274 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.5021174 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.500731026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.481498685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503739406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.490184745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.483654919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504944779 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.483024476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.51803143 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.481808452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.521466317 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.485739696 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.488609307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.483650974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500453322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.481933766 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.489265521 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.48370454 seconds)
  done (took 81.094449827 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.482766013 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.489311619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.484362338 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.512951811 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.499321066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.489740658 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.503901879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.484237057 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.484898166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.490629445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.48623175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.486148075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.487731439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.486743676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.485208707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.485420814 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.497000886 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.491818817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.490913682 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.508845404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.487752375 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.485758446 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.484577216 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.488659437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.504349348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.48650962 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.505106564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.493495093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.486811555 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.486493611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.490444206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.509702428 seconds)
  done (took 81.07976813 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.728878818 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.501114787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.504524347 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.495690688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.504510806 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.503780517 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.495670512 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.734708068 seconds)
  done (took 15.811523899 seconds)
done (took 265.575253467 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.504977972 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.512591095 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.529482857 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.497865894 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.520551862 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.526386638 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.728756564 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.527143465 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.716516958 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.500063343 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.51299085 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.509934029 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.472346663 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.65350164 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.49330431 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.50335002 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.496619224 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.498204676 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.504977166 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.751511105 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.524663416 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.492680647 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497963379 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.519925809 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.472349006 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.577952732 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.572025428 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.664385553 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.630079106 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.572637254 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.50494985 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.505910739 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.513876158 seconds)
  done (took 70.355234883 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.496635212 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.505950171 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.506036345 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.507468664 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.507117161 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.506664633 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.500765766 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.506290687 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.507720304 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.507166781 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.508187557 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.507778145 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.507216378 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.504941717 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.506360056 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.482418699 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.499534522 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.506780459 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.496079988 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.480447325 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.506232559 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.507387212 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.508646141 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.507956694 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.507950651 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.507311514 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.506944891 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.508022993 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.506920746 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.507807931 seconds)
  done (took 46.471136812 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.509399552 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.492329096 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.512807296 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.516107718 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.50473058 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.508591778 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.864856207 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.51398539 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.504646349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.503804761 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.498376016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.515618728 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.558666861 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.519403417 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.511515006 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.509282696 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.510483546 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.505561283 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.497093785 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.525913113 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.871737897 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.514485742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.865077954 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.526852395 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.508402824 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.50723109 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.510066872 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.496381125 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.510445108 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.501318582 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.467449806 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.861739022 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.502498148 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.506382955 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.469736243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.515954789 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.511739607 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.506597677 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.509010031 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.502097902 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.852528367 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.507824817 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.515075726 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.500850768 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.509567666 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.511976222 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.496827441 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.503648945 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.79856527 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.507675418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.496148847 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.527193031 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.513102889 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.505416567 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.793864068 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.506540903 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.502879761 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.511795319 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.512743289 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.859388221 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.51674472 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.50459033 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.496389767 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.51021252 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.496834302 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.509986233 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.518034628 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.505780401 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.496702964 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.512833653 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.498107188 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.512666541 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.513807972 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.501134081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.503048374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.503566935 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.530937706 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.497790456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.517273267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.861785122 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.518703769 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.518547202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.877996591 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.516205172 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.515993406 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.516237699 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.514216643 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.57943355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.858911049 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.484863904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.526957053 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.518102354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.871606297 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.522058244 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.510269034 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.520622565 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.520753583 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.515480114 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.519568814 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.50679593 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.514237303 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.523665814 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.50385615 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.51947796 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.863886343 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.522951757 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.503858863 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.510704251 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.580618098 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.515699804 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.526128356 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.516328446 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.86656381 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.51604576 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.516333295 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.505028211 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.527413303 seconds)
  done (took 221.007167494 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.517868486 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.501519155 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.525736158 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.506300705 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.503616947 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.513364454 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.504207222 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.504146366 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.507263852 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.499088555 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.509030787 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.515579822 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.510260165 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.506142695 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.506060466 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.506064598 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.504133213 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.513012384 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.504985646 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.502163436 seconds)
  done (took 47.512486666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.518226185 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.215805434 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.177171527 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.520892268 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.51805865 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.512014234 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.579420398 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.524041726 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.518250879 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.884066259 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.729307791 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.524498627 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.518583926 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.518297296 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.171424252 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.497665551 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.884732234 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.222787619 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.525301907 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.218201197 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.497776926 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.51997139 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.510983917 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.220128806 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.899131865 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.874150445 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.588645011 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.228319754 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.52469309 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.519747331 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.220083582 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.526441792 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.513831973 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.203787329 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.525593579 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.534205817 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.520090255 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.582834198 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.585033932 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.894186349 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.234629564 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.884405737 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.537406236 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.694039101 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.527346754 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.498854998 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.233770912 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.529012597 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.496564752 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.522738813 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.528301185 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.186461151 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.520744251 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.188369204 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.527873756 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.522272983 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.222861267 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.191422595 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.183614981 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.730035442 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.518142694 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.871394095 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.527274392 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.232293073 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.529165218 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.522879695 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.522754944 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.729493399 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.229780263 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.878033149 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.899313006 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.898787529 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.528202029 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.594867916 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.527465732 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.8938456 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.597281171 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.944179643 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.897476397 seconds)
  done (took 139.92918962 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.821198626 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.639231202 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.973193337 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.179759424 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.095245545 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.667741226 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.639415512 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.784704998 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.51833826 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.63382028 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.318881873 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.624195423 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.372008133 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.597607709 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.629959266 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.64542239 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976388469 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.509746898 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.255993935 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.277460123 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.522978428 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.639816928 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.343476654 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.948241498 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.532558934 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.327812883 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.517557602 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.103775912 seconds)
  done (took 58.455197845 seconds)
done (took 585.069700816 seconds)
SAVING RESULT...
DONE!
