cset: moving following pidspec: 27471
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.188679283 seconds)
loading group "string"... done (took 0.534537082 seconds)
loading group "linalg"... done (took 9.730279054 seconds)
loading group "parallel"... done (took 0.16480583 seconds)
loading group "find"... done (took 2.445791689 seconds)
loading group "tuple"... done (took 2.214484085 seconds)
loading group "dates"... done (took 1.39674026 seconds)
loading group "micro"... done (took 0.19054644 seconds)
loading group "io"... done (took 0.50935375 seconds)
loading group "scalar"... done (took 56.722346143 seconds)
loading group "sparse"... done (took 14.106008403 seconds)
loading group "broadcast"... done (took 1.335311315 seconds)
loading group "union"... done (took 10.356689762 seconds)
loading group "simd"... done (took 3.604194094 seconds)
loading group "random"... done (took 13.400581708 seconds)
loading group "problem"... done (took 2.320806754 seconds)
loading group "array"... done (took 23.80972644 seconds)
loading group "misc"... done (took 1.136325189 seconds)
loading group "sort"... done (took 3.797125343 seconds)
loading group "collection"... done (took 20.688556622 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.750195317 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123671682 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202782068 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.221305864 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.260082144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167290577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.165005833 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.16319511 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.663554831 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209027773 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139156954 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43644505 seconds)
done (took 6.233933237 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.301423802 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.064493575 seconds)
    (2/2) benchmarking "String"...
    done (took 0.196751407 seconds)
  done (took 0.943910323 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082089557 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.164331934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112548848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.09882108 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096874755 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11223087 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097217721 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.113243096 seconds)
  done (took 1.474613289 seconds)
done (took 3.480552987 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.495838673 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.980747543 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.555398183 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.252741037 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307468372 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308436927 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.27444203 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.234237972 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.094420089 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.094967392 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.201502952 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.461607054 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.430170226 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.009519593 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.073554028 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.098454254 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.162841423 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.84437638 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083487564 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127696271 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50886944 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.222394177 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11997549 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111032623 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.190336102 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131552919 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.145538489 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106700359 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.719384097 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.138180527 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.213439582 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.087692282 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.145355416 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.17533578 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.223218573 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.115238363 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.750737045 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.205228882 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102140437 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.105453793 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.738774539 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.132954238 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.212844952 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.110889355 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.072568792 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.17148653 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119067067 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.082872612 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097437133 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106102785 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.175099643 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.521178144 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110085358 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.201477486 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09659325 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.769883628 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102977995 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284242583 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.1309605 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098746023 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.095410837 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.094597907 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.174479314 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099346871 seconds)
  done (took 21.112140567 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.194201451 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.212008927 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10034423 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.149647712 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.14985913 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085298464 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091857981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100069315 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.118856595 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.199563583 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130003175 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218539288 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080273297 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.111306479 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.172318951 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.25849482 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11305216 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.126238039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094860316 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.098434193 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.148328811 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.10140756 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117200169 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.101635529 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.175516422 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208883821 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116893082 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128899113 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094581754 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10304113 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147639721 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154575776 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099231251 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.095187344 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177280113 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.129154126 seconds)
  done (took 5.606211467 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.245087259 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.107593473 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.253586881 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.204904516 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134780414 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.207409419 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.183704472 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.308242507 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.276316947 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.168353042 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133003757 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101037832 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083459871 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.084217369 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102463753 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.859484711 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158559934 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.167452716 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190745367 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102730697 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102524593 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.724780693 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.108840812 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090048469 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.11623287 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.069585127 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.229261929 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098658784 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.488420604 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087811754 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12004986 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11855515 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.216733485 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127724715 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141500154 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100012106 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106039985 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.200906151 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.122014573 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083677808 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084096817 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137214323 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.140345084 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098220651 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.126095927 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.138696157 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.091044746 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112741461 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.080509419 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198678694 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.187365906 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.11086274 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283047542 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114612065 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123352434 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097138484 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.806381402 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127111294 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10319971 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084347175 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09921878 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100735871 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.826188 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110178351 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.445616613 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.101815263 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.145755835 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11900758 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.121682588 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090277101 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088469734 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.129992875 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090621924 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.083042457 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.107942452 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085099673 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.092234389 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.137863599 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089785505 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101525603 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.200268315 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.153770449 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103196452 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.129433968 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114641383 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.109215599 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090268515 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131922475 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08817063 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.092039809 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.206968937 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117896322 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.118682467 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118854697 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147603039 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095237861 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.280085507 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08885996 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126240734 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106478257 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090883042 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132774417 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116953452 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088932586 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084814473 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104964464 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089784019 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083984492 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084905627 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168028095 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092616691 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.102157046 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.094657202 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.096907494 seconds)
  done (took 28.782608021 seconds)
done (took 56.178580108 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.806110617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083258403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103587343 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.084949361 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082669844 seconds)
  done (took 1.907096959 seconds)
done (took 2.637006126 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.187523989 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.268266164 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.202743924 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.131790621 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154649637 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174036166 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.156188298 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.173132689 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.154071219 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.174005737 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.172463385 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111676554 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177737656 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.189429769 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124661233 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.191914496 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.107289934 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.152855468 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.111412128 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.178014719 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.108031607 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090935534 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0915552 seconds)
  done (took 4.333605016 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.110508004 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104535028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.107564459 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128033129 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092336237 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107274569 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125734914 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112516696 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106835436 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119717434 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093625866 seconds)
  done (took 1.947322566 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105450667 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103952383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09724124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.123903816 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092024213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1055077 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123001569 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113264353 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103818631 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.119579544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092284899 seconds)
  done (took 1.919115092 seconds)
done (took 8.932352211 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.191485048 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.992912846 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.185836455 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.250155102 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.332556146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.303027181 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.612547289 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.206162832 seconds)
  done (took 15.920988525 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.2299527 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096400592 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096268734 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099438245 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.119936782 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100518307 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.099519626 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.117153982 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095883323 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095397561 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.118059513 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.097891306 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096668677 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.096468555 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.120089799 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100836245 seconds)
  done (took 2.573113409 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142098738 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121140774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.121551808 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105272487 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.099573548 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121599664 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107065791 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102125631 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118447879 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.100885602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.106478831 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119728398 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104176498 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097695084 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.12088113 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123179962 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09906226 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.120436549 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.123342759 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.122146583 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105588965 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.102074443 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.118214024 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104481757 seconds)
  done (took 3.512828544 seconds)
done (took 22.746640305 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.156899932 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106679616 seconds)
  done (took 1.010278238 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.172062313 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.189197729 seconds)
  done (took 1.110436708 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.118404649 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096547612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.14386228 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108884792 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096644099 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113908911 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122227902 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.113312395 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098611176 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097251155 seconds)
  done (took 1.864822357 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.100131197 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.100965334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126828507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164238762 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.122229243 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100699002 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100400828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117752215 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.10256662 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096183554 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118220796 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114159402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.100842449 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132964363 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099969732 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.118730676 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105369218 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099837361 seconds)
  done (took 2.777700067 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096342282 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096404458 seconds)
  done (took 0.948066763 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.099518818 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095665513 seconds)
    (3/7) benchmarking "month"...
    done (took 0.097134364 seconds)
    (4/7) benchmarking "year"...
    done (took 0.116475762 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096548635 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095612426 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.113659841 seconds)
  done (took 1.469774112 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.545639794 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243614472 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377746602 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078636776 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.128082504 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.339473373 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.109890486 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.096612246 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078999657 seconds)
  done (took 2.778592254 seconds)
done (took 12.713252839 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097632257 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.213318379 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.620257488 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.135732782 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09746871 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156825094 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351708099 seconds)
done (took 2.434976239 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.349972708 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.183282692 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.090739157 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098190572 seconds)
  done (took 1.476285586 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.088794584 seconds)
    (2/2) benchmarking "read"...
    done (took 0.104500945 seconds)
  done (took 0.961209714 seconds)
done (took 3.201869938 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095652307 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.117418252 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.092822809 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.114323521 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.21865899 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092762388 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.113209586 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094748781 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094141604 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094004492 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.114524279 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.095627587 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.093757738 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.112024562 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095017426 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093605629 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093569952 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113348926 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094728626 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093349182 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110478656 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095435751 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094045727 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093456607 seconds)
  done (took 3.309914875 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.118057068 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098334715 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.116735324 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101318287 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100192734 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.115535845 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099778275 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097369329 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.116151211 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099783108 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099276957 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.115273504 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098176306 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100771865 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113372012 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101062853 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099079874 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113714847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098865975 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100733704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.116114271 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097820875 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099243794 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116607313 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.100329319 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100527872 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097921341 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.115088571 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099888097 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.099028515 seconds)
  done (took 3.915190503 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.103052604 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09305622 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.095170942 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.121215401 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093048781 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095861463 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.108778063 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096306446 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.096024905 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094797633 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114162465 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095691847 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094424221 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.113155394 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098015468 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097685994 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.12062945 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.096725603 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094992622 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.096100833 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116400295 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09567664 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094479836 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.114223926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09630106 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09337775 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094523122 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.114541802 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097056626 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.09548146 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.11495807 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.099371956 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095388981 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.12232147 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099777676 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.095130821 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.119467527 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093359666 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097372016 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091224117 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.110867328 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095955377 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09548486 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.118569732 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096557075 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096667651 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.095033701 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.116041321 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096799131 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097854889 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.111642665 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096736533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097072279 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.114574836 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100591908 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093149155 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097692672 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.11115515 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097049434 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.094378998 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.109645232 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.094651659 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100918763 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.095806977 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.128544958 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.102598608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094759851 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.115098804 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097880503 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100594563 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.116555323 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106283664 seconds)
  done (took 8.130104349 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09734854 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096450444 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.094995183 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.113925509 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09717619 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095641838 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093971912 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114456498 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0963681 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095177772 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114821481 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095863697 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095402559 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095546019 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115347768 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096725648 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.094810003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114388195 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097020084 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096127914 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095034158 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114206012 seconds)
  done (took 3.000163314 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244649254 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.103760948 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146145624 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.1286854 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113876275 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.129744887 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101582728 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102018483 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119611069 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10628886 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104968046 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119975367 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114757705 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.12249065 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107496455 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.107024674 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118716339 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10773165 seconds)
  done (took 2.977338564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.097592734 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.096188878 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.095100866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.114211794 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096204251 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097214123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095645272 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11470277 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.096351299 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096542643 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115527287 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09653749 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.096974961 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095808638 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116352015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095893273 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0957956 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11485777 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097769969 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096161968 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095694805 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115487151 seconds)
  done (took 3.013778082 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112319775 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098569789 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.134276723 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102002099 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097031424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.115251709 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.104357733 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.098960196 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.123147854 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099862114 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097960469 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097262009 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.13159078 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09970909 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104356709 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118421615 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099132399 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098979543 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11756661 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098155424 seconds)
  done (took 2.930038917 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.19218481 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133503948 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113626934 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121959637 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134342909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115880987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.14210867 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114598156 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113005978 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143097266 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114932081 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114583034 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140298395 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119881005 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134436386 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122807523 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121550966 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.140852875 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114571926 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13390615 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12544747 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11323355 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.144509 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114684324 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.132730063 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114840762 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113813983 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137448508 seconds)
  done (took 4.362827178 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097708272 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096548751 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095522719 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.115423742 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09753065 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095885496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09734241 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.11519195 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098145614 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096036077 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.116145039 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096887173 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096000691 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.096718179 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115521007 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097865447 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097353665 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.11517522 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097136216 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096241818 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096417503 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116619627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.09806404 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096594194 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115821732 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097469976 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096005873 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096443913 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116135433 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097637786 seconds)
  done (took 3.8401592 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.110595984 seconds)
    (2/2) benchmarking "in"...
    done (took 0.108478381 seconds)
  done (took 1.005837891 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101071277 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100741329 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.098768571 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.118248161 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099785388 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099115351 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117864539 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100255353 seconds)
  done (took 1.623590553 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.188483658 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.215754852 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.124397624 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.1103072 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.215801707 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.194405101 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.136219167 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103033445 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.117280959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090624655 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.206272267 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.088970888 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.117073864 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09536212 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.097685118 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122406131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100840707 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106594277 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.123695746 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100665888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103168187 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121274687 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100293365 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.109570575 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.091587777 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.120543099 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100479863 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.130733145 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095577373 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.099658905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.115230948 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099775626 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101588196 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102930344 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.120508778 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.215170273 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106466681 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094481238 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11920037 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103417198 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.128849901 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.121551192 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.10028606 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.096468648 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.122462568 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103347614 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103056917 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.119543988 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092274194 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.093980521 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098128253 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.113247576 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.098325722 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098911628 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.118448435 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104907021 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.10113338 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.114948899 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.095833254 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094088957 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.116697118 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094714987 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099873409 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.122194381 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099497724 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097971564 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.118360539 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099568176 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.099691015 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.119089272 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.099045508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113052173 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119249695 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103352844 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102881665 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.119863182 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096265406 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103820751 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.116251564 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.099104566 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101710025 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.145489628 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10202694 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095114051 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.113278171 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106922493 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10150475 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.100777759 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.111486207 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.106422064 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100801036 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.120553899 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091766388 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097169807 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.115003718 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102043995 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.09091844 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.119140931 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.09874925 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10465326 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.123484847 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098096698 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.100538037 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124863262 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105913964 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.096667172 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.16982813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094923788 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.093491593 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.120353092 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105120025 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.092097279 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.11883316 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.098621252 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094705228 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.113364207 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104923734 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.097495168 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.121167398 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.103284006 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099812349 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.11976682 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.101133579 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099159855 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095005967 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.123766773 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10699453 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099774518 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.122021882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101148947 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100659278 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.117676828 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.104829536 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094962598 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.12512964 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096206153 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.098473688 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.120748398 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104107528 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.098544296 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.114506513 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098849129 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.099419762 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.116936739 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102309104 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.099883433 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.095052077 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.111787356 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099783501 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094254139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.120855153 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107642032 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.093757643 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.122880506 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096168314 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107246242 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.115857483 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104524303 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100901154 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.125196322 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105578662 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.090135348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.115973477 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102134049 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.100486933 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.115026214 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101005255 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09989417 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105571177 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.112062853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103207959 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091835527 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.116846984 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104488521 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100964434 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.121981926 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.096087098 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.136147671 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.13180703 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106073332 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.097466232 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.119238575 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104293073 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097887207 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.123725263 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105897138 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104364633 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.095020492 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.117625239 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104639296 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094557174 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.121185801 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098214272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099321964 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.112895594 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101667541 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091479411 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.123104998 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.101527429 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105196881 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.124692195 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1025766 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098456556 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.127466278 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.096902171 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104283425 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09196536 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.125329976 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110331818 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106472116 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126156726 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101333578 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097436069 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.122055522 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108780679 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102774586 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.119932638 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101188699 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.093986081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.112594326 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105511503 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.103771343 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095194825 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.120349294 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101037967 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101159521 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.117552187 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.094139165 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10298738 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124199892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094617859 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098495877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.115455779 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09878379 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10680432 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.113413583 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.098350986 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101572962 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.124899345 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099678631 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.099742256 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.121396089 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106033634 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103941738 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.102196186 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117349021 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107669257 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.096766989 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.121426013 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.096590624 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103340276 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.113347495 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.101682797 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.100116136 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.116101225 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.096283284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104136068 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1256622 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106719494 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09852372 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.12412548 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106286624 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106718211 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097938489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.125928438 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.096385891 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.092553158 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11664297 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.091844116 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.112381429 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.115671984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.105864471 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.098215972 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.119528304 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104407241 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102253484 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.116433223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106086138 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110343152 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.114036259 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.093612725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098438672 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121372329 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.096977941 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.095866966 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.120729342 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10218215 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105313638 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.122031374 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098296783 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100673439 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106232806 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.116503458 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107358648 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105991322 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127014722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.096518604 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105126293 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.116483899 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103718242 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.094250969 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119175451 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098373246 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099566877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.117709123 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099427816 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.095209261 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.111806518 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.096959151 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106143257 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.117221602 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106641421 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.098821765 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.097039476 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.116419453 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095573459 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106303506 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.129397004 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107174424 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.10212827 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.113279013 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.093242223 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.106047575 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120246866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107933006 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.094412512 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104096094 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.128988263 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103969176 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101660958 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.130314125 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109110158 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106543054 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.125553383 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.093850348 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097702322 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124434358 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101577369 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.104241575 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.123610849 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.094452876 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101701395 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.125626485 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102408246 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098053321 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.113026116 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.10199257 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.107485205 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103848343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.125181968 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.102339764 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101154382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.116156649 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104131006 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.105839644 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.120083533 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107232074 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100668377 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124406326 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.097143063 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.106430735 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100957362 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.116018154 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.093377238 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.096612471 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.12705166 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.093968912 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.10481768 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.126178318 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.097402655 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.098209701 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.126779029 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.096940922 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103249952 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.125809841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.099041157 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110992802 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.101378601 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.118395285 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.105310298 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105811111 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.115385632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.099425472 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099243037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.128535915 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099774592 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.106549569 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.120950083 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.106520893 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.104179536 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125841702 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.107062707 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.105696219 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.093071096 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.129127171 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103399099 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103391861 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.118574664 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099102823 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.094637153 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.118873211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106526912 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.097359636 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.129154437 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105072356 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.099133135 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.117659565 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106593015 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09958493 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.126742878 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.098145406 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102399064 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.092915384 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.123027827 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099592274 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.107860926 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.118917847 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095361177 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105350488 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.127894236 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105336897 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103490072 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.127148759 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.094989734 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.094176959 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.124230538 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.097996415 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110390851 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.123206473 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.098542473 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09933402 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.123508292 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.103169272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106897618 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095002738 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.117869145 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.101181149 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1018077 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.119523828 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.095290777 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10516545 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.120168054 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102361838 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.098887209 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.116441494 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.099404709 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108370889 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.118963272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.097402872 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098632096 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12749571 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.1004231 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.099083147 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.094398287 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.126972433 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.103739106 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107820184 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.119098544 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100828308 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.098088638 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.125169152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.108422304 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.098566189 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121696565 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.099225214 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106913173 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126604835 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.094931755 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09812435 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.131328323 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106440639 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.101580963 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.125480627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100302929 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107590921 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128527157 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.104212609 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.096565895 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.094921439 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.119671357 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.095502519 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104955733 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.127279844 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10097248 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.098293355 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126598628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105589395 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.104285422 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.124642978 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.095870147 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108216423 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.097461601 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.125267908 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.095290431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093253287 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.12540186 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107659155 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.099688744 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.121877163 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.103582872 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104486243 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.116773629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.098927291 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.103986586 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126098319 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107950016 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100954471 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.099185671 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.125901339 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111796083 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102573706 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.120808645 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108337016 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.107678436 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.122146369 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.100849267 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10432404 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.129961891 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.104613775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.108669167 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.12252512 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.1014178 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109469142 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.129797399 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110461135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100218377 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.115496942 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10636358 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.098734219 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.115680896 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.105061698 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107604955 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.128481632 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.102117856 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09898643 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108044862 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12770228 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102265462 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.097483964 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.119884503 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106530772 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097782046 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.12587746 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.098523418 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10777218 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.128893944 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106793161 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.108601914 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.116067773 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10766589 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102994405 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.131042076 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.103149111 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.095748851 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.094909166 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.125320374 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108731321 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10700269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.125825396 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105911559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105323891 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.121711114 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.102285048 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.099517267 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.128061719 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107068079 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102889087 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.12228423 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.101231196 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101575319 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.10284986 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.129539932 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108152898 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.101668306 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.132159267 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.105794544 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.098250345 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.119844923 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102454509 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.103118085 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.122916277 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106717553 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09748094 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.115966206 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10755332 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10810439 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098790241 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130497996 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108219252 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.098677341 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.125724499 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110056246 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104277441 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.124414738 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.103556162 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102944861 seconds)
  done (took 65.73328041 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151138222 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109937022 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126263753 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.1045141 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119858121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126386654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10345666 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105101786 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.127113289 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113265405 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102563587 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125402736 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119751967 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144338205 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121764835 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112571446 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.124123594 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10492665 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102935347 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1250854 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120057576 seconds)
  done (took 3.330706435 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104620706 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104104789 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102133923 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125718189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103792849 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.102729162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102184056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124634119 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103560339 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102396918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.125666854 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104425545 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.10314435 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.102396033 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123988928 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103673746 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102225667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.123931587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.104384685 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103283128 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102466301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125018994 seconds)
  done (took 3.241350477 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.131747169 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107617329 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100962343 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.12530875 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.108379072 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.103952996 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12808186 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105903988 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.111470503 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.119914444 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.09489784 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.099481067 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100446553 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.124726095 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.097915023 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.10288688 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.133083555 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10764758 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108627259 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.124539963 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.096198153 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104311763 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10363678 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.116600757 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109650783 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108250234 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.1297108 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107930982 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.094254198 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.126954393 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.105028763 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09780603 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.093985804 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.117497517 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.095356051 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.106891838 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.127255948 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.105343692 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10517817 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.093472154 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.127346053 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.10869854 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.094295661 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.125867874 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.104011375 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097950508 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.127905917 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.104337019 seconds)
  done (took 6.116077973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133737315 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16215347 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.109000001 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.131789079 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.141279424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115218776 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.361022779 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.157766235 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105517959 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.106000393 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.144160613 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116200995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.132017665 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.111743316 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108129379 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.131263995 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110467562 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.107043422 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.13408197 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107604549 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111521635 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.131342359 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.118302126 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.136925164 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111443573 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10877507 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128369264 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111884044 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116599487 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.134511835 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112602049 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111379536 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.138797442 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110501374 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108729095 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.130519935 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.118932782 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.128946692 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110671366 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107016772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107553689 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133119349 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10875314 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.141103349 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110161203 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108759064 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.129374103 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107127008 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116347842 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.131440249 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114198821 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117827323 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.130958194 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110347967 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110080366 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.139113664 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.109088203 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.106181741 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.132450306 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.115923664 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.128516924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.112125048 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117589594 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.130275926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.115793157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116870707 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.131892629 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.110692926 seconds)
  done (took 9.384500766 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.139334856 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112582024 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1430747 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119532946 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111662761 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.135278943 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11332434 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.110567966 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.13579772 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117357814 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132538603 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219485153 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.132275597 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116369479 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135293844 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112533952 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111310966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.13463612 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112349279 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112565246 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.132303589 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121895763 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111148134 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.140131308 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123177088 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12985181 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113020206 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11126701 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.142542653 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113570229 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121935218 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.134216772 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112737387 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.142442046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124802302 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.111666057 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.128557674 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113829385 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.110752287 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134688001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110046878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118922053 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.135444225 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109549215 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111869065 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.134561283 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11884566 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143484839 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11717284 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118631194 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.134729786 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120950334 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133207876 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112861433 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119864321 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148156405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119602743 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.14043708 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112796699 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119525879 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141786503 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.125891353 seconds)
  done (took 8.63546172 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105591138 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.105602976 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.104009341 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.126192747 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105789606 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105719194 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103976062 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.126639303 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.106145948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.104176278 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126950496 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105878692 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104971931 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104616898 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.126754319 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106257673 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103890764 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126720384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106326951 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104800802 seconds)
  done (took 3.069439023 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.107821641 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108442359 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.106892237 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.129363817 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108923075 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106786318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.127901962 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107565523 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107391602 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106662557 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.130477716 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108637725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107245364 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.128417848 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108549914 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106842567 seconds)
  done (took 2.667381728 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.125814481 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.122235811 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208016795 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.108953511 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.131044981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.114891209 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106777313 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.131415313 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.106971534 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.112948642 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.134021829 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111018943 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.123745993 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.130974722 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109396676 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.109334789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.128410193 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.112483089 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107695775 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.210509469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.110472714 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.132868545 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1097519 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.112020759 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.132298318 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.111952221 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113079749 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.130523492 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.110290521 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108936722 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108544017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.13718231 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108260793 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110875566 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.130819183 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.109359008 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107536144 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.129847185 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112231674 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107812492 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.131897683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109628252 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.108468174 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.131545533 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.106757144 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108697384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.105407888 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.137918015 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.108275431 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108031851 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.130982482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.113563173 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111085003 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.137381465 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.116251626 seconds)
  done (took 7.50818871 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11947496 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108886046 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.140868765 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106844053 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.110160106 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108750329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.131334182 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110652736 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108920556 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.128422648 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110737153 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109119011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.132914729 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110041677 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110042131 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.130668978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.106611369 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109356031 seconds)
  done (took 2.958576848 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106939957 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105891433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105785105 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.128017842 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107876215 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105770241 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104975232 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.129516901 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106443557 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105761144 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.128264621 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.106590083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106428684 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.105348927 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.127404633 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107185927 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105758978 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128356878 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107753199 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106131249 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105536769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.128778547 seconds)
  done (took 3.335684985 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120366024 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.233235135 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.113624188 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.241423461 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.129190718 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.103971871 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.114282734 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.127475628 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.1219045 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.104162633 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.12776466 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.104116819 seconds)
  done (took 2.508908862 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135613491 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144321502 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.130835661 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110410313 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117138175 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135586028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113754427 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112581445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144511982 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122975226 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134774847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121193526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120232227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.142309416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118132065 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139530769 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113535739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112127401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13080494 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128826153 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111957127 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142040926 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112848855 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135035164 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114521054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119690377 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143109734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125279048 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112207941 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144038704 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117692324 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134124616 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123448676 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122760116 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13208889 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120801049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134911354 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128789358 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116677409 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143237752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111411775 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116022808 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142443588 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118228211 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143756146 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114212361 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118069034 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134352856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113811511 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.155905047 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118289758 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120811903 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139626874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120840755 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14281312 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133483367 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145988906 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121833406 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116548213 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147370623 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120291728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139928353 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121429894 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144992698 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117794381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120608827 seconds)
  done (took 9.277807324 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148834783 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110287114 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135286674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124900614 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141874937 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113739074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113379094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135434476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115218685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109996815 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.177904651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115031869 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144185981 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122732374 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113881605 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137479035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114366213 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120644354 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132912067 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133657186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135225199 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121861401 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119552947 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.143962739 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123458284 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140478126 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114737712 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113076545 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137119999 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115056886 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118750479 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134773984 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122094537 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109454979 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144579703 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112974524 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137056887 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119923637 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11380708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140057103 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121573419 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150690693 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114336601 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113773921 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148164492 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11394486 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112917203 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132232525 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114407907 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110446651 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.147630399 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124347452 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.146941616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122177983 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135481909 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115186475 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113956572 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135980803 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115316197 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117797641 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145492828 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118161119 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155789466 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114665076 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11466544 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143854695 seconds)
  done (took 9.258149683 seconds)
done (took 175.902362479 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.179794533 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.221314575 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.204145323 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.191854226 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.099717467 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.166394062 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.132528909 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.205139261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.099441158 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.098016008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.123812954 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.101718782 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.209589133 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.124116279 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099915948 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.101430888 seconds)
  done (took 3.229801066 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200865798 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.345816184 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.137223225 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103426397 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10572606 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.104287779 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.127036228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10687322 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104456775 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.134855709 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.105353693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.101275084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.132858519 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.100139873 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103787592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.126611451 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.110766692 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104581072 seconds)
  done (took 3.239833788 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124170984 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1570478 seconds)
  done (took 1.167407347 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134943714 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.220545119 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.299437718 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.176843053 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.125280369 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.146386972 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153679356 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.140732092 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.194784901 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.14134884 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.116914878 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101738616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.153004381 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.11068626 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.144029606 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.103493115 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.132252205 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.142204466 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119778415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.1054514 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.151176002 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108542146 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.108817343 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.143129643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.185181197 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.139699123 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108336485 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10695712 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.129360568 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.1186722 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110081211 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.14437554 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.116856887 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.183011053 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107507293 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.179981984 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.13431265 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107027713 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.119229633 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.126463146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.108850009 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.108322881 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.141529225 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.103758666 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107384627 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.133042965 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108501909 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.106966153 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.135077729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.111845423 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.134445784 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112138082 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.178439802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111537852 seconds)
  done (took 8.181369369 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.911116227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15447213 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10401148 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063157755 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150447419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118777862 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.93428633 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131688893 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257960302 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.935883388 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120546613 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134765006 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.249520626 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.284648182 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.256451423 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36485369 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.767654931 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118577555 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157687597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.150916153 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133910596 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124528877 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120190998 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.461587014 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.104840133 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.128721325 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111460152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114634668 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182323689 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104563803 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.132687907 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.205509763 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.281847388 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217562374 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128562813 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104407645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103499857 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.193784896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275535983 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224416204 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.197714998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102320767 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12693513 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110137509 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119831311 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124543806 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165870615 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.199630548 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199687 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109766103 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136965988 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112392298 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130774181 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163615672 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.125971462 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.366527208 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.372138831 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10300621 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135007378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118436726 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271525334 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129397801 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.245358365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126922794 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219378426 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.127043039 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811246299 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170534235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.127447729 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109237219 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109955944 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134210162 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108200331 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.189308655 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415459892 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134544671 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1104279 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104452448 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236233156 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.128951856 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105072701 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185790532 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107867456 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110147242 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135588528 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112439264 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.196201087 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.278842365 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112088227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110517289 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.133976752 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115596255 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.128276501 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213713889 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234981267 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.184540202 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23968074 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10900757 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189855532 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.194527395 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109414211 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196529521 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109542905 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139534584 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108398297 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231405534 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.164892489 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106732264 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.133311166 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111595732 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.168480346 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109455609 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.111241125 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.194837553 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500914695 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.200451394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.102969829 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109751031 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134547656 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162145142 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136583649 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271076502 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111892079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192559934 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109975269 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.125995169 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111075699 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.189410459 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11251526 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13418803 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110016005 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11445474 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.28647531 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228979484 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137442098 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256835718 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.179484219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133802918 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177855124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133332938 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191613369 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117485793 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108592699 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130386584 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.811858272 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118134194 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.111097024 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.136284393 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190062062 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129218608 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109435698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105372864 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12539266 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794336847 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109421858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104628886 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.13132925 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112086688 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.112056776 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132943651 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111956783 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.190385717 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.25481266 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115607873 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.134024755 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10614578 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.186396533 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107101684 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.131228307 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.106478212 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107398303 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112092857 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.134078383 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110151827 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196391526 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.185649373 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.240517575 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574003708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105495212 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.129331651 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253388257 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106836027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.334085688 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135376893 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.24648503 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.190600036 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104437059 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.366444348 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192848872 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.212314884 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.110537331 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.199159778 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105408267 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.112271453 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186976179 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.105620192 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.1371701 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186320456 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116564037 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11157712 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.285090566 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.107751065 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253838637 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.104814685 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.197563184 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108513919 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110480437 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.35611444 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106762321 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117265646 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187278556 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110786341 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.130430036 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.977967193 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.107276679 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115245765 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.133496217 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.245400275 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.189859831 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112295611 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112147388 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137720896 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.188522965 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211252152 seconds)
  done (took 48.055851031 seconds)
done (took 64.749666144 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266442453 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.174861502 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.372641386 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.154543731 seconds)
  done (took 1.927221795 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263067476 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.177150538 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.246441915 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103765528 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.253583711 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.103595562 seconds)
  done (took 2.063225622 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176098859 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17249674 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149151307 seconds)
  done (took 1.413552652 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214659247 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213281123 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.351116941 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.239010684 seconds)
  done (took 1.99335881 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278589735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123717445 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.133620248 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.230841037 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.247546302 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213887556 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128330789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.180683973 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135961726 seconds)
  done (took 2.617285699 seconds)
done (took 10.930199062 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.28323147 seconds)
    (2/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.346441657 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.325523101 seconds)
    (4/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.213285192 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.356571567 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.295678362 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.167328344 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11202768 seconds)
    (9/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.240722449 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117305469 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.307858918 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.255998312 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.14707906 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.208178128 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.437541126 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.083999383 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.152622968 seconds)
    (18/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.180844298 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.242581395 seconds)
    (20/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.217163375 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.254246921 seconds)
    (22/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.1393311 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.134307992 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175739051 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.324486316 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13184674 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.14163551 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213483027 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.112494617 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.170187263 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.082522564 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.403377677 seconds)
    (33/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.257525645 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.326725862 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17501767 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.163389918 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128572169 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.107192423 seconds)
    (39/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.178224378 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10786573 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.261089987 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.117982302 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.115584451 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.157515099 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.284214449 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.208744634 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.127148019 seconds)
    (48/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.192298816 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139872652 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.183575521 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084530332 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.151677388 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.190152612 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.137060854 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.152446371 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116711504 seconds)
    (57/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113397138 seconds)
    (58/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.146509041 seconds)
    (59/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.087121378 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.107597344 seconds)
    (61/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.198015092 seconds)
    (62/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.39725739 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.121860742 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.086446591 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.116416348 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.197242491 seconds)
    (67/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120620697 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.179778058 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.090086164 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.129445442 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.178757462 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110395609 seconds)
    (73/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.115387727 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.090947806 seconds)
    (75/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.163321728 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.177616234 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116330554 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.20899279 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.140461358 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.089601904 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133812549 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.196769629 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.153677207 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.112360835 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.105055009 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.140155399 seconds)
    (87/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.15389732 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121907455 seconds)
    (89/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165781014 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091727123 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112361325 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130054265 seconds)
    (93/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.115503276 seconds)
    (94/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.146334833 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106366205 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.130515841 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117956757 seconds)
    (98/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.140020955 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.108560161 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.117333868 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115896921 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084848341 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.099443118 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.157138183 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.113278419 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.143314137 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.112240608 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.172813857 seconds)
    (109/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.108450947 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.17165527 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120249771 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.107893887 seconds)
    (113/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085710134 seconds)
    (114/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.141692467 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09297174 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091671084 seconds)
    (117/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.089190678 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.134491097 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.136991611 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.179740956 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.142007219 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.095310324 seconds)
    (123/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.087922564 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.087826806 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092797349 seconds)
    (126/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.119952252 seconds)
    (127/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.139236337 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108412357 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.134539083 seconds)
    (130/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086170996 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106068085 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.087250538 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.116090473 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.092231067 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129095732 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12861788 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.141584042 seconds)
    (138/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.091125563 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109088095 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.139987446 seconds)
    (141/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089145482 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117862969 seconds)
    (143/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.148947391 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.110229992 seconds)
    (145/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.091003111 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108661011 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.087933745 seconds)
    (148/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.112091468 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.108939956 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111955653 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.0861983 seconds)
    (152/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083914107 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.111067391 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.084717225 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.091090127 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08757301 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.084974572 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.117642221 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.086744237 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.134004457 seconds)
    (161/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.087142021 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13499385 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093655359 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105671742 seconds)
    (165/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.091995604 seconds)
    (166/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.11593968 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116538971 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109348364 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.133580219 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.131210469 seconds)
    (171/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.090624257 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091569514 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.13810783 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.091527751 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.08533022 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.141715811 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.117550722 seconds)
    (178/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.090686389 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.087186852 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10573484 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.086225983 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.134701299 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.129239479 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.091367723 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.085164553 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.223216817 seconds)
    (187/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.117637631 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.132147817 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.09333043 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.087987208 seconds)
    (191/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088603302 seconds)
    (192/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.145058332 seconds)
  done (took 28.521933492 seconds)
done (took 29.441188347 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.229750826 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.136437527 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.115870797 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114593026 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.238682702 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123062968 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.159925262 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.118389097 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.12637967 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.142334292 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.107164333 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12939896 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.142397622 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.250993237 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.119988217 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.109073597 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.133212315 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.128401367 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.131408513 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.160576715 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.21228242 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.136222436 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.127464861 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10635114 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.238231213 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108693458 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.143509593 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.116981027 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128729855 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.142877316 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117896122 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10667223 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.158277702 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132687923 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107838579 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.141361381 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.107843465 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.091407076 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140324707 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119669448 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.130812625 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11677068 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.141544522 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108413671 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.117686793 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.142026907 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108844023 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.119422833 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.131831084 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.118706951 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.109435643 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.15752782 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.116984174 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.105671057 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.130862839 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11029589 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.126868648 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.131389531 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130796236 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107250081 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.132657842 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108529972 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118776802 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106168473 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.14168175 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10928233 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116270279 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.145908487 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.116950197 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10866652 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.130779093 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117711494 seconds)
done (took 10.475337722 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.112509018 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.151409782 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.251848988 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.256212977 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.162390937 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.123750472 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121563212 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.157037765 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.121487607 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123788855 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.170000186 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141427557 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.2578281 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.123384749 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.151960597 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.119536964 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119191969 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.141449229 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.254775284 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13321106 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.129996456 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.151708736 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.133587604 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.150032717 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112620978 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134417726 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.140917504 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120866163 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.110380421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.154177175 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133950385 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110663716 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.140120427 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129730597 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128038601 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.146608589 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.123520251 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119082571 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.137573703 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.11236515 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.1439392 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.129070903 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.111782822 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.148831428 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121004652 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.127355825 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.142844603 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.125781248 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.112037439 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118727801 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.137917204 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.13649112 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.148758 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.127941515 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.123623903 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.148484204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125564717 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.124228001 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.139722463 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.124946979 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111471043 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.135827211 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114113285 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.132186757 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.140211267 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124665264 seconds)
  done (took 10.145926075 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131942721 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140886035 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14798955 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1227528 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.116755994 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.131367131 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.106166311 seconds)
  done (took 1.866735401 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108409663 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.273683494 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.262674391 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.26203609 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.250788138 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.270025631 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131520999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.107897676 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.170026758 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.119789539 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.270640585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.329475776 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.145000657 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.124771127 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.266377515 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.106595463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.265388659 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.134837762 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.123389073 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265735359 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.124738979 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.16624534 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122089139 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108754925 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.265226442 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.136384833 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.313837213 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.127736984 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116891102 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.148410117 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.124266496 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.212579249 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.268185019 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124094293 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11591442 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260881824 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.253195227 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121448407 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.339612633 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.112909791 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.250163617 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122418661 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.151532709 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.123905639 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122927531 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.250732496 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.153978701 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.124851286 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.12168413 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27504003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.146929439 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.270412238 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122538902 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122317506 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.145130243 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125545572 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129598661 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.149801557 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.275846014 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127205885 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.26386983 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.264218836 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.256529783 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.264096819 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13392519 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.270299382 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.245715104 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.122772421 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116300581 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.152389023 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.266883787 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.122101079 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119864457 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.252681511 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154893465 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.269329098 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.268142979 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121712838 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.121345664 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.139024908 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.123100836 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.108782847 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.255981488 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122250788 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.1496557 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127633619 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147855591 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.124705727 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113716725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.158952815 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123787311 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.119433591 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.154348598 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.124750753 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124454529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.267108101 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.148800175 seconds)
  done (took 18.258868533 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.112558399 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110472083 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.113429748 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.136814493 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111047499 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.110047213 seconds)
  done (took 1.689028861 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.148244088 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.124721378 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15802323 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.126256822 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.171673046 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.256423456 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.264219227 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.145306821 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.143837446 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.13517207 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.256011298 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.260207829 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.258403724 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126580058 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.262980411 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.125533976 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265429581 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.150152584 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.133176422 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119855111 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.151084714 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.127998685 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12122942 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24815938 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.123593927 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.154048649 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117284285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.160970933 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.133261946 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.117273435 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.154576669 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.125596555 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.115146364 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.144211269 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.263574987 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.117728216 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120342067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.154452951 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126835298 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.124232066 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.261445404 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121000744 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.159164542 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.127023652 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.144829829 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116464919 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.125951578 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.14361862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.235246795 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.155013583 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127176266 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124090922 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.153765941 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.127956675 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.142124388 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118795068 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.126038576 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.263523086 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.154140459 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118874741 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.124399505 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.151217565 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.118829876 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128973347 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.151475234 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128045256 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.115265491 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.150946588 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123144541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125010783 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.152216393 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.125956223 seconds)
  done (took 12.174865826 seconds)
done (took 45.096847385 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.57130311 seconds)
  done (took 2.564813567 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.127389744 seconds)
  done (took 2.124537226 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.49702599 seconds)
  done (took 19.525852331 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.449215722 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.45078276 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.03676273 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.15453024 seconds)
  done (took 3.086767023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.117531857 seconds)
  done (took 2.130533941 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.418155668 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286470454 seconds)
  done (took 1.70606707 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.73224354 seconds)
  done (took 1.740184333 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.895646069 seconds)
  done (took 2.898772042 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.308227696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.251378448 seconds)
  done (took 1.576011993 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.674918348 seconds)
  done (took 1.690186045 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.716101624 seconds)
  done (took 20.737554334 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.262973884 seconds)
  done (took 1.285496682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296885515 seconds)
  done (took 1.318373906 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.685386656 seconds)
  done (took 4.706964959 seconds)
done (took 68.098414894 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.125776208 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128706187 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126684605 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.151062176 seconds)
  done (took 1.54287429 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12862381 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.145185823 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.126641516 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.149820657 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.128873176 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122084559 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.149604494 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.126653631 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121634855 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.151648672 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124351226 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.122005464 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.151989782 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124094086 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.121367692 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.151738382 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.128563757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123364676 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.151502416 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.124357397 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124411748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.150473488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.128421434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.126604007 seconds)
  done (took 4.227667754 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121399084 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.114262355 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.115633021 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.13942387 seconds)
  done (took 1.517507452 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.134038549 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.136600037 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.159918493 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.131188264 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.135324331 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.159587505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.123979489 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.121175542 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.149752258 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.132846708 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.138374122 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.163271134 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.134656321 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125588569 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.160445116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.119283488 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.124345877 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.161300425 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.131121476 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.156836312 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.127807986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130374882 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.154062558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13456649 seconds)
  done (took 4.368716799 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.201122725 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.135996702 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.177271189 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.169340875 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179778343 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.12228245 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.150086327 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.156107758 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.129424245 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.131091512 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.151008662 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.170727856 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128734348 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.154035487 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.125183198 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.155157232 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.13322174 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128088054 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191537943 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.128104523 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128253334 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.162828111 seconds)
  done (took 4.337704289 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.128396525 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114207813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.13943054 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.113633392 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.125349578 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.141978467 seconds)
  done (took 1.789983637 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.115137231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.109114415 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.108290805 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13446479 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112584293 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108605099 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.132879728 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.110386711 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108403495 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.108379643 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.136377677 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.108928577 seconds)
  done (took 2.418259534 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21321882 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152442633 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257692528 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395111538 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194796433 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193570878 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.286088532 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197897765 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.182500682 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170537096 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21558668 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168426956 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185809386 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193320925 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174682004 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.164952513 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206227544 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213716905 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177579795 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243445686 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163475712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211101498 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19491873 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183673923 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145511451 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196299589 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.125389861 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132556731 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202230354 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198477498 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181141462 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183913872 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147673801 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22693709 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265837755 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212215656 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30080145 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140406345 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.205668617 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.195439578 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262995151 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17334729 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22374839 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159291867 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133017422 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223333449 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18739529 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.189985418 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.166876798 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150227509 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2149573 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184868711 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204901563 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140608068 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.335165689 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166509583 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147891184 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209553726 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192180716 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234042947 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212670773 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.127954849 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203312327 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222246466 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221020577 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175154861 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.170075864 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15789689 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169707599 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.240058455 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217007813 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164258313 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223954659 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135028983 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206502067 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170201973 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189765686 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240254117 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176475455 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.152922576 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156737264 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166575238 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132173303 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.193176815 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155047292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246770982 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137862929 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187051013 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210989876 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189339784 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167839107 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193998232 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167399745 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182191329 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.107896121 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146955604 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.194826462 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162233682 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163109537 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15984841 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172995647 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133841003 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185079017 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.129203154 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17291569 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.169061156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168104555 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203656833 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.136809084 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21364724 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152123772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.198785096 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201755992 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199018038 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163024253 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138530948 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253927378 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175162597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.171289632 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176636969 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228932049 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.183612179 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14073173 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198034221 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198383633 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17689155 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204224017 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172107844 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139561389 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.174990416 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177936928 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195118812 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.164222337 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160787273 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.170342587 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220664212 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130228033 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172658211 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185664179 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166905903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128942232 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168416678 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141200502 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147523625 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.186285342 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.143866421 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190169156 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171219983 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199672129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161733212 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167999196 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176937485 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166073912 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.172249959 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182410451 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.12405292 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.210119322 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200074482 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164755224 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184609667 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.198958207 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212346733 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177626624 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162801983 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18748894 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162092241 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.125944099 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195680537 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174390725 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198014892 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191498559 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209749722 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.198725339 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.166871715 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185087538 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202454125 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.187830032 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192268986 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148211587 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20948245 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174374612 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.157234663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.127889716 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130788414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172424544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136024692 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169495135 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186984795 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199311938 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204606306 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175581048 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171330026 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195192943 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.159101478 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164696399 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.209809804 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14339041 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222425365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194802175 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214984678 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173076112 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167635474 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.125432676 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159834486 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13776335 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198394965 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141022946 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168403322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14688812 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225469477 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177816133 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183512214 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219853299 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170766853 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.234002045 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.125400831 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.195274629 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169865223 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203717005 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.188955466 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163835447 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.166032884 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225985605 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146545896 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226464871 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17227264 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214247369 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231269857 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168892702 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163880822 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153502464 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194033052 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143172616 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193352283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152159735 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134035135 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186464033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.141590475 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174078901 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219350133 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150265146 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214033347 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160510613 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203254639 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129468732 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174166638 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179093862 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180456108 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.111328495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181915215 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22705777 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184768421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161426819 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203700295 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135033484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34888104 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185108841 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217441499 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140803677 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175110379 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17601954 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193180038 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167682895 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22014658 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173635919 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212551735 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204950516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.146513625 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164254938 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153360202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185529588 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.145944687 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.185406253 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.171019791 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.176498672 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192827231 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172153301 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175230243 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210729357 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148631189 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.183998274 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144224196 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258795591 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172289718 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209313234 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.197254854 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.169990839 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217004962 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1289869 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13099191 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.166407565 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190251077 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163641372 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182089602 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.197527965 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212662039 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181100843 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195052393 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145105178 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.162714706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170712694 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184504172 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214394641 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141712756 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.140980136 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221506839 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131762405 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166392226 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163798862 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.324156533 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150984331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20263607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111566303 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.315083578 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134697161 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16632679 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162975195 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204805319 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138927931 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.216697221 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179442609 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143603338 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196491288 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139339029 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210730379 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214039092 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171002082 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210905593 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.180655003 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166105745 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198898836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176533616 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181260691 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.152466744 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19245889 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198888609 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.21027928 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.136688542 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203884432 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17320828 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205583414 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177038486 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172560038 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18655403 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163299378 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168615474 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172761169 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130463281 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194768264 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168576303 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16398548 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175839846 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20645014 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135341294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162527377 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152770859 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200702263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145888833 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.133926258 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220114351 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.162692169 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187995053 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245125903 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134576889 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202104028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150965958 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163571565 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144248527 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148478338 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166943934 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.181671357 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213538886 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137468833 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210585413 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170932488 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19923475 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163571915 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17856754 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.270109517 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.16412029 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197073684 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185399494 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20000809 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184672265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20884135 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175462689 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155699394 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200613881 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181906192 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.22560391 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199652418 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.171239874 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163995426 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148322295 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142665134 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.168477893 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15551098 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203778322 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146307816 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.170564663 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.172198973 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178425048 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.153741644 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145893081 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233852281 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18597628 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192261682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2222094 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142789275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210929007 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208299739 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134301097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.198191064 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178993783 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177728282 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157546948 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.138004374 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.173269338 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249544497 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.133380284 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164702724 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211329936 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171935395 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209482013 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.138459234 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214101539 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144760673 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21203366 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131118293 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.190245965 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173447745 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170083516 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.133510822 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206814954 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166086945 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.200384453 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146916403 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.183084243 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226037684 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127683374 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169174934 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314327779 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16866122 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22922149 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.143688835 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141504929 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182150235 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163072931 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.201537019 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.710451227 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.164891524 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133888756 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.179806549 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.166167204 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173876669 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173681193 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213842287 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166937851 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219864244 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138973509 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.287309972 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146572436 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.205143745 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.123756522 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133304199 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176245859 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140911324 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173677298 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183761097 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251415048 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.196780225 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.153707853 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138909522 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.161034652 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135311186 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194395136 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156653034 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202794206 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153758267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.10830118 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176571121 seconds)
  done (took 88.541653753 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180394865 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.180113115 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.194100263 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.243337438 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.219117298 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.314156726 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.255679724 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.272463489 seconds)
  done (took 2.97138207 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.126044713 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165878083 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.148769019 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.151185028 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117048159 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.533511643 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.169015503 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.126347449 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.198261262 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.153195902 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.117351732 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.579838193 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.120780532 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154415305 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.153220426 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.115764429 seconds)
  done (took 4.240639854 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 15.579806305 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 1.966986739 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.212814789 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.317111788 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.431225195 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.218281292 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.829454034 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.23293886 seconds)
  done (took 25.903888989 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.17752 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.173658219 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.466401149 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.344148547 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.219830004 seconds)
  done (took 2.498392005 seconds)
done (took 145.370396598 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.130461827 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12993434 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129643792 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.162652506 seconds)
  done (took 1.660849376 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.200761405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.097573156 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.130050296 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.097122323 seconds)
  done (took 1.644861387 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418571479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097435887 seconds)
  done (took 1.655896292 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150701559 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139644619 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170325102 seconds)
  done (took 1.590588891 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.141927217 seconds)
  done (took 1.261808006 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122991897 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.121305556 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.28125753 seconds)
  done (took 1.649643624 seconds)
done (took 10.588092847 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148327422 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.935419128 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.454611578 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139884328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.74682425 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405617758 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429971503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183581149 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.188952809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.14678751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138171564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697323908 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.446498019 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.886522148 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.40130777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.915011501 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703711216 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117559991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152218332 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116887752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.410609122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14678887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117499655 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117970876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.786965543 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42567985 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.114967765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.926141303 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115730419 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12008133 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.436294769 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116631836 seconds)
  done (took 21.303679686 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157818812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172378725 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.166908489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116725056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119677233 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.148585146 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126671657 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155621375 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191833386 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115485896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.169296499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115861345 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121103994 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.148331298 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140623689 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114591578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.152632993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119001054 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123187749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.149044105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138415005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.115422649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.14811819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120008548 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114798007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.168368105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116969455 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126548019 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.147383128 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.121355573 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.121850944 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.148370625 seconds)
  done (took 5.543761774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166354854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182565952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.168424706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155096284 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.196832966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119900518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.233760755 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.157183717 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225174713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118246817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136827284 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.147022788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15829043 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116256884 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.172999479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117089373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120140395 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.150270051 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124512175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.14575953 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141873603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116070916 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145461041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120725319 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117968258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167886961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118619994 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.128675647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146085417 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12364242 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124170144 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14701201 seconds)
  done (took 5.842736216 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13348366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131644546 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.140277188 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.173086649 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126504491 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.131361673 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.163023356 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.128639695 seconds)
  done (took 2.259717797 seconds)
done (took 36.077338601 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.141174396 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.134298194 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.137958334 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.163097381 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.280839211 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.125280349 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.135629533 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.156255451 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.133286843 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139860929 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.116920452 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.157453474 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137325016 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.128219742 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.278332052 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.167170523 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.285641359 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.250377808 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.160615 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.132493404 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126397432 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.28538006 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.166013554 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12717203 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.278472376 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.121608211 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.273211747 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128561333 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.161598885 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118698253 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.284567009 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.128164986 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.124817792 seconds)
  done (took 6.812993594 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.233085349 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.159521951 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.128920744 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.125951286 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.127655443 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.157157527 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.234680587 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.160270003 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.126087339 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12531321 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.158001815 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.217879094 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.165478326 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.1224659 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.128103237 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.116959114 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.272741982 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.127035896 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.151817119 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.10175033 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.122005658 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.157030576 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248968077 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.155121861 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.127746338 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.126527839 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.126938231 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.163852437 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.129076306 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.12785443 seconds)
  done (took 5.775077232 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.132192363 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.139031636 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.147252171 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.224688297 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.155884089 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.169997034 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.14265681 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.13663485 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.179602169 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120821555 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.134227535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.186769629 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136412796 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129330411 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.150283709 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136150863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133966557 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.151565495 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129307404 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.137138849 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.16957772 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.137282112 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141247256 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157765442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.119428618 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126394064 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.159218871 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.13179712 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127226352 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133912363 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.153966998 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121347228 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120817227 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.185903279 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.120466623 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162139505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142394573 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13157397 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.161288532 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.153622407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.121361773 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.151403464 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.147130095 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174689226 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.15187991 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132504551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12110657 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133309272 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.148797314 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.138081666 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.191688337 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.120136715 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.139487196 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.147996989 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.118810381 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127894495 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.118791317 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.154852 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.134489744 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11983808 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171273283 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127013523 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130784104 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.151928418 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.131236836 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.118654545 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.117499169 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.155116832 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.146547006 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125814854 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.187257001 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.118642626 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.130106257 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.163219995 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131557602 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130949036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.150794729 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131819815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.131084912 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.15438971 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.132113133 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.121034369 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.150812916 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.136344786 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.138901622 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.165436552 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.132201695 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129244788 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.150973909 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123165725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13619564 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.120299774 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.154029964 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.131825146 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119039816 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.155106058 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.131533194 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128052835 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.147724891 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.146070178 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.122224906 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.149748638 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.146169124 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.12284237 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.12186079 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.162820273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1608457 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.148892919 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130159035 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.129060315 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118979712 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.159058691 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122489693 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.117562121 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.165758813 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.135468892 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12571012 seconds)
  done (took 17.6792113 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.379463632 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.367922514 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216648156 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.411867269 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.132450542 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.288980652 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.399941225 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.372769615 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120029209 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.186470164 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174701905 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.332556713 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.15409267 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.148211597 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372345626 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.45124222 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.149100102 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.191382943 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.155752149 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.16574202 seconds)
  done (took 6.333841049 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.129785906 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154726032 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.172865166 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138610751 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.129890924 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.166858483 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120633105 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.141789889 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.161819726 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129474049 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.122494288 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.127122654 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.165492443 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.136749627 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134870945 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.185520596 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127585253 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123380845 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.173850914 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124274727 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.108022734 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.177020133 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128905695 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.140004262 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.168846293 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131152375 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.117601058 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.156609585 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.127116538 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.128998972 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.153961824 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.129247496 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127168984 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110376821 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.164335429 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.134601921 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.125682855 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.154214602 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126162447 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122226547 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.163866648 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.132837263 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127885045 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.105207949 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.171469372 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116822207 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.133734116 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.161126678 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11255607 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.140414194 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.131283915 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.165778138 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127818376 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.141792527 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15815472 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.136638508 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129443989 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1656572 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.125645851 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.118058801 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.149697193 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123972419 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.128688521 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.163855739 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133632923 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.128352974 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128569984 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.150909222 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124654691 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122123434 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153229825 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.133865435 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139215798 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.160493427 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.128081683 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.129020603 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.158044641 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.10135029 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127947606 seconds)
  done (took 12.121248344 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.145983653 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.131026046 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136457757 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.186997991 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131938521 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.125444348 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.161921667 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.139664981 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.132782871 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.170551586 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.134387755 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.133286686 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.173619871 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130522284 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128995558 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167746121 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133321888 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.156815152 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.164006911 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.146469746 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.16604994 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.125609662 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.132664676 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.131178933 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.18104808 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.131345401 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.177294717 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.133054844 seconds)
  done (took 5.291585751 seconds)
done (took 55.152837491 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.329167422 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.517397598 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.284509493 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.284641447 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.316765659 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.342669667 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.28752404 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.284077918 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.861818811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.259736073 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.2853235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.289124391 seconds)
done (took 29.513457374 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.426488983 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.423071124 seconds)
    (2/2) benchmarking "String"...
    done (took 1.59721236 seconds)
  done (took 4.189928362 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.274421149 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.274713514 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.519793259 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.274210453 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.277100982 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.274312117 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.281789801 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.280252384 seconds)
  done (took 16.344330269 seconds)
done (took 26.399493988 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.28348967 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.5522581 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.540836999 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.275372565 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.275895943 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.279316778 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.28135357 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.333794335 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.289728594 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.275573934 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.736431605 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.557899673 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.279000524 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.671843541 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.269770951 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.287650864 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.292133343 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.60615435 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.280865366 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.2655592 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.271585696 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.283816682 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.289201597 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.296366135 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.287728256 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.291248498 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.256400184 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.279358976 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.532407488 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.282120869 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.271320759 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.298790405 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.273883758 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.278761476 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.302336953 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.283240846 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.544038547 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.288916065 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.277069629 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.291142804 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.545200001 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.304005932 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.277266251 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.285500585 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.260238601 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.291908248 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.259471651 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.403687882 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.320523177 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.277357476 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.346799406 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.65608737 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.283692112 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.278215872 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.292159438 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.585487127 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.312099885 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.37638546 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.320551129 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.279776267 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.279507621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.278516924 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.320278174 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.282125066 seconds)
  done (took 149.096220173 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.278731006 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.282214536 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.283604233 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.305654978 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.285308818 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.283502537 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.279152353 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.278288867 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.285836912 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.312425266 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.285369692 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.280128645 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.295837852 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.215834629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.289212551 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.301703501 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.285001767 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.288239475 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.29048932 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.280195613 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.286779158 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.285501555 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.302556194 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.28509909 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.292117774 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.37443633 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.296229862 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.305510886 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.295799969 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.280051184 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.294529645 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.291935129 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.289982735 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.148480857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.289920783 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.330516271 seconds)
  done (took 83.503031027 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.281280531 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.280797661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.282206826 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.317085661 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.280767614 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.934466505 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.937032813 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.348532934 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.497222782 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.871317057 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615083697 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.286039591 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375216477 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.294052052 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.287617177 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.37785395 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.30770668 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285848086 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283140879 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93090053 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.299835013 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.822075955 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.470298057 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.301207911 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318993156 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.677968934 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.284033956 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.318188605 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.626497924 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.337421072 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.283609313 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.68837699 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.016983901 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.40311318 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.285981131 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32018376 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.284941703 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.572918597 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.28309624 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.284520662 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.287113627 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984146656 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289078418 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.938462269 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.28903995 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.317883984 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.287552502 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.283443423 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.459691077 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.099576236 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.289339687 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.28461217 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.287211158 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.284623271 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.283557081 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322270096 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.451501494 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.229999109 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.288727674 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.288670228 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321319109 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.284173172 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.784548154 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.285459359 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.442551979 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.341007944 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.393025128 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.934603726 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.290181419 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.384390185 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.408646861 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287766201 seconds)
    (73/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.284931988 seconds)
    (74/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.28619965 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.284937312 seconds)
    (76/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.40109068 seconds)
    (77/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.287362328 seconds)
    (78/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.016849542 seconds)
    (79/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.473714808 seconds)
    (80/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.30637988 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.288356537 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.880394055 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.391258876 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.287963553 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.717367932 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.290141222 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.286466695 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046845542 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384732463 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.285807481 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.287664054 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.287485356 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.026670362 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.93717557 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.616707904 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.291843176 seconds)
    (97/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.975703095 seconds)
    (98/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.291817773 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.195730129 seconds)
    (100/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.904468047 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.285577698 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.016300237 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.29243503 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.287292801 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401464882 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.474716278 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.30577335 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289562626 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.288568901 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.888472552 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.291969806 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.344873675 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.2955281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692321817 seconds)
  done (took 389.703531938 seconds)
done (took 623.467421041 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.267408221 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.269228147 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.268930861 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.269642029 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.271048748 seconds)
  done (took 12.51946177 seconds)
done (took 13.695864418 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.508133572 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496353241 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.497921416 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357674593 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.514904747 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.525294909 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.421551292 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.362311734 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.492195088 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.521331169 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507241363 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.331172584 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520422916 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.489565124 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.312784527 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.407484871 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.438499995 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.435579267 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382491501 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414848871 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.540892724 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33512851 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.325346484 seconds)
  done (took 34.315472478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.602353926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.299809064 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.355978089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.589751309 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337564336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595793357 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.634984713 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301361284 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453260034 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.335986877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.313402932 seconds)
  done (took 18.9968592 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597106356 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.303549359 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379551952 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.632457148 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33892634 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.602095612 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.627977937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.302862217 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.466577048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.315643773 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.314038419 seconds)
  done (took 19.056270617 seconds)
done (took 73.544459288 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.330798119 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.396930311 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.326203714 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.310667258 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.309128328 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.309093469 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.311911083 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.310292925 seconds)
  done (took 11.781600218 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.309142566 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.309493746 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.310340307 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.308874562 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.309825736 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.309060349 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.31009344 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.308804139 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.309128696 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.310230346 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.309017739 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311066007 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.308374205 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.310452012 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.310789256 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.311510695 seconds)
  done (took 22.133889087 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.312730968 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.309670895 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.309603202 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.310231919 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310405582 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.308326138 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.311491741 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.30982156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.309947483 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.312796086 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.309383045 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.309942311 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.311030793 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.309741998 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.310820502 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.312572225 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.310388169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.310211504 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.315372711 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.310827024 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.31155868 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.310589159 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.310013347 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.310908239 seconds)
  done (took 32.636540242 seconds)
done (took 67.730642345 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.296086284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.320099907 seconds)
  done (took 5.795923788 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.37194358 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.368871757 seconds)
  done (took 3.922691357 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.310442384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.310746258 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.312838881 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.31253357 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.311611547 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.312626839 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.313509829 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.311406479 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.311849605 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.312525028 seconds)
  done (took 14.300626127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.312387011 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.312051207 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.314615834 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.312702706 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.313198938 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.312578532 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.312263859 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.312725974 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.314436612 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.31367644 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.313917498 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.313838418 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.312664135 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.312255763 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.3129294 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.313199167 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.313171345 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.313072205 seconds)
  done (took 24.816077131 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.326428425 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.332274387 seconds)
  done (took 3.84108105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.441979295 seconds)
    (2/7) benchmarking "second"...
    done (took 1.354174234 seconds)
    (3/7) benchmarking "month"...
    done (took 1.426383163 seconds)
    (4/7) benchmarking "year"...
    done (took 1.411533309 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.35540168 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.334900332 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.355142116 seconds)
  done (took 10.861398785 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.300384075 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.614292573 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.805933487 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.468896584 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.295750501 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.319245573 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.277813174 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.32392963 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.32314471 seconds)
  done (took 14.911235818 seconds)
done (took 79.630990424 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.298261087 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.337908524 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.328822619 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.32063098 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.652607573 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.299524195 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.304720235 seconds)
done (took 16.726423201 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.278716891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291816618 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.285611535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.308315597 seconds)
  done (took 10.346557604 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.305054307 seconds)
    (2/2) benchmarking "read"...
    done (took 1.629284219 seconds)
  done (took 5.11677329 seconds)
done (took 16.648662118 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315791073 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.315836722 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.316448795 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.316037457 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.316615044 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.317048451 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.316868329 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.31461586 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.316338981 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.316144769 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.318556543 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.318271366 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.318107282 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.314534272 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315505654 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317925434 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.316469016 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.316557753 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.316054756 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316186326 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315998773 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316212178 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.317442325 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.3179522 seconds)
  done (took 32.780458182 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.317523531 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.3176633 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.317601659 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.316641799 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.316166843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.317596759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.316662713 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.317047889 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.317476705 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.319567881 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317794699 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.316787539 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.317063947 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.318068846 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318215733 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.317553281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.318916495 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318552715 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320198798 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.317524326 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.31853624 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31768578 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.318172912 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318100199 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.318572905 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31808868 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.319754258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.318072222 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.319369005 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.319790849 seconds)
  done (took 40.727189554 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.32382406 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.325657987 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.31987039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.317769185 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.318639393 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.319648587 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.317885666 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.318958665 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.318295176 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.319071011 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.318694698 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.318752528 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.319653202 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.319315642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.319075796 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.319413831 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.320324081 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.318954177 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.320236657 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.319632526 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.319703154 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.318438397 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.319634977 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.319607838 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.320130182 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.320859258 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.319744509 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.319806335 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.320328142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.319878847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.319138812 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.319728781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.320622811 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.319729127 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.320521499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.321638788 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.324930734 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.328623221 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.321999321 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.321480304 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.322359221 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.320502454 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.32221886 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.320858717 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.321601716 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.322428355 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.320893718 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.320866266 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.322032348 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.321326596 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.322003394 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.323607052 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.322631778 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.322927235 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.322228275 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.322025094 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.323519408 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.322509699 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.325183588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.323906926 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.323837609 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.323088439 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.323290318 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.321984343 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.322270842 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.322345281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.323008816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.321020625 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.322491641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.324166282 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.322975668 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.323429865 seconds)
  done (took 96.317752352 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.324840474 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.322921021 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.323556291 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.322360854 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.323836808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.324187038 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.324164195 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324737224 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324071722 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.324493362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323829772 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322894183 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324217247 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.324902449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324763115 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.323775958 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.324445102 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323603282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.324601866 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327306637 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325471064 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.324057282 seconds)
  done (took 30.323878653 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323842796 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32568767 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.326015891 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.325626681 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.326646617 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.325646193 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.325426665 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326357651 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326284988 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326133032 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326034663 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327262096 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328513189 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325847927 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.326339221 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.328114366 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.326157937 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.327145928 seconds)
  done (took 25.066013857 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.32635779 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.326426703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.326771897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.325235914 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.325101437 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.328259273 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327164023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.326280164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.326709274 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.327516373 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.328386558 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325526877 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.327256363 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327334262 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327144675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.326533377 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.327324303 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328848029 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327628672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.327808435 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.327419922 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327541835 seconds)
  done (took 30.38797371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.327679177 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.328695092 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.327261959 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.327336149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.32794675 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328334304 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.327964408 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.327850587 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.32822815 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.328675603 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327272011 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.327173379 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.329973295 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.328676402 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.329116331 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327620058 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.329116775 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327866584 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329299896 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.329411524 seconds)
  done (took 27.760244822 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.329404225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329546376 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.330854214 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331645462 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.330229548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330647079 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.330274427 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.331560847 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330781062 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.329821153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329415335 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.329461663 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330762152 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.331498089 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329106649 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.331013455 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33214666 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331554235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.331565771 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.330332297 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.330527133 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331184196 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331238138 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3301333 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.331465374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331360985 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331403833 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.330762059 seconds)
  done (took 38.455647127 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.330356032 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331358427 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.331812126 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.330448964 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.33261679 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.330445954 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.332246951 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.333399531 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333434965 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330477713 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.331591922 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332012059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33079565 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.331880022 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.331661746 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.331875663 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332281796 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.33325983 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.332915668 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331942942 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.333600663 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332734774 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.332683289 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.333671573 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331890616 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.332930595 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333336161 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.333954433 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334932537 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333767212 seconds)
  done (took 41.167667128 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.351600594 seconds)
    (2/2) benchmarking "in"...
    done (took 1.350439561 seconds)
  done (took 3.901271667 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.33330188 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.333072381 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.333456454 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.333907569 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.333792475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333044704 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.333728561 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.332879747 seconds)
  done (took 11.867400367 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.325434427 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.336229369 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.333975334 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.335247072 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.333834693 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.325142498 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33375136 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337898702 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.328387532 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.328788225 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.333060501 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.335585758 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.329479907 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.328492025 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.328320271 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331503607 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.337938296 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.33722698 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.336633029 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.335474254 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.338417491 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329801565 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332586136 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.338618702 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.328524865 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.338578306 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.334599964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.340554111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329958609 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.333697016 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.330578131 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.339408906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.338547189 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.33787084 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.338033262 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.33656417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.33750656 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.335621959 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.337944348 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.343144883 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.337684367 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.338777665 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.332405298 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.3341321 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336685376 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342680166 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.339613876 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.339406949 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.3287865 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.335547639 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.346690496 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330831324 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.339848327 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334398811 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.336282489 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.34098692 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.346730229 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.333785797 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.338614163 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.343163086 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.349448232 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.348118914 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339683072 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.343108378 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342731819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.356718979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344206363 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.346052878 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.339856206 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.338939254 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.33891874 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351718326 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.352210935 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.345063589 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339220391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.339668092 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334924764 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.344245699 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341406434 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.3472318 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.345234501 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.34252395 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.342306058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.355641114 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.336043505 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.34502523 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.341305024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.341493131 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.33293771 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347151541 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.349279223 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.340928653 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.333721348 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.337515377 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.338777435 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.343932958 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.332792287 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336576018 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.345788876 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.341989023 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342253028 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.337104762 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.344418523 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34727263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.344292591 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.343538607 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.349594527 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.334770857 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347257224 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.351752817 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343944716 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.336913381 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.341420801 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.345470454 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338453993 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.344150891 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.349542142 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.338185951 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.349676201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.343886918 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345136719 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.364573856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.349739424 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.34375053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.339429726 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.355379508 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344395238 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.340792273 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.350852565 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.343521172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.342974828 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.340780389 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.351804893 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.33764822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34871339 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.33934252 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.347833854 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.34487303 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.345616213 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340965873 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.344777958 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.341138469 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.343904042 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.348381594 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.351040459 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.342106492 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.352038844 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.345383967 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.342946847 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.34684448 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.349583756 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345177359 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339156923 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.35005108 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.337583766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348828327 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.338309988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.349318879 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347928063 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.345986869 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345260167 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.339783199 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342944186 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.350377095 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.344343394 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.346700669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.348836676 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.346927087 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.346896005 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.33916387 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.347760853 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.33712581 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.342800467 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.35325987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.346478899 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.346919695 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.345342254 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.353879534 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.345397075 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346065903 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.34139634 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.349688727 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.352627994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.349449973 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.356124826 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348206824 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348854781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.341048558 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.342790123 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349955197 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.341976759 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.357539354 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355336498 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362884763 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.345630586 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.352402085 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.340320935 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352807716 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.347922332 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.356520619 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.349701108 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348001908 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.341051502 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352921265 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.343889563 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.352254283 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.341451867 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.35131115 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.349397476 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.349292997 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348789012 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.342894589 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.348068483 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.352362254 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350138364 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349436661 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.34203599 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.353782563 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.341890384 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.345565749 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.353649675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.350329453 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.350314985 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.358195855 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34755884 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3543083 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.351847324 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.345790131 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.351785719 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.347161433 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349863106 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355606076 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.354181074 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346610319 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357708039 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.35384839 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344994766 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.351178052 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.360862327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.351245386 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.344520472 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.358564562 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.352183176 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351025783 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.351552243 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.345847977 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355536711 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.354059883 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.362602581 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.344479648 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.356460989 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.346392439 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.354537446 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.348266007 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.355436702 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.351399943 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355434617 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361548301 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.353048578 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346150515 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.355963745 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.353523175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.351640449 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348469976 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.36135848 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.355268943 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.353606169 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.351512849 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.35147305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.357823108 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.345259532 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.354929333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.347114987 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364452866 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.376667539 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357658399 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.357548089 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.357813886 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355424303 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.3583377 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.350355983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.348073921 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.351432829 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.350031389 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.349317248 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.356092623 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347775298 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.358892059 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353705229 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.357083061 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.358917444 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.354459132 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.349392163 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.357398731 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.353227083 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.354626411 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.346856353 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.358479757 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.351896331 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356565953 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.357151206 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.350359834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.363121965 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360580464 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.35315217 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.353835689 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.351035512 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.347676897 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.352977659 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.362244889 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.349267917 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364384754 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.349680549 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.356784205 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.352818424 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.362055689 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.366063575 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.351294609 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.364225773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.355484893 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.348292592 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.351597375 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.356829403 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360548113 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.36891996 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.349363398 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.360422224 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35769704 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.357370617 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.357844211 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.357809478 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358117046 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.358516522 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363479725 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.364170585 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.355646421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.360691472 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.368733581 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.357782498 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.358270127 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.350410825 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360143942 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.370521506 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.352045856 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.357270049 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.353556519 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.360166331 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.358122404 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.358615573 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.358271801 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.359014749 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.363858953 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.36623261 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362205256 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.359389448 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.364243636 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.371626799 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36410766 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.373536201 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.355728998 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.366612725 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.359376915 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.354592513 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.355601748 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.355139673 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.364584824 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.35187823 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.366556715 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.361020514 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.354851034 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.362243444 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.367474953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.351869058 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364900993 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.384323469 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.352362557 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362907692 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.361138162 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.352774012 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.364250855 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.360775894 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.353097848 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.356998782 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.362103988 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369254606 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.35376521 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.36514744 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354938603 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365871778 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.361001325 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.361932497 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.360437197 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.361037505 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.354885362 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.36401399 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360996116 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.371996003 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.354517693 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.362419278 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.358144656 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.369926595 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.374542458 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.356368567 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369566279 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.363043941 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.355800518 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.360366163 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.368598156 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.355077411 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.366522709 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.353918537 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.359898869 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.361281467 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.365063932 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.36697289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.36792384 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.354191382 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359414704 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364549315 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.363693854 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363974781 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.359667484 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.374404297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.356414355 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.357719145 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.36643267 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.35855268 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36821394 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.356849121 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.364842428 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361598149 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.367705327 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.364601573 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.36295782 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.356710294 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.358917364 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.372501853 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371934294 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.364997073 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.36451804 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.368134224 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.358035266 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.362058378 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365654211 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.359515283 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.361259839 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.369212656 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.359478242 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.360598093 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.362222099 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368271318 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.369092855 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.369566536 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.359067337 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374146983 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.376176938 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374463637 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.358182617 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.364546092 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362068877 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.366053812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.365437319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.359051039 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.374491334 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.374223715 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.369456075 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36530142 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.368386034 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.359744859 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370636564 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367117864 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.362886588 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.374975211 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.362703628 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.373191595 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.367981052 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.367355681 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.359156183 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361249736 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.364104487 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.365858526 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370703235 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.368265919 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.373333406 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.366234709 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374290761 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.369264615 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.368990906 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.367344706 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.360796852 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370269976 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.361111123 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.37122274 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.372839448 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.363401445 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.37158352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.368615908 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.363611809 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.369437435 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.375381479 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.37003524 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.364111831 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.368794509 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.375304828 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382654194 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.368922303 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363237919 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.367455718 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.374892198 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.368772253 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.369687031 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.36366523 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.382069398 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.384178935 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364431163 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.366906694 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373232912 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.3819453 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.370617683 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.370108646 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.366521009 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.370483965 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.377790728 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.370939339 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.373620968 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.378077708 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.366473399 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.37432571 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.365713405 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.370832279 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.373171676 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381978539 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.372086697 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.365791785 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.385660482 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.383101839 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.372842843 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.399928002 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.37931291 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.373710596 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.377761161 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363462472 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.373894251 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.368443342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.378413038 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.371693176 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370796971 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.372657367 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.364365038 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373372044 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.380481329 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.382881448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.371793694 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.362120757 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.367324493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.373568445 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.372452542 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.375733916 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.373388723 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.373357277 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.374192674 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.366228661 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.38476277 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.39323223 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.381343725 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.372878476 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.372831764 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.374611367 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.380145688 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.375087701 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.382095341 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.374388492 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.374199428 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.373374464 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.384916993 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.373919818 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.368198488 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.370452417 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.369994466 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380648253 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.383408519 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.398067955 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.379179043 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.379073785 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.375325585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.374757345 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.369364706 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.378885343 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.376553194 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.368654682 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.3737055 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37795455 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.375725418 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.373784769 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.36975714 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.382617202 seconds)
  done (took 809.332805092 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.375532304 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376308061 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.375499748 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.37519986 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.37573917 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376269414 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.375709081 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.375904138 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.376578765 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.376933841 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.377012998 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376311059 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377416786 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376970349 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376633656 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.376343638 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375544516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.377558743 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376285767 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377318267 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.376775336 seconds)
  done (took 30.139041746 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.376955931 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.377324918 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.377896457 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.376337335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376960508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.376140113 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.377751799 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.376415519 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.376759885 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376525245 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.377125939 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37652655 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.377714361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.376890593 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378044356 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.377404124 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.378509849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379249856 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.378148211 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378561505 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.377365521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.377669387 seconds)
  done (took 31.538716069 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.377436882 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.377834173 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.371731127 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.381400398 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.377634614 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.378637151 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.37951971 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.37778295 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.37931774 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.369949021 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.373078531 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.373741106 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.37689462 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.386388834 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.375355782 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.385743006 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.379231299 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.379893933 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.37908262 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.379200335 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.383279786 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.393552806 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.379515318 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.371344769 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.381309925 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.38015828 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.380527273 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379813529 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.372022691 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.383734185 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.380571659 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.372666294 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.382805605 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.384208766 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.374676763 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.383520153 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.379933481 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.380064193 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.380696531 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.381791034 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.403656168 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.381477774 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.385323965 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.394598964 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.381390764 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.374895959 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.389616272 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.379805851 seconds)
  done (took 67.494693276 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.382061479 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.383005057 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.381150191 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.381258926 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.380817966 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.381562474 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.382039064 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.382741663 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.382786076 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.381023792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.382159598 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.38206079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.381632445 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.381595984 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.382743669 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.38234587 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.382442757 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383502924 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.382541104 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383449345 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.383890362 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.383204289 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.382748309 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.38296004 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.383937541 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383899806 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.385313446 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.383983425 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.383850791 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.384432682 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.384933796 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385000688 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.385227448 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.383954715 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383286683 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.384577755 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.384843506 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.385754445 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.384891156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.384645661 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.385156769 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.384209169 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.383622902 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.38466001 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383053026 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.385672855 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.383258227 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.383839353 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.383980707 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.38383106 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.384927713 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.385546988 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.385683488 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.385694241 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.384235722 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.385515012 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.385126939 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.386295459 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.384114343 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.386020734 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.385539898 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38617968 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.385503164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.38548747 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.384604483 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.385648154 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.386141034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.386070363 seconds)
  done (took 95.349876855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386164395 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.386324219 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.387940844 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387971227 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.387147101 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.38755723 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.387862999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.387354587 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.387561134 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.387594284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.386696191 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.387136849 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.38778644 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.387605263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.387452854 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.387584421 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.388496244 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386911248 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388390814 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387615336 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.389387262 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.389643999 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.388473726 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.38774406 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.389019387 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.389775859 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.387911248 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.388988378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389675041 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.389675352 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.388921611 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.389666161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.388372396 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.389329896 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.388287858 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.388888644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.388569467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.389885206 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.391505649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.389572698 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.389665758 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.389680538 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.388567559 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.39026107 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390147395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390143391 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.388805289 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.390658618 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.390390282 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388579241 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.389784825 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.389371018 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389815932 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.390407269 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.390655357 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.391053739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390387849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.390046442 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389826936 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390420614 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390236115 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.391387306 seconds)
  done (took 87.358708764 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.389193522 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.390685459 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.391373736 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.389957025 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.390693829 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.390778593 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.390108115 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.391373315 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.391648914 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.391440413 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391118006 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.391237318 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.391058681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392712964 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.389800104 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391440539 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.391620464 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.391272764 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39091049 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.392221151 seconds)
  done (took 29.069319352 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.391307494 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.39228788 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.393243222 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39156433 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.393224026 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.392096993 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.39224075 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393099718 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390751774 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392815309 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.393219496 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.391618312 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390563421 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.392768428 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.392779392 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.392706451 seconds)
  done (took 23.525458794 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.393817231 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.393688142 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.394199498 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.394292581 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.395581803 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.394861044 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.395223705 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.393151281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.39378211 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.394008168 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.394571617 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.394143914 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.394533807 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.394773565 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.394952895 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.396069281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.395006478 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.395403343 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.393592813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.394361627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.395035846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.394227532 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.393360899 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.395363538 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.39493105 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.3951083 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.394587113 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.394860738 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.393782749 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.394378862 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.395029304 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.394836049 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.394757804 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.394512502 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.395423465 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.395654391 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.393898816 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.395030893 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.395190972 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395894304 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.396264228 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.395932794 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.3941187 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.396821808 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.394796539 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.395371883 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.396617993 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.396081278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.395174259 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.394839739 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.39652774 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.396539163 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394958328 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396551595 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.396361511 seconds)
  done (took 77.974125314 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.396582644 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.396282877 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.394678857 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.396067405 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396423685 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.397008062 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.397609441 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400086731 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.395729661 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.397654275 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397195841 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397565339 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.397281848 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399665037 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.397230384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39765296 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.398000185 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.396494668 seconds)
  done (took 26.401707573 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.39648833 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.398480458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.396797682 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397464622 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.398867445 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.396319719 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39879092 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.397365183 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399302993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.399133728 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397664701 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.398678539 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39853949 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.399103429 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.398268783 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398316473 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.399989286 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.398545393 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.398289437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.397690621 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.398642558 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.399820579 seconds)
  done (took 32.017166961 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.390481406 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.389321276 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.389338444 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.405825893 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.408064513 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.390229404 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.390521494 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.38994821 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.414476168 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.441121289 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.434912322 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.40758288 seconds)
  done (took 18.106990796 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401723815 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403702602 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.400399839 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402211732 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413941445 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401057945 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4005126 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402825588 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401851111 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400981945 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401289009 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401733411 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400850254 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401502294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400238323 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401868416 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40007327 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401540559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400272261 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40224633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399478178 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403262354 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402588604 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401571094 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402167075 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403015995 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402020128 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403045161 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403848933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400777871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402579678 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403332631 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402169163 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401745757 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402395409 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401700579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401031396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403414786 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402057665 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403379568 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401604106 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402861291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402883251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403005141 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404843546 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402375523 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402498139 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402588348 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404070629 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402911281 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403092172 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403801842 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40322975 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40447901 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402917559 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404957545 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404314909 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406916694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407454382 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405064666 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406168186 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40474568 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40485673 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406608605 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.4045807 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404994995 seconds)
  done (took 93.851294266 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40385367 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40488275 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404815977 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405462392 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404448877 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404988997 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406222903 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406937511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405253475 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406076983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405193003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405207285 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404434829 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404957041 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404610837 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405997209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404615573 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406874199 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40665868 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406438146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407049124 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406591976 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40644278 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406543719 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406662514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405821476 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405967927 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405966875 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406017974 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405346886 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405742825 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407597861 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406952157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407362087 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406400007 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406532349 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407920678 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407496047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407332608 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407708291 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407913723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40866396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408237933 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.407454693 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407132114 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407637569 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408449353 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408070038 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407636887 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407939343 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408431984 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40901787 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407085354 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408857559 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408971492 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407757223 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409501846 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.409154868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410303252 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408873108 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408866919 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408467716 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408968846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408709381 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409514944 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408829609 seconds)
  done (took 94.12425852 seconds)
done (took 1896.225750928 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.566670473 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.535820196 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.399412057 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.475051481 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.399314941 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.400273215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.411001236 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.399212846 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.399302104 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.399504713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.398618316 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.61345105 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.466504405 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.399425684 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.398947604 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.497608914 seconds)
  done (took 28.424471378 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.429216475 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.408164938 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.540419248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.408164203 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.430133639 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620706905 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.470134548 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.40328798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.608558061 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.425982299 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.396035032 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.430153731 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.405173674 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.394949388 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.426788543 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.622427261 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.703213933 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.399890945 seconds)
  done (took 30.78624844 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.945236419 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.409338578 seconds)
  done (took 5.61782393 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.427396665 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.405580721 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.406182815 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.405195145 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.397793897 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.397459605 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.404313886 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.404077676 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.399625429 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.556844402 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.407362558 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.418282209 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.405710174 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.405732295 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.414336972 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.454134965 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.558880633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.414953996 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.414929139 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.412288946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.406471208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.503174839 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.453859389 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415245937 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.558689415 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.409122182 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.415226203 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.414788556 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.538221004 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.417671063 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.406970897 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.406275033 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.40792931 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.407025594 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.988632761 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.404314719 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.453226122 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.415241936 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.41455249 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.56610139 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.409019871 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.415522597 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.400181757 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.986883042 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.52630554 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.541945093 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.411536029 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.409087683 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.410106449 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.478605802 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.408753301 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.410844931 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.472054188 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.295345916 seconds)
  done (took 89.766389363 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.458296587 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.401024589 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589837928 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.427294334 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.406216586 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.421231672 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.422398069 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.755149244 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.46056535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401169644 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.754590491 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.087034858 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.402641281 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.446689716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.422789977 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.435719313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.401873835 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.402179437 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403993842 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.40788725 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.016468632 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419139113 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.402706116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.605238399 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.447913575 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015358665 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.413446422 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.409234723 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.404422809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.402571149 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.06087875 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.413337495 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.437463488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.404906569 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.721974033 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.866382513 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.82335728 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.406904803 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.429206286 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.407927877 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.402600369 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013768352 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.846497671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404499302 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.404348108 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.017120854 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403849063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.410887193 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.414020857 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.678356656 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.406605829 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.407796359 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.402776017 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411477304 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.404042428 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.477187078 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.444316998 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.018509873 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.405233691 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.406542036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.415806628 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.404668748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.411771198 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406197827 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.404506131 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.847810037 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.59686017 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.410760158 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.845838755 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.045243628 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404049946 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.134013235 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.409772937 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.432293294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.518978376 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.42278315 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.405571027 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.045522121 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.418078058 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.405979756 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.856261699 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.411205736 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.74006647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.430348692 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41118194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.052677497 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.420016857 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.461036151 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.407632971 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.406613495 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.431395213 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.412815239 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.731774219 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.469323877 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.406767408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.407030321 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.41256151 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407849206 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.414550434 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417202803 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136021408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.418501694 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.408937421 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.416298401 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.407298102 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.413817559 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.407493338 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.40919549 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.697273114 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412874279 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.437070331 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.410856721 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.407430568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.418850569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.612684189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.417270509 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.812153998 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.417108235 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418983303 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.410584779 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.409207725 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.448718995 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.411384244 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.409162604 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.385955039 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.771837595 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.432751784 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.435744636 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412151493 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410008269 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.443274265 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.416857447 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.438244804 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.416905736 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.287030457 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.440148379 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.440299272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.410016923 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.413128251 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.410132896 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.41785687 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413772826 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.729869292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.744312924 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.597598128 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.412176466 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.415404712 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.297793519 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.464986418 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.599338992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.434465736 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.417938059 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.716797457 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.589135488 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411423438 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.410321161 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.410762556 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.7066157 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.416470464 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75234554 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.103078851 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418361075 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.420473529 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.29090797 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.19452075 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.418650044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.4144924 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.751993254 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.439874919 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.411657954 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.413880037 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.414024146 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.420201605 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.415205769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.420524423 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.413720182 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.412461037 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486477722 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.6110384 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.436149023 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.423267059 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051485345 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42359783 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41407329 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.422163367 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.415266485 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.411238039 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.443331872 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.41354135 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.452775902 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.412644336 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.425383308 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.127673179 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.435875936 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.419893409 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.613136277 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.234592516 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.42015667 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.414970061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.420193097 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.451106442 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.080741522 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.421236977 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.814275385 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.422352298 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.458510077 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.4309786 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.426198197 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.077937808 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421165509 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.423344213 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.218903349 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.423583443 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.196808946 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.414990716 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.417245831 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.151982939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.419065642 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.418261874 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.429668412 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.421717483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.737572686 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.421318892 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.420379155 seconds)
  done (took 518.487612635 seconds)
done (took 674.347067824 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.415588927 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.414432888 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.422214547 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.422057597 seconds)
  done (took 10.95567815 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.434464778 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.429274277 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.435957784 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.421621813 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.433883065 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.428660518 seconds)
  done (took 9.86791125 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.416097582 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.417835256 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.42247528 seconds)
  done (took 8.53921636 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.691927071 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.444161496 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.865524371 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.422588283 seconds)
  done (took 9.709028029 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433968552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.434112794 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.434547123 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.433580292 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.434421749 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.436250826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.436365622 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.435232102 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.435652634 seconds)
  done (took 14.197350658 seconds)
done (took 54.552354929 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.661160967 seconds)
    (2/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.456765461 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.420324296 seconds)
    (4/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.578650834 seconds)
    (5/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.447918536 seconds)
    (6/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.397767145 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.464310558 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.494739932 seconds)
    (9/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.557372221 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.463580262 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.783908836 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.713262168 seconds)
    (13/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.579577233 seconds)
    (14/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.567184766 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.941465065 seconds)
    (16/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.452466551 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.533683118 seconds)
    (18/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.497755458 seconds)
    (19/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.561563088 seconds)
    (20/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.405359125 seconds)
    (21/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.606473244 seconds)
    (22/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.586784042 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.441564724 seconds)
    (24/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.717972696 seconds)
    (25/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.760039466 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.511892464 seconds)
    (27/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.454958563 seconds)
    (28/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.398649646 seconds)
    (29/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.579294423 seconds)
    (30/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.404414967 seconds)
    (31/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.421416652 seconds)
    (32/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.045464421 seconds)
    (33/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.40298064 seconds)
    (34/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.665306598 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.824754323 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.505868834 seconds)
    (37/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.463754391 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.707758975 seconds)
    (39/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.517175439 seconds)
    (40/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.531668123 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.954374567 seconds)
    (42/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.50429615 seconds)
    (43/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.458355002 seconds)
    (44/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514848835 seconds)
    (45/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.426540766 seconds)
    (46/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.409791944 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.562586128 seconds)
    (48/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.520836523 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.884393573 seconds)
    (50/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.405186794 seconds)
    (51/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.405958578 seconds)
    (52/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.59944651 seconds)
    (53/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.539914803 seconds)
    (54/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.722265553 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.599521406 seconds)
    (56/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.46990773 seconds)
    (57/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.462281351 seconds)
    (58/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.443785887 seconds)
    (59/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.63005141 seconds)
    (60/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.467641375 seconds)
    (61/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.417884104 seconds)
    (62/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.511715512 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.454052884 seconds)
    (64/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.834217026 seconds)
    (65/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.436587137 seconds)
    (66/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.06617781 seconds)
    (67/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.428015076 seconds)
    (68/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.749896726 seconds)
    (69/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.717211219 seconds)
    (70/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.521206562 seconds)
    (71/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.431595068 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.43166343 seconds)
    (73/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.461388442 seconds)
    (74/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.937765698 seconds)
    (75/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.763899395 seconds)
    (76/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.408079991 seconds)
    (77/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.471306605 seconds)
    (78/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.401213766 seconds)
    (79/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.880234452 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.756844973 seconds)
    (81/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.539193663 seconds)
    (82/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.737318666 seconds)
    (83/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.509230744 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.515748023 seconds)
    (85/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.569661081 seconds)
    (86/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.461984041 seconds)
    (87/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.538790422 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.539302375 seconds)
    (89/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.535816602 seconds)
    (90/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.069307566 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.563365662 seconds)
    (92/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.515155194 seconds)
    (93/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.81555023 seconds)
    (94/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.524101008 seconds)
    (95/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.531464374 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.572599497 seconds)
    (97/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.465281475 seconds)
    (98/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.726885306 seconds)
    (99/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.472419414 seconds)
    (100/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.05617608 seconds)
    (101/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.461554781 seconds)
    (102/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.403996242 seconds)
    (103/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.890051073 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.515249682 seconds)
    (105/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.50278158 seconds)
    (106/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.504509826 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.564561829 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.405236369 seconds)
    (109/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.434355076 seconds)
    (110/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.40783126 seconds)
    (111/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.692730845 seconds)
    (112/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.526930886 seconds)
    (113/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519569776 seconds)
    (114/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.464849966 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.419013891 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.72135018 seconds)
    (117/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.584529071 seconds)
    (118/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.555514391 seconds)
    (119/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.612807449 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419670643 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.468802216 seconds)
    (122/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.405653169 seconds)
    (123/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.654837347 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.030820685 seconds)
    (125/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.406610876 seconds)
    (126/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.424747319 seconds)
    (127/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.845265447 seconds)
    (128/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.604997888 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.601455892 seconds)
    (130/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.411204647 seconds)
    (131/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.500698788 seconds)
    (132/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.576918481 seconds)
    (133/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.256783442 seconds)
    (134/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.739271231 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.579285938 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518112917 seconds)
    (137/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.472810675 seconds)
    (138/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.770882191 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.540188156 seconds)
    (140/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.509142863 seconds)
    (141/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.423903201 seconds)
    (142/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.515585218 seconds)
    (143/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.589463687 seconds)
    (144/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.430117267 seconds)
    (145/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.713934585 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.610284062 seconds)
    (147/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.559078702 seconds)
    (148/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.619059824 seconds)
    (149/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.563710017 seconds)
    (150/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.650292412 seconds)
    (151/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.417384842 seconds)
    (152/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.408734984 seconds)
    (153/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.414761113 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413619846 seconds)
    (155/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.7697541 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.837477999 seconds)
    (157/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.465581792 seconds)
    (158/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.408170379 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.41213497 seconds)
    (160/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.501264297 seconds)
    (161/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.534363794 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.615157124 seconds)
    (163/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.411054318 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.512910991 seconds)
    (165/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.4148225 seconds)
    (166/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.817687906 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.472858655 seconds)
    (168/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.430248075 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.749383717 seconds)
    (170/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.541772156 seconds)
    (171/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.653359068 seconds)
    (172/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.999044586 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.58061482 seconds)
    (174/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.658391732 seconds)
    (175/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.414017905 seconds)
    (176/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.686641759 seconds)
    (177/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.841779149 seconds)
    (178/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.719954757 seconds)
    (179/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.413749064 seconds)
    (180/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.595049357 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.414052552 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.571322885 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.647369328 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.993514261 seconds)
    (185/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.534421131 seconds)
    (186/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.519491075 seconds)
    (187/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.517798162 seconds)
    (188/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.666820364 seconds)
    (189/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.261123371 seconds)
    (190/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.437205486 seconds)
    (191/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.9087852 seconds)
    (192/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.507183219 seconds)
  done (took 352.83908331 seconds)
done (took 354.125644264 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461461036 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.537950107 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.440931937 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.440176161 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443514934 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.438902338 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.462735503 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.443255959 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.455022901 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.457040946 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.435094432 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.450383982 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.458656884 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.453688025 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.47493399 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.442662756 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.440887837 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.453266294 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.456783457 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.45852579 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.442572755 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443750579 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.469490317 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.441961826 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44960885 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.452792554 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.44984169 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.441882144 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.449732362 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.459860051 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.449302836 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.449960276 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.461720196 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.454781961 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445962947 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.453911514 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.443960385 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538694784 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.466511789 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.455457958 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.452730223 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.460053826 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.449698471 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.449481968 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.458023403 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.473156388 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.453439538 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.46127838 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.452159059 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.436303661 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.465739776 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.458012071 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.453379802 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.453173705 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.445522053 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.460017479 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.455478474 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.46400562 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.452885863 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44696345 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.478422734 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465936525 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.458670713 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455081466 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.453517404 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.460460624 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.455184279 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.464171541 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.454648156 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.449285361 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.447293019 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.45500282 seconds)
done (took 114.128039399 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.570448918 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.441661806 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.602998102 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.45342338 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.614872602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.56857227 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.455641725 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.456132305 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.452290231 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.251281044 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.454556984 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.453743244 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.443407391 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.454750063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.5656326 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455388616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.45542637 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.149709586 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456318033 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.586634176 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.446288567 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.454985533 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.454978779 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.259158084 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.444641545 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.437741984 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.586623075 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.454655008 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.159076002 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.439159772 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.441099324 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.159189965 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.589481434 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.475208691 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.464855621 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.465903196 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.618709258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.464878748 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.574485003 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.572953729 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.603656713 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.494274151 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.439179834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.4451631 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.459297496 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.456752493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.456505218 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.485325995 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.445337916 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.458254205 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.154932064 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.467646256 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.466764236 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.456862869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.45748541 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.477497275 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.457721322 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.458488964 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.589779882 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.456713126 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.575112291 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.260727918 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.25498436 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.458509265 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.444076711 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.459382406 seconds)
  done (took 116.249997892 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.519216683 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.524256342 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.576115207 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.454820377 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.496432272 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.574069151 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.451641246 seconds)
  done (took 11.89965217 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.455525926 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.45779963 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.498349058 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.497074726 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.458632788 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.622520635 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.457995191 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.460196256 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.458348936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.500519123 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458513215 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459929074 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.468887458 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.446996139 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.497101338 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.460527269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.569494921 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.452320733 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.458605024 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.601864273 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.461201621 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.468073891 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.50157626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.463157548 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.459546536 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.456820814 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.212628352 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.461916455 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.459739779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.459616341 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.460452954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.518448755 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.46248215 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.448865951 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.458939395 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.565032718 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.46050286 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.460791805 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.461932257 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.451868827 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.461033609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.461045117 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.461776149 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.463311419 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.462037048 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.476666103 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.46159523 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.461428553 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.46304825 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4597837 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.503116629 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.461707506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.462947582 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.46155489 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.506949424 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471807507 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.462469981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.461341216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.463438695 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.461304152 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.60596743 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.500231933 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.463459228 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.501068226 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46434648 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.463195677 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.462318896 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.463213385 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.542988121 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.463554945 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.499585747 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.462319085 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.635559661 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.478338316 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.464930422 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.456785965 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.457659114 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464640465 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.449349839 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.461046623 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.462910711 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.453834056 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.45977848 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.46351051 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.463492637 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.612235601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.561663471 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.463536923 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.470188791 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.460947961 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.465092747 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.506530117 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.465647074 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.464369761 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508546827 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.574771433 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.508475153 seconds)
  done (took 149.676387405 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.466004412 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.468201695 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.461361227 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.484193496 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.456071746 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.455083434 seconds)
  done (took 10.100595665 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.458801769 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.468910212 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.465475529 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.466819391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.465055158 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.467004428 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.467104436 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.458332158 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.470409772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.466826121 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.466105893 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.465558338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.466111717 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.46721104 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.46733631 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.467331209 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.466735495 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.464895825 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.464875626 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.466556703 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.453818381 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.466714717 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.466493611 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.459211108 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.471340352 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.466932985 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.481776529 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.467423506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.468067393 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.466411438 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.474277111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.469565801 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.460920486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.463591421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.474480362 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.460247242 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.470787825 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.468165775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.468807326 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.469047382 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.468032971 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470160529 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.469580144 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.468578013 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.460340317 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.465636115 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.472567829 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.484844872 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.469234895 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.471160807 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.469003985 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.469431399 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.468567827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.471029477 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.461692863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463911965 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.473671636 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.469031839 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.46938388 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.461899979 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.473615194 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.469637702 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.463209541 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.474118708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.470690917 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.469129263 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.463675093 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.47614661 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.471879866 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.469590275 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.469606734 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.468929886 seconds)
  done (took 107.995515247 seconds)
done (took 397.223834246 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.858390696 seconds)
  done (took 4.172494449 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.662568694 seconds)
  done (took 3.979266345 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.977713293 seconds)
  done (took 26.302894122 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.531866333 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.506580725 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.489615819 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.458531749 seconds)
  done (took 11.301321498 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.073553537 seconds)
  done (took 4.387337168 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.464542625 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.464307669 seconds)
  done (took 6.245061929 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.773063713 seconds)
  done (took 4.08711589 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.420333916 seconds)
  done (took 4.746030661 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.502888323 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.466492152 seconds)
  done (took 6.292989358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.433820227 seconds)
  done (took 3.748193021 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.320754699 seconds)
  done (took 23.637885645 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.483732946 seconds)
  done (took 3.803034396 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.500028593 seconds)
  done (took 3.815187098 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.691923991 seconds)
  done (took 7.005603215 seconds)
done (took 114.840498107 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.456347531 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.461830758 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.462944786 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.463466831 seconds)
  done (took 11.159565316 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.535698709 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.53726907 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.547192197 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.529270881 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.530770734 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.539569625 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.498895115 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.497194749 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.52791944 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.525750799 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.542551399 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.530218525 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.539796512 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.498940497 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.523616771 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.542397816 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.52824335 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.545329476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.498635749 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.530899284 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.475563122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.532663467 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.524407814 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.474053751 seconds)
  done (took 37.873643225 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.983150326 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.545711172 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.618984123 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.516731471 seconds)
  done (took 7.981562232 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.580654837 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.58022077 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.598465648 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.640107882 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.680119689 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.593763384 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.501913291 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.495340754 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.483483905 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.57944183 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.665346953 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.577403126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.795480224 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.476046674 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.79388976 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.474172829 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.475707231 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.578574191 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.62829631 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.656841278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.475195917 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.578363184 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.58202297 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.578618114 seconds)
  done (took 39.386925468 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.483358322 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.493045242 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.477622554 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.491771409 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.477643171 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.477989801 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.478960538 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.484062332 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.475971995 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.475338701 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.478368665 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.490747122 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.477090439 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.477935447 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.484123899 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.479626312 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.479001086 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.483943755 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.487078176 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.47859766 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.477866108 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.483342606 seconds)
  done (took 33.912345938 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.460418277 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.461058298 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.813434039 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.718806827 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.463041283 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.465769419 seconds)
  done (took 14.701344931 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.5551537 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.708611894 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.467916809 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.913662616 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.996299576 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.468579228 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.469901381 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.756407393 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.138756875 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.134722258 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.545534085 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.551659772 seconds)
  done (took 22.028475887 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554684757 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474120841 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.481843599 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551238759 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477746645 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474309954 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.53705367 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.044419537 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.483207173 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749836022 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472304661 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562156407 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.722685738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.475697376 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.476900612 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.460511989 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709010904 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0571979 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47812402 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48603445 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512594932 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473807681 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480464443 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.762462119 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.483650132 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474289385 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.73736797 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473739876 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828102279 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810601544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807589402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485072137 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.751142477 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992446481 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588837052 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734121108 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477507535 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478765816 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.446040775 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.482418454 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490938828 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485421633 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.802791854 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485169404 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475584973 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479644373 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050361438 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.490238309 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.476390723 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.478512721 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806655162 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567645569 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.48409593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.47820206 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5696666 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476750802 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.481602441 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598852555 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118165938 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475401848 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488947418 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.481296529 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467506832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50754193 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238944448 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.484931255 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.48317137 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483910538 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476959468 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.476537455 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.525332559 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476751202 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.498693965 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477716024 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387205986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481364471 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486709806 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109664638 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480867042 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.484392701 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705511203 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47830799 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479473495 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.47888551 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480038048 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38682769 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495323673 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.446296233 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51579394 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.048580027 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.746674401 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507968345 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509248159 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.702770861 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.447697136 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478288081 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.482008806 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487199551 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502342608 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.054672666 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485218444 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.484943933 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730863088 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.694734084 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479101778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.472462744 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087662112 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486770615 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.508552356 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498423323 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.74640942 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.219041054 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824301494 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488828056 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544934705 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480586811 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.456879561 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488966154 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.492801007 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482870842 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.809431063 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.451688619 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516100196 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555057364 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.493152701 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.481264562 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482078629 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509504051 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.482339142 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.719788005 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488206167 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.815164851 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.490758002 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48280222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.492196589 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485324516 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.491043727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.705243132 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502065323 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763771302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483520723 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4843083 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484281745 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.704007759 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.483199912 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.493004883 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824990001 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498567791 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49483904 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817062241 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519634236 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596671658 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517041865 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484421203 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754532483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.490479644 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.490696257 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.483566299 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.513034648 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483883749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.493073968 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501017509 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216297225 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459434974 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489944426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484626916 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.502074258 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557342521 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.492686812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.746150921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.487404676 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490901918 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.491437348 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.491762973 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713002943 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.811770288 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.487939677 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662052654 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.083341904 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.222948887 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503603991 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.485412097 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.485312307 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.485481122 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484353988 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485133001 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486738942 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747270439 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826365123 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485524019 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.224283507 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490134248 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487646977 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.520138908 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815910201 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.499883459 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487072742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.486099336 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509194038 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508020521 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.817790967 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711421425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.503956894 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.487682303 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.008241764 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495958641 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.488786115 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486729929 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515372897 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495088358 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148325433 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.833861874 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508959847 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820376533 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49126573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.512625678 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.488612893 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499282631 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50159344 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.505569241 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497863042 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.751169684 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496275645 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495918573 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130343133 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407430349 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165833698 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491609723 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.508477692 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49576873 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.065833862 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493743174 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490329915 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778267739 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073469601 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496070305 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09384411 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508504927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.415581626 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820065696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718213729 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492561265 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.502971948 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829839979 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710178929 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519559753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490462272 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518902567 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.46068834 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190945442 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505285425 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.67549885 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.066905355 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502882099 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.497623077 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.575531524 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.495426293 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023772159 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.495447016 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491757669 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496343559 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507153328 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159700874 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501911578 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490691797 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260602777 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500344795 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.099690461 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497656764 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.753563709 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.825711678 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.798801214 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.502650381 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.491175237 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.73762503 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831334731 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499870074 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493434537 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173350003 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.358212864 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.501693573 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493441213 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.470331452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499520677 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857780046 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.515364142 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.500398245 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506658467 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493870452 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493969437 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.493219907 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499783754 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46444245 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075100687 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.498847306 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489252073 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531804187 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503017569 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.745105717 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.510585706 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228209755 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723815327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492077622 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52981591 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.501206284 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502663905 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.470735108 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.494841596 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493423321 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585904572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.71606188 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494656898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.491069143 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.563279856 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.706532389 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495483051 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506840866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776079268 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.50454838 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.51141062 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416120009 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528241733 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516554812 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.504470848 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497162077 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526870534 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570447623 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762060962 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.842339987 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.835091146 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02470967 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515503437 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504418142 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.510623682 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577817058 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495825141 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.522865407 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.517652252 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251710143 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421391724 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260055774 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.846307361 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.505462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506028257 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497225156 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73978849 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498133443 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773926619 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498900688 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.507080197 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520866671 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497524221 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.540020676 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.708842106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.773194107 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498567875 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510558837 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505721718 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.499542235 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847305699 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.719020217 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098426812 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163226977 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506704305 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50010189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109897999 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781789634 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499207462 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501339109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500190365 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.516528403 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.506105298 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.512064334 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517011903 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730491268 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.839765466 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036056613 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.844483319 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.532133767 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.37754862 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52073874 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.755945476 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342087226 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.766141468 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259187919 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392754616 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763262867 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575068198 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767857683 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.507094439 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738029164 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.503927323 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.501168361 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500123368 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499674379 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.500990512 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839208833 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265380051 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763321405 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.505990225 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.504917804 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537329473 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.766994658 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.731162201 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412104196 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.731601298 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.847864162 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.516424212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.502432366 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25980275 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.854560383 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511002987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.508287082 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77822203 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.510715603 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536769793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.374761802 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.502220078 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163085986 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.724323036 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524383061 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51309037 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401524479 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264851397 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.527956169 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113755397 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512428939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51761804 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78838158 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.510782439 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513570588 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.798388606 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.509894065 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.510082512 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780480603 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.263936985 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.42939245 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.534674577 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511030283 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.513490019 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506190847 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560750923 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505208669 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514674067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.056876393 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50929147 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50361675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518606559 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.515828649 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516974952 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.511638571 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506185419 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.513868702 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.498318717 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.481686634 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.541694491 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631440636 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237848509 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512861459 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.122536809 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.843105129 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.756866544 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.510388566 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.482279876 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.512397348 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508851887 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506675549 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507103102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499255088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167364184 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.517078899 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.853898272 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.521364881 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.718883496 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.720621641 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506306874 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782480739 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516031932 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533462834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.473944823 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509480572 seconds)
  done (took 1046.564060981 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.558404297 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.530677252 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.537885199 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.563867998 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.514897067 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.528931806 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.583345448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.529495895 seconds)
  done (took 21.698162337 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.500716036 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.514756914 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.505007235 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.513541662 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.517839231 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.070345695 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.504457144 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.517458548 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.526931295 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.512415145 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.506038325 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.244787064 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.5170769 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.500555597 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.509472951 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.517216898 seconds)
  done (took 34.840516937 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 19.44580826 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 3.674135428 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.302697769 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.541101984 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.621651554 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.521654459 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.946770475 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.544652077 seconds)
  done (took 44.952087104 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.513289848 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.513589157 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.515154837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.51550026 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.516239505 seconds)
  done (took 8.925980842 seconds)
done (took 1325.34167947 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.515637634 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.516802291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.515304638 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.516052159 seconds)
  done (took 7.416965952 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.479500193 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.480564112 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.482432151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.49810799 seconds)
  done (took 10.293919268 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.486101398 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.187609253 seconds)
  done (took 6.02741583 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.512992666 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.27490514 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.262229444 seconds)
  done (took 8.404950874 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.806372004 seconds)
  done (took 3.161018176 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.95117816 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.011785969 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.501265084 seconds)
  done (took 7.820647339 seconds)
done (took 44.480206548 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.518872311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.27466001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67759163 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.514855087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.687349511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.674494475 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.745573123 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.507977269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.510354536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.519670517 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.521318157 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.684116971 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.735228444 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.271664816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.732050983 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.268891745 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.676585196 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502148344 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.518388725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521121875 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.753434192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.511053472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.526917036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.526258855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.684839737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.666833244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515514316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.277119503 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.519916285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.513706656 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.674443102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.521118525 seconds)
  done (took 87.109148571 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.502642042 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508163113 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.532652436 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.511687796 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.526753126 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509917812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.513248401 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.511461273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509603462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52277836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.509619457 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518785364 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.511679211 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.511501179 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.514636785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.511293213 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.521252603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.507898911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.512051428 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.532633315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.51089842 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.52494046 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.509981361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.511864367 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514657009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.512027722 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513248306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.511450958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.510427579 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.516426865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.511907021 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.51230892 seconds)
  done (took 81.816918128 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50526878 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.511925506 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.513126618 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.532256185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.527089738 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.51135216 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.534381226 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.516178437 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.513717424 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52138406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.514633934 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.511582482 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.51381515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.530259392 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.515214669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.52711126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.51223782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.513296142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.514013774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.520033865 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.514241787 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.514480121 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.512734352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520792429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.514120372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.515607388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.522560604 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.515182747 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.534046797 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.513376839 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512599015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.514529492 seconds)
  done (took 81.921840306 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.748930359 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.523690224 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.52728982 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.517686075 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.526242819 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.525141553 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.51789888 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.75723031 seconds)
  done (took 16.003507601 seconds)
done (took 268.205875147 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.517793493 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.524290254 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.554186391 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.536301936 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.540529449 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.547876672 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.758669865 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.553634239 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.747977478 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.526565449 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.541159171 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.520604691 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.483579367 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.67648463 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.517904953 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.52853523 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.527300293 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.521370823 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.528020937 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.810421806 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.552604202 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.512685192 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527129005 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.536850308 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.497691252 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.603821195 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.605670803 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69826672 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.661097094 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.604223408 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.518438866 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.527827812 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.527974996 seconds)
  done (took 71.19881515 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.517572884 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.527283984 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.529164621 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.527451135 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.527995124 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.527826377 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.517087338 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.528239314 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.528946598 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.528562582 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.528708426 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.528767714 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.528123025 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.527387703 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.528998904 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.50099261 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.518579967 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.529406875 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.520090974 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.502741357 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.529937649 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.528923549 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.531173076 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.527494939 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.529302174 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.528261126 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.529508971 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.530497608 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.528912941 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.529397514 seconds)
  done (took 47.132317686 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.530212423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.525714718 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.526515009 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.533425856 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.521766946 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.525235116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.879218729 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.537325851 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.524760541 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.526718336 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.535677154 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.539399576 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.577822258 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.531548192 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.53097272 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.532531733 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.532487918 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.526426638 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.515930046 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.566370795 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.88874765 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.53713809 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.880759139 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.54508217 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.526882813 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.524778414 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.528755751 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.525688688 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.531554038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.538067613 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.511649773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.87664899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.522708411 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.544886349 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.509948514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.539420008 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.53301405 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.518271453 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.532439329 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.524925517 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.877803347 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.532162499 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.533287166 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.522921043 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.531059723 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.532815032 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.517363636 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.525131537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.851273736 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536814233 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.52162624 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.534009487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.534625278 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.526638061 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.828026606 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.534320606 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.52653453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.51733702 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.536574553 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.885178904 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.540895844 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.526405832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.539778405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.533161544 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.532790573 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.533651112 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.541398088 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.529530763 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.538187939 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.534986382 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.525329816 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.532415729 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.533547002 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.519930847 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.561506136 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.528414779 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.53452254 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.519260701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.548877613 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.882948484 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.538751189 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.518556375 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.904060396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.536356438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.538904493 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.537532496 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.536030203 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.603277295 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.878905067 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.527956944 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.547465156 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.526804447 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.894565316 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.543454356 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.529723172 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.520117976 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.544340408 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.537398599 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.534091129 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.529279653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.534375103 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.54365551 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.521982983 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.538104825 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.886705023 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.539505257 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.528908144 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.53507329 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.603477623 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.537175136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.543197107 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.534144277 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.900728952 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.54085164 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.537957393 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.52357101 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.529818502 seconds)
  done (took 223.681199411 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.524927871 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.527983998 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.524010812 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.528832405 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.523218192 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.532416966 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.524898529 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.526599534 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.528135153 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.525252013 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.525568156 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.533456026 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.532221764 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.524570896 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.530074853 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.552408127 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.525369442 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.53931177 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.526123917 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.522273516 seconds)
  done (took 47.949596041 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.540652945 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.231032647 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.186874745 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.546919797 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.541064386 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.531806881 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.601436758 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.546977674 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.5424562 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.909364036 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.754487063 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.547310499 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.539818327 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.540831296 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.186665918 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.519487072 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.907327726 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.239340596 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.547877601 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.233345789 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.518589075 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.541188761 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.529964787 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.231918994 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.924453489 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.895773434 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.610269751 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.245877357 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.548244184 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.542503306 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.240867347 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.550640443 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.534795235 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.225406313 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.548066471 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.555934149 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.542977581 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.606237441 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.614083511 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.914005073 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.248640693 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.907007641 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.559485193 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.711583269 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.545273241 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.513354722 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.241118848 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.549935137 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.514245161 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.543768245 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.548110987 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.191809558 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.542072558 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.198880435 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.550085464 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.545233321 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.23886668 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.207841827 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.19526583 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.757246634 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.540407148 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.88857491 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.551591661 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.235684244 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.549656584 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.545415611 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.544005226 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.754769492 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.235024971 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.897680175 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.917617042 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.917976574 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.55089412 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.617745976 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.551306178 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.911546615 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.623420967 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.961854254 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.912562134 seconds)
  done (took 141.509919853 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.864496986 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.674889436 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.004903605 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.201492766 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.138573418 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.698857207 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.672841129 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.825159462 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.558520132 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.650890918 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.356174016 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.65321264 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.380652019 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.617844013 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.665528066 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.6806045 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.041285976 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.536592466 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.341180638 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.340576854 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.553154567 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.652947187 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.349975146 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.975550723 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.537721153 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.357634724 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.531600437 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.160222381 seconds)
  done (took 59.40131437 seconds)
done (took 592.236445074 seconds)
SAVING RESULT...
DONE!
