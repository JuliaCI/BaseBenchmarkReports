cset: moving following pidspec: 13542
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.47309658 seconds)
loading group "string"... done (took 0.484867556 seconds)
loading group "linalg"... done (took 9.853054268 seconds)
loading group "parallel"... done (took 0.165232279 seconds)
loading group "find"... done (took 3.468860615 seconds)
loading group "tuple"... done (took 2.064273638 seconds)
loading group "dates"... done (took 1.39315711 seconds)
loading group "micro"... done (took 0.18998255 seconds)
loading group "io"... done (took 0.50388204 seconds)
loading group "scalar"... done (took 57.972391792 seconds)
loading group "sparse"... done (took 14.0073304 seconds)
loading group "broadcast"... done (took 1.339912265 seconds)
loading group "union"... done (took 10.332613314 seconds)
loading group "simd"... done (took 3.588731113 seconds)
loading group "random"... done (took 13.296252698 seconds)
loading group "problem"... done (took 2.200518226 seconds)
loading group "array"... done (took 23.67220186 seconds)
loading group "misc"... done (took 1.140114934 seconds)
loading group "sort"... done (took 3.795332169 seconds)
loading group "collection"... done (took 22.003954143 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.734794337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120064231 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.200508643 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.201773384 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272940561 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166203285 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161460339 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.159182873 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.603492366 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204408729 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137683557 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.381527481 seconds)
done (took 6.068119684 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.300651502 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060946853 seconds)
    (2/2) benchmarking "String"...
    done (took 0.193803309 seconds)
  done (took 0.93565152 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077804851 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.161811667 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108697447 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094568213 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09476975 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108627594 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093917504 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109365995 seconds)
  done (took 1.445300982 seconds)
done (took 3.434178512 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.555963908 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.948450205 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.533300239 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.185929889 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.303727483 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.304220764 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.273858551 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.231636047 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090473522 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.084610628 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.197857643 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.437109141 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.424878464 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.972006123 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.069202092 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094851604 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.159242731 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.842383944 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080205618 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.109519686 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.515118339 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.217992215 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.116060363 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106224825 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187867794 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.127997902 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.139219663 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103881402 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.711773034 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135838724 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.210342658 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085272603 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.138888505 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.171555245 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.219369028 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110655624 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.723493794 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.200816162 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096050475 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.101672289 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.753691171 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125586217 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.210041741 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109696201 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069376408 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171344784 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114257359 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080079726 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093516222 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.102415396 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.176828685 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.506283148 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10730712 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.198092746 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095158499 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.801959082 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097200709 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.284726224 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.127698753 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096685453 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092096846 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.091755007 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.167669444 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096407237 seconds)
  done (took 20.784036428 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.192195234 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.208130036 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096505292 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.146660608 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142563418 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082406055 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091039745 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096418088 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116406696 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196501486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127509297 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.214989035 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076397819 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108306487 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167358949 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.252557814 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109667132 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12181164 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091009972 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.096367365 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144698458 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097881786 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113301986 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096873231 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170903169 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205902422 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111754806 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123489737 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091606671 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099624909 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14359665 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150094121 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092738992 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091502062 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175241089 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.129120053 seconds)
  done (took 5.46682018 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.23883258 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.104525232 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.247894137 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190628224 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129514876 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181571505 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.192960406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.304154149 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.321694459 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164944182 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127899517 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098361667 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08045723 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080622688 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.217763467 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079969324 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.860089859 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.154155622 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160613631 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.188063675 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096251283 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0987171 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.717699772 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101179629 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087107435 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094399439 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.080208397 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222574112 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094027197 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.475542872 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.084701996 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116050558 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115061723 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.21139244 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124729019 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122772047 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110871241 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.08636332 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210060469 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100561308 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095760016 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080619624 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132578894 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116549947 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107801206 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.108921008 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135507151 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088029862 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110310186 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.067744068 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194809951 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.163337719 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103984876 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280384427 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.108383687 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100003 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109689701 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.793673346 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.137348612 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084299684 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.09591629 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095142596 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08088297 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.824125567 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104554443 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.685572687 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086208112 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.162681389 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096632752 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.118005426 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087745989 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08557173 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.123829834 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.087616834 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097837582 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087854983 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081998267 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106449828 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112795958 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086295509 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.099765148 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085607972 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14856426 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111658478 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.107668304 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124798748 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090729062 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087021703 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130512474 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082951589 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105528849 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.207655015 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097403984 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112431158 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11523484 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147278146 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089294183 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.102162504 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.265823888 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086121867 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.129012917 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102720121 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127484974 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098615985 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082960995 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103227438 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.085858246 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080299992 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.099330243 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147058696 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087731797 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.097449892 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089278767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095216827 seconds)
  done (took 28.526657427 seconds)
done (took 55.447516149 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.773027369 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077929427 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098245513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079216086 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078612746 seconds)
  done (took 1.844757846 seconds)
done (took 2.565777384 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.186404342 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.269269544 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.200524344 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.129781132 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.151056773 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.17144995 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.153694333 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 0.1711744 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.149764067 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.170327066 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.170396767 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.10860458 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.175580363 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.185668571 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.122721441 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.188309651 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 0.105299033 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 0.150203564 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.087963234 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190604065 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 0.107318512 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088012086 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08883158 seconds)
  done (took 4.261120033 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105539351 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101863792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105356358 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122837786 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088903568 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10502819 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121819195 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109006467 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103292836 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11539247 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088197254 seconds)
  done (took 1.896656151 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101738735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099870157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094289229 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.12054939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08780379 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099910195 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118082639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109250404 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100587314 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.115776678 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088335868 seconds)
  done (took 1.865304965 seconds)
done (took 8.74517922 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.22521618 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.94012875 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182959685 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251056944 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331891189 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301114125 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.611835362 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205095424 seconds)
  done (took 15.88815774 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.226027066 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092737024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093486962 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094181339 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.110322295 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095900544 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092789248 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112992168 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097461465 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097732202 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.108072068 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100135135 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098685854 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093852076 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115038528 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098227984 seconds)
  done (took 2.511862427 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.135887277 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119317625 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116543875 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100171685 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097354563 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119063236 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104045175 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099579111 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.114046619 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097958329 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.104124469 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.11506073 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09894355 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.095967062 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115649672 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118874639 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096906464 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115542143 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.117880322 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102060493 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.116707467 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098772739 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099149454 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.116009964 seconds)
  done (took 3.415115392 seconds)
done (took 22.546732727 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150268537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102761656 seconds)
  done (took 1.000707891 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.1668571 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186316792 seconds)
  done (took 1.094979467 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112857705 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093117638 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138401424 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.105092596 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093256029 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109686629 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118140223 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110125825 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093162567 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093807074 seconds)
  done (took 1.817124166 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09623083 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097494924 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.12410945 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.161804134 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118485035 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094960663 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097528211 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.113558997 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098511558 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.093570243 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115483941 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110568994 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098064574 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127766081 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.097828558 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098357887 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.117851983 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096338577 seconds)
  done (took 2.705722743 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091888783 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095481518 seconds)
  done (took 0.938270156 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095077986 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0930653 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095135514 seconds)
    (4/7) benchmarking "year"...
    done (took 0.109948622 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.092951724 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093193421 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108202011 seconds)
  done (took 1.438978317 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.521520859 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.237723498 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.373471477 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075828421 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121592698 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31402077 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.120850147 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073500373 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092354717 seconds)
  done (took 2.705882302 seconds)
done (took 12.453199578 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093268398 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208155592 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604200328 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.130467475 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09232475 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.152905237 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.346972574 seconds)
done (took 2.387126932 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342646331 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.178845394 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085080379 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09324158 seconds)
  done (took 1.456304476 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08318335 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100771171 seconds)
  done (took 0.944047255 seconds)
done (took 3.16260044 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09131795 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.090729571 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090426698 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.107590138 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090343393 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090182889 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.132067142 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089602092 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090262919 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.214224628 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.108960594 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091454693 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090427826 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109196568 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091141774 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090724446 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090686527 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.108654694 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090767799 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090759314 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10696288 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.089971114 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090808092 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090828387 seconds)
  done (took 3.21983481 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112851328 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094913618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.11243462 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094852469 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096400486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113125864 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095968876 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092665606 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113856692 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092489953 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094823632 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112987481 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092875144 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.095586637 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093769171 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111688693 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096028089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094175563 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109722695 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095380513 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095476878 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109294728 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097525655 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096046114 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.11154353 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095325147 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093258664 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110072042 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096937373 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096001302 seconds)
  done (took 3.781860384 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097994468 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088702508 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091509594 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116736365 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089089816 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093068535 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.105770521 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092301238 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09280177 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.091352852 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111495065 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.092314959 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091383407 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109769092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092612612 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09516506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.117058391 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091585897 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091121387 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093350753 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11227137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09146216 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.092217111 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.109104313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092923655 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.089016593 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093914062 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108451983 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092811293 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092213868 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.111347075 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.095180198 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092154874 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.120268716 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094871937 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.092398968 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097233871 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.10643821 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093116232 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08922955 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105773414 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091151152 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.091986329 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.097388574 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109903613 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094137773 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092504211 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.111221982 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.092918962 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.094998318 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106772914 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.092046733 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.094256325 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094665754 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111192288 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08815802 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092571929 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105737665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092653688 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.091348342 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.090108002 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.105864981 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096658448 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093890857 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124017484 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09871546 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091595665 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110800607 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093293326 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097360446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112390012 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100874285 seconds)
  done (took 7.843196499 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114685687 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100979102 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.1107675 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093912005 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092448878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093432772 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116362578 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092397153 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094681702 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115939471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092181492 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094178549 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110534275 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093469826 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093534104 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.111725763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097920892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093090111 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093301312 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109520312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09465077 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098243486 seconds)
  done (took 2.980371574 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.239634052 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098698676 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143126064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122947421 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111925838 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.124037611 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096999713 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098639156 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11364107 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102925705 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103028091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114741047 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110055982 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102221221 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117607903 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.103098056 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114129077 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104428837 seconds)
  done (took 2.899275408 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105542577 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094418493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.157542525 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095516829 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094328261 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112472728 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099258307 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113953586 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.112383462 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094378251 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.102525452 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112463197 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094462467 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095853689 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111741385 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094326368 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094613737 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09561225 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119073526 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09978242 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.117690795 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101521548 seconds)
  done (took 3.092542967 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106297409 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094940326 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130445172 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097177706 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094038393 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.111352532 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.100240574 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094125637 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.120953101 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094884251 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094359485 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.094313741 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.126052637 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094681822 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102031586 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111982489 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09510835 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095572257 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112161191 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094553083 seconds)
  done (took 2.844340382 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.185752082 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129718909 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110277374 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119412194 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127634907 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110392222 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.13734593 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110776716 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110598887 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138581466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110244427 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110791298 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135071481 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117871 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128118217 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117285413 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118535409 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135083021 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111095587 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129221168 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123385564 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113202539 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136960113 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111272306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128397651 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110062428 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111280021 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133032349 seconds)
  done (took 4.240506692 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094583711 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.093737381 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093602135 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110331634 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09267067 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09281592 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092332106 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110055527 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093851023 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094320981 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111330155 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093596736 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093197745 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.093164519 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110255651 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094008843 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092693766 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.110097604 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093633666 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093514613 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.093976648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110517368 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093833861 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094022078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11037633 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.092906869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093371866 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093303532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110795908 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093683258 seconds)
  done (took 3.72141871 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.107083356 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103204245 seconds)
  done (took 0.996075538 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100562237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107898322 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.092992354 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111132965 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100036833 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.095039808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.119350601 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10103548 seconds)
  done (took 1.61248161 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.186801019 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.209140065 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.118389076 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.105807033 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210105849 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.188963454 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130353228 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099501233 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112568453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087144734 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202772497 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086056822 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113831922 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090421026 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093511948 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119790634 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095787769 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103999207 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.119226051 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097266644 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09977007 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099499135 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113177667 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104358274 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088711027 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.114889839 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096853482 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.106534022 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108914078 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095206122 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.093272296 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.1137171 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.099468032 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099978445 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.1138783 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.20958202 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100392926 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091534026 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115395062 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099316587 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125500709 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.114729511 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.095604376 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.093509473 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117024798 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.098374585 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100138159 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095216764 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.106316753 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.089783057 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095547421 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108102743 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094921744 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095509169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.11314003 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10102995 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097770712 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.109634594 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090671903 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09018336 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.110951187 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090910728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096914569 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.117463504 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095300697 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095566419 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113030689 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096092777 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09635292 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096752405 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111308418 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109810248 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.114704538 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099320547 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099250129 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.096203582 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10959645 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101177192 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094092296 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.113293241 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099092667 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.120988972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114190521 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090539616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089860031 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.120729671 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.096177604 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.098642691 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105414969 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10250122 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098036977 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.114698684 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.087619939 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093065494 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090815876 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117042023 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.087087497 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095224293 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.113126628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100989488 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100597674 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112092114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096084719 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101036307 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119656783 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09301996 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.164324778 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091272789 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091309696 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097642013 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120009327 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088828972 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.094662427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.113423346 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091315426 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090250144 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.118758916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.094324887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09747282 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.11902349 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09620684 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096933396 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.11663258 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094730518 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091246959 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099518288 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.122022539 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095971678 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097700833 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.115654272 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096031168 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09418809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.119128069 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.092596933 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100753358 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111205073 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094859422 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097298317 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.1193027 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095015234 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090726137 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113021288 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096789202 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095122966 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.119030719 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096242461 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091154186 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.088534769 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114815979 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090206446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096680501 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123608321 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091874883 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098298093 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.111725331 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104287113 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091930603 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.121414757 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098245339 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101636976 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.120647808 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087144851 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092419448 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098054373 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115493627 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092159366 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.097571608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114549893 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102229122 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088911723 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.118966229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.088460041 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092927742 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.120427699 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098568918 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.098454626 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090962109 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.152045769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107645847 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.121447558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096637556 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095466573 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099834977 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.11308183 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100399113 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102252814 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.120296925 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092443028 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.094937103 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120998324 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090959995 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097217175 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114196782 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096956547 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087877636 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.117129314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087804137 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10058285 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097153129 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.120103663 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.100202454 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098268782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112798906 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105059328 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092301604 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.120092014 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.088970251 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.100511042 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.126521884 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.101657178 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101715227 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116788936 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092499376 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097789227 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124192339 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097586163 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094895138 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.09737141 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108175369 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088310481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101719181 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.118224017 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092057144 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097117288 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.116204306 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097621403 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093260154 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.108136018 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100491013 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099818374 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.111796422 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09526864 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.091688154 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094584315 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121116298 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.088994479 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095962471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.117470087 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101122601 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095893955 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114489684 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09851225 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101442327 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.11894334 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097805706 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092943907 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.125524993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093084719 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095977879 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09225773 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.118570515 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08939667 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098131003 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.115519776 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092870525 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.093572481 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.119124462 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101531977 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101885393 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11496204 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100292355 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102155614 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.121018146 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102896408 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101810557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111550076 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089247153 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092931046 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.089343145 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.1177638 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091391571 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100802419 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.114234867 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093942507 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099949932 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117551414 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.093315412 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102253966 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126666681 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090409885 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089263372 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.113568998 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095719161 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.093216834 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.11199425 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096913307 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096472539 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.120897124 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097859958 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093186163 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096745917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.121321124 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.093193688 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103625601 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.120848067 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102432938 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091696127 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.120560123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092162004 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099331483 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.109803504 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094524953 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095418242 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115199073 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103028634 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094033288 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111629335 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089135794 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092992083 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103731029 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.113945445 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.10058156 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095256261 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.114111506 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092090844 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092689353 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.122429235 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.094349152 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103548797 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.117423024 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0888705 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089753409 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121346202 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095924145 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101989234 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090143369 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.118962939 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103763018 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099985909 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117464277 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104610165 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105064444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123549198 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100887814 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.090064947 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114017906 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099592685 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09737685 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.119071148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097645467 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089732312 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098837578 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.121036188 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097383016 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.095163169 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108923419 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097516152 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10299299 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.119233719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099091696 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098717956 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116338992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091302747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100543837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.10291553 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11588305 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102669851 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097678025 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121389592 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093434591 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102502339 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117394234 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090828534 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.090698766 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113775372 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102290584 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091464072 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102559586 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.12028824 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093196694 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095339995 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.121212798 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092705511 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099975206 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121878015 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093129465 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107777451 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.119359225 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094014203 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102465489 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.122683648 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089741616 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.09556841 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096273592 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.12366933 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095732198 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101941572 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115405437 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101296858 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100024767 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.121697627 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101148607 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102142815 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.110734212 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103488801 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100226019 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.119897194 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09310306 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094985963 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.092243148 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11442252 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103682075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094307948 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125243586 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100517795 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094463523 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114831686 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.102593601 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095054164 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.124843927 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092813409 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09838152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.111281164 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097996101 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.096126903 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.123816242 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092436249 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091507477 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103494868 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.121375952 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100886039 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.099007458 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122856701 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.09075853 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090286922 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119075891 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093090107 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107764054 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118366877 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094821536 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095505522 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.119445563 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097907031 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103845472 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091990847 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.1138194 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097699637 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098683064 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.11462727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091980873 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101799523 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115324869 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097934749 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.095696348 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112498582 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095348291 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104128544 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114592917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091667632 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094644683 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12401234 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09539349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09270394 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.092235849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12172439 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098649952 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105365489 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.113517394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097191649 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.09555964 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119190152 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104237712 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.095069228 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117301243 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094383977 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10310578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122717566 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089491979 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093629709 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.127441504 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101994335 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098042981 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.121688705 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096222569 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104429275 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104754844 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.122616687 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.091106326 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091301431 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.116437292 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090710619 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100545209 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12253051 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095615142 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094289834 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.122098119 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101935802 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0996932 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100285804 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.111472898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104561243 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.09541626 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120009221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090764921 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091284502 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.119490841 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103004122 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096064672 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117652867 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098687511 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100679643 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092367149 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115283957 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099421656 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102265241 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.123290402 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096441187 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.096524066 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12155717 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10774099 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099634946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.117220639 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103472118 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.10637584 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118735566 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096066867 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101250964 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.124644597 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099756818 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.107806016 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.095831742 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.116391574 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105231198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105253203 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126451097 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095473831 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091258978 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.122095321 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094683234 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091549879 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121692109 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104645459 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105257514 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.117800286 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094485002 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10600768 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123567037 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096912743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095120924 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.116603011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102174507 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095824845 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103164477 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.115752403 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104490249 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.105124119 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123611101 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10609627 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091636877 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123330292 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099456219 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106108248 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.120800746 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.092826916 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.093248179 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12115517 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104791734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102976541 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101934286 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.12246211 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102634118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.098170113 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.118815559 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094777244 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105356972 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.124039592 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099451867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09898318 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.117947454 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097671935 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099715841 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105119315 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.124454377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.098210813 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108538499 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.123068603 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095840563 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.095423246 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118689961 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100394547 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098681701 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123437033 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.095429286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091468929 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.125145498 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10530734 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096935689 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106216057 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.127360315 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096162965 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.101194567 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127422039 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101702939 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100691306 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.120924005 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101184971 seconds)
  done (took 63.303674078 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147874496 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107388331 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121541554 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100111719 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118760066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123917171 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099688385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102393966 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.122911041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110072656 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.100288875 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123541911 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115483949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123128229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138227385 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110323373 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121658341 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101077194 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10074921 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103545358 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133751533 seconds)
  done (took 3.264059153 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116601708 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113385959 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132562204 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113674804 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108880248 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131863081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112497488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13428903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.114514262 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109506591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.135743339 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111577141 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.130516745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107825885 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109099723 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.131489323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115492167 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107943978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.133152631 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111040924 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130805684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111368094 seconds)
  done (took 3.460315353 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128513488 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.104460504 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.098744227 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121573374 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103675439 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.100209217 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124052788 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099856659 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108587868 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11599752 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091586518 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095860819 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099519253 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121317502 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095288659 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101492838 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.129056207 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103877709 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106387014 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.121512825 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092412151 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.101062062 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102031825 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.11274731 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.106431679 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106175914 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.125133243 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103913209 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091091103 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103693828 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.121700992 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.094457244 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.091453638 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.112300774 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091660068 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.103187103 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104752649 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.122011746 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100520867 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.091446947 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.12378238 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.104822459 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091842528 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.122942705 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101633681 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094740187 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104995176 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.123133476 seconds)
  done (took 5.957997189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.132441383 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16038621 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103542992 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.130169805 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1382256 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110247453 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104434791 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.1543359 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103133729 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.105005415 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.138918515 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.116325766 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128531774 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.109625647 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107245309 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128897478 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106803236 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105192324 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.130763706 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103724946 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109525962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12809752 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114930735 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115854785 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128492499 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104263313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104929004 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.128621902 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113311714 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.133030951 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107970623 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10926483 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.136104912 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.103860057 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.359502675 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.127464355 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116177945 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.105714625 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.127456209 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103340974 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.105370287 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129277253 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105997315 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117114968 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.127574187 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106419493 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10649135 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.123202075 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113673104 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106387657 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.130984243 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.116630476 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.129614016 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105660762 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107387576 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.137640778 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105477307 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.10454853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.128839843 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113891697 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102693967 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129615574 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115787037 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105574591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.134774793 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114498287 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.129066915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106561507 seconds)
  done (took 9.179566156 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.141912484 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108665776 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13851103 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115957072 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109364936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130700921 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109463897 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.109442724 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130216376 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114065185 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.13091763 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217390733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129832102 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113349534 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133291509 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107704546 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108843453 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133820295 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.108320318 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109348994 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.130707094 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.11657333 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109226537 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.138566766 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119438996 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.128316386 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107907262 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108293024 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13922656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108133822 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119361848 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129867869 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108480791 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117964973 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140696587 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.10901013 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126023225 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108796006 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108998307 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.130742659 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104863867 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118524373 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.130164135 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105595032 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108825656 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.129949351 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117880613 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.143122428 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115924653 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113699951 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.131379111 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116975617 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109284226 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130529626 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117379373 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146473702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11660355 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117925253 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129429447 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117084175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.139314401 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121397922 seconds)
  done (took 8.444544256 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10756665 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102207994 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.100725821 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.124129482 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101278374 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101492607 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102092739 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123030786 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101565117 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101625809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123459299 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101431281 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101291614 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100884183 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120767539 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10136474 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101556167 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.123071748 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10103449 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101313404 seconds)
  done (took 3.000976067 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11421481 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118504297 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.125960448 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108350048 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.103223989 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.131429709 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103059434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104079588 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103416323 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12545198 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11170821 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.133910443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105079066 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108756157 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132942663 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108402826 seconds)
  done (took 2.69888808 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127195777 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120753788 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.203459096 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105601068 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12623557 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110657438 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104872367 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128658464 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102107811 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.109198785 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.129811718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105459164 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104191041 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105067042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124071881 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107812741 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103397654 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.130051277 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104172481 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.208324707 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106964418 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105977519 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127516625 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.10597542 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105589747 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.131522031 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109075996 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103834063 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.129606405 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103612964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.107512839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.134575074 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10392391 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108458503 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.126752813 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105277911 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103896756 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104498366 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126679735 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104278953 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.106527135 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.126370034 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105450364 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105656203 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.124160052 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103819285 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.1022782 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130762312 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103897184 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105319627 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.125523427 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109451384 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108451779 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.133890589 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109803756 seconds)
  done (took 7.280898022 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.119648652 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105660395 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13906146 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101297292 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105171897 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.106168293 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.128437519 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105771142 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106245905 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.125471121 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105737492 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.106173318 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.127859744 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105184211 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106226492 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128572532 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101815202 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105288013 seconds)
  done (took 2.89400843 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.113644176 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103838363 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108194204 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127931054 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.104436113 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105149141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.12560479 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103732616 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103032441 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.126702201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103470853 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104218897 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103893285 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.126158855 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104181107 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104410506 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.129138591 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102518855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10494513 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125510873 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104266714 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103661228 seconds)
  done (took 3.306816204 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.120734358 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.233103255 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109677298 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.238644971 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.126334668 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.1003326 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.110260614 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.125895618 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.115571345 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100426431 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.124294287 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099718732 seconds)
  done (took 2.475164693 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134614405 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142570122 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127532248 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104637364 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114482381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132792489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110520792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110498617 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140406881 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12194623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132012352 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116192949 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117096186 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.141032363 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113147705 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137642982 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108876419 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109289928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130019996 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123072412 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110108805 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139374143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109552821 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110029835 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132555645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118373003 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14251688 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119863878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10966183 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142413178 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114640786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132901298 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115608272 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122680739 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129194513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117909695 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110235385 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145848623 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113470262 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14371563 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105097724 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114859659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139602727 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114908081 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139996566 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109091733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115424875 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131805243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108994731 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154006875 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112917097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117762286 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137167867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117498845 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118654021 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151478602 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121660844 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139903723 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114768311 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.143668347 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116829389 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114192104 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137543283 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121231212 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139230096 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116607733 seconds)
  done (took 9.07824521 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146636968 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107357256 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132760852 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120524686 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141046337 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109420508 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109887951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133025884 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109112276 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106188022 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174146383 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110111119 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140286423 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116785934 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110554616 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13265407 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110811274 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118867533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13108622 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130217955 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133021596 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118412669 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118373711 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140819364 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120073729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137435299 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109435959 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110645451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132502467 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109677141 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116399459 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131946421 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118966542 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107591245 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139742199 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110878552 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133990711 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11456301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110347966 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137642751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118919114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148087063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110489229 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11010604 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144887483 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110290846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110640254 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129341135 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1093558 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106994219 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143941274 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120948375 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.144817779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117764238 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112135846 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132327306 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111816807 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111493284 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13114528 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117662313 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141664221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113675116 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132244499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132912784 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110435863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1424378 seconds)
  done (took 9.038714635 seconds)
done (took 171.378472894 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.180758588 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.216943966 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200539614 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.158868608 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095919658 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.162582557 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128114593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.202439471 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094940114 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.096651747 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.118075514 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.097857841 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.169806665 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.118075319 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.096219919 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099118061 seconds)
  done (took 3.10777262 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.205632246 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343838283 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.136405944 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09857312 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102008822 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.102183542 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121647172 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102850642 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101488182 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129051038 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101652879 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097769628 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128637932 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097483204 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103008066 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121648025 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106208873 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101587617 seconds)
  done (took 3.186426498 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124807661 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154185686 seconds)
  done (took 1.165453022 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135906962 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.2177723 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297119206 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171861298 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121521861 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140215617 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.1501401 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135226956 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191777966 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136207145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113311309 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098632155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148441701 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.107299807 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.140145993 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098110417 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129421848 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.138708443 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11546462 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103078088 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147847062 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103593036 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106758449 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.139719279 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.183311263 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.13670457 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104243363 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.104891396 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124328727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114714373 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.108658533 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13997885 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.114679514 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180853726 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103653911 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177185912 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.108516519 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123146598 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115231093 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.102171375 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125636731 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105536962 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137065814 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098216153 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104552721 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129942689 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102944233 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105139556 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.132323574 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107213608 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110862494 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129388156 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.176377417 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107383317 seconds)
  done (took 7.990157976 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.916670439 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149034806 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.102600722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.063606752 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145013179 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113123708 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.906208183 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149377682 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252408153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.926948128 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117114037 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109297329 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265407985 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259989866 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268457644 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362461652 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.766716257 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112139003 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.132991219 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167123949 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107034067 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140108493 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117174091 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.445676629 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101438504 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10159208 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128627469 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109278223 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178909123 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.102204077 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127341938 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177425286 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293728231 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.214464507 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102374419 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121372338 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100562375 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.192149275 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273943938 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.224084114 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.192802136 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099398883 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101143153 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128732478 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116664539 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099109462 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182301857 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195938523 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193958443 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104999962 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109734825 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130671814 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104078602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181481525 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099809837 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360170005 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.386604793 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.101139197 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107061798 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134893386 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269551346 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102271351 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.242336797 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144898615 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.218652242 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.101134612 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805891389 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1893563 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10052325 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107341969 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128372308 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107414321 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.104717523 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.185888837 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.425870484 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108126314 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106922767 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122725052 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240246812 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10126159 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101051648 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182618178 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102841711 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130136473 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109100871 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107491057 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.192990252 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273923372 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107918419 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129915783 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107089484 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111376057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.124555389 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209409502 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.256152929 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158052563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228231004 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128216824 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.161079264 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188545777 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107212294 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.192561269 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128876402 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111987291 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106446788 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22819797 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158845402 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103614025 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12897982 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107508694 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163739407 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104852442 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.10817381 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191617794 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.487343674 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189937477 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.098801961 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106663806 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130687123 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15898775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132075633 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265775318 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108593099 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190894713 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107072402 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122447286 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107716752 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184780747 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109240321 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108609136 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127267543 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111786118 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284723478 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225708918 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110510224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.250876378 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.197808068 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107638395 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196328695 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131246377 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167823819 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135277146 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105809772 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103091275 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790884802 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135125229 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106938245 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108350873 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.205271356 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101434331 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128019804 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10103434 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.099639803 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.824294227 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129304696 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099177475 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.104401301 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107305044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12989592 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108981357 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.129775781 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159207972 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.271019047 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109640049 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107091481 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12400796 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157931431 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.127213958 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104427019 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103110851 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125070204 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.10830554 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107439054 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127043722 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168639248 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.180652328 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234352793 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583840571 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12619621 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102362851 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249551321 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102404027 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.353493462 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108009384 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.241617268 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185469666 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.101079385 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361604773 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186046493 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.207216516 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106441878 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196816322 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101171319 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131481304 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159828118 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125672736 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108435157 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182101122 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110493444 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.109242051 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288028079 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102911607 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250331818 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099806349 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193712348 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103767678 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107854448 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.352620161 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101989798 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11434297 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.183015061 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107294548 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12527991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.891515362 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103074022 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111696642 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130416816 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237953588 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187745042 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108424428 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110540132 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132573653 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.184095306 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208706655 seconds)
  done (took 47.010348583 seconds)
done (took 63.338349033 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.259946625 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167904168 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.355724837 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.15011878 seconds)
  done (took 1.891991377 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.286535875 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.140794762 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.244190424 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103942293 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.249966706 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.0994233 seconds)
  done (took 2.038931687 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17507917 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166437003 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145635393 seconds)
  done (took 1.402334721 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211314682 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.209348408 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.350825831 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.236422434 seconds)
  done (took 1.98348131 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.276718638 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118115166 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.13013939 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.228384025 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.244486968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.20947773 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126722639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.176780041 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131870598 seconds)
  done (took 2.592399272 seconds)
done (took 10.821570116 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.465305626 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.379287743 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.16425733 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.414595564 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.138604151 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.277204028 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.144086059 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111005998 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.372234404 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226312575 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141233411 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.222292242 seconds)
    (13/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.320683201 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.242196001 seconds)
    (15/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.201581571 seconds)
    (16/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128554873 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.122463791 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.150208424 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168956854 seconds)
    (20/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.131670776 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.222956072 seconds)
    (22/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.387567319 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.440863547 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.131497727 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.278327287 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132472887 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.178265461 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.423494509 seconds)
    (29/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.15524945 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.11347893 seconds)
    (31/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.081209222 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.195921233 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.146502909 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.111468734 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.283627237 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.232500496 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.085517898 seconds)
    (38/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.138522328 seconds)
    (39/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.164039633 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.229895025 seconds)
    (41/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.138054481 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.087958561 seconds)
    (43/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.182463765 seconds)
    (44/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.326090865 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.127409447 seconds)
    (46/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.143168577 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.135943346 seconds)
    (48/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.216715817 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.081100793 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125090733 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.20335398 seconds)
    (52/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.141549855 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103681642 seconds)
    (54/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.083019043 seconds)
    (55/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.156295984 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.136383224 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213721888 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.123250329 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104548666 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108360867 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.179111454 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079489709 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.180154921 seconds)
    (64/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.148895732 seconds)
    (65/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.109080532 seconds)
    (66/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.130215654 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134995915 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119954488 seconds)
    (69/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.22069079 seconds)
    (70/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107708336 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.137415904 seconds)
    (72/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149212802 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.105074744 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114926074 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078480253 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.13843625 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.104912848 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.104505266 seconds)
    (79/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.216825911 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.199484394 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14688784 seconds)
    (82/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.078554436 seconds)
    (83/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.085083393 seconds)
    (84/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112453638 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169917121 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.101200846 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102896585 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.136229002 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.115879217 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102395388 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.104199675 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108798448 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.128026003 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113275587 seconds)
    (95/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.101636602 seconds)
    (96/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14126297 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.108631961 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.080771755 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.128841805 seconds)
    (100/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084180555 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.086238927 seconds)
    (102/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084323974 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157303258 seconds)
    (104/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114061741 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.083393221 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.114769613 seconds)
    (107/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156130434 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.086976373 seconds)
    (109/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085658846 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.165403738 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.10731697 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111684341 seconds)
    (113/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.092034679 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149808585 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.104199097 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105204884 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082092038 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.084809851 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.171848501 seconds)
    (120/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.140751535 seconds)
    (121/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.082911652 seconds)
    (122/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.0849337 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103248977 seconds)
    (124/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.118939959 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.082151108 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11132014 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.102753094 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125277704 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125919306 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.15663281 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109359243 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082698923 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.089760671 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.126072165 seconds)
    (135/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079200889 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114076941 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.085677032 seconds)
    (138/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.082436186 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.130409203 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.109496366 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.086892633 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.085529523 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.159008815 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085823189 seconds)
    (145/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.08507022 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112325231 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.130265456 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.193044947 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.129297171 seconds)
    (150/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.143727954 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.10546703 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080347434 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.107118876 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.103418832 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.082973006 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.1140428 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.129784538 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.085813362 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103196424 seconds)
    (160/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079907779 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.107103841 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.10565538 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113624127 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0862482 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.150689697 seconds)
    (166/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080235497 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.085804447 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112181358 seconds)
    (169/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.103893951 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103188563 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107219767 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.128744939 seconds)
    (173/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081911587 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111956052 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085977161 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.087291242 seconds)
    (177/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110314086 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.125640655 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08557855 seconds)
    (180/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.08760633 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129548713 seconds)
    (182/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.08727394 seconds)
    (183/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11314054 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.113183943 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.111117416 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.083122299 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.08762261 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103527762 seconds)
    (189/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.139299676 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.087558899 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.106160949 seconds)
    (192/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079108696 seconds)
  done (took 27.573118694 seconds)
done (took 28.488563044 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.230785204 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.131581388 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.113382494 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112639852 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234223014 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.120019088 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154918529 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114974358 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122608485 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138793478 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102920646 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127285908 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.138399669 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.245998577 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.116375518 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.106438431 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.128866376 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.123791869 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.130080225 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.15444687 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.208905247 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131535835 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.123316109 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104983811 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236172387 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105108632 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.138285301 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.114104786 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126140417 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.138695845 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.114273558 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10381355 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.153874069 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.129572808 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104012672 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13686974 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103101754 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087129298 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113960265 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.138025297 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127325341 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114659568 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136490155 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.105266439 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11513441 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.136049837 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103507151 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.11722329 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.126748043 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114076402 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106852516 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152852865 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112530972 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.103612176 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102441206 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.13016762 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124845693 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103635365 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.15128077 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104185947 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105990386 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127362541 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.115728128 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104333418 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.13676943 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.104926878 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114636336 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.140102654 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11301658 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.106589425 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10341573 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.136471546 seconds)
done (took 10.217632008 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113470497 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147892395 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.249920523 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.253143521 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.159215528 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120190395 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118217915 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152761834 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.117742899 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122514153 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166162104 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.137093551 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254002047 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119431824 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.146457889 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.117811273 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115466414 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.136289467 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.252537751 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.130207311 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.127112189 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.146151225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129890136 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.147144032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107475026 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.141265402 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136676136 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11751595 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.108998895 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.140903549 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130606139 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.108627947 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135258231 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12808746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125554685 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.143516233 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120677058 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118013218 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.133223475 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111922769 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115853717 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148109331 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.108961006 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145121541 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.117114596 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124245632 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115935955 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.145235872 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110480725 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115088889 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133144244 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.134074645 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.120315326 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146083694 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.121031266 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.144753893 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120670543 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.121068954 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135436698 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120893911 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.108763756 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.108206102 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.134417222 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129415215 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136678821 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121333609 seconds)
  done (took 9.921808387 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.130714887 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13887053 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14387096 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119975108 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.114516191 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127050057 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.102889274 seconds)
  done (took 1.845041144 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.107469696 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.269606076 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.260638496 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.259546838 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248740994 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.269369561 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127232824 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104871902 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.166298593 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.115754955 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.27037972 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.325677803 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.141362889 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119798615 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.26255944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.104452269 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.262598244 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.131614984 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119546385 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263021478 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121736654 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.161234614 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117336459 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105027525 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262901535 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.133556425 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.310626337 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122310374 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114659014 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.144046731 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119536001 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.211377051 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263003122 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118506011 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114235523 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.257733415 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252591464 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118058234 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.337151791 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10982538 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.248935987 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119267864 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.146542051 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120158904 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119763487 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.245715426 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.151412632 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.12032487 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118463406 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273682154 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142113683 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.265108954 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115931509 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119471488 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115060098 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148661438 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126763304 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.146708314 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.244472782 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.150113353 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.260172885 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.261538204 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.255442044 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.260432003 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130421895 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.268033142 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.24272915 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118606456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112943562 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.147266942 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.263235048 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11900352 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117661959 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.251115933 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150073181 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.265595832 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.263494411 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117051193 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.118948758 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.134885059 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118053416 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106163645 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.254335208 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118553372 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143939413 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.124367757 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117783759 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147338472 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112039609 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.154900186 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.120651216 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118306703 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149647884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119838489 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121992159 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.262508298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.143465981 seconds)
  done (took 17.929918443 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111354477 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.107322345 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.110782234 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.131402824 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107945254 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.106942971 seconds)
  done (took 1.667897522 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.150468468 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120667776 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154010032 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121737241 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.194877232 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.22580396 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.260928918 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139975865 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.140423719 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.131563699 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252811969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256109561 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256832254 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123744444 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.257918804 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122263002 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260936939 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.146406327 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128628817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117158695 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.146163854 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125007207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117553587 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.24413145 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119643215 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.14941858 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114794607 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.15571269 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129355992 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115201322 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.149781145 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120758837 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112744653 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.140186704 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259906651 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.113319784 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116658729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.149103932 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122839533 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.121164139 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.257607851 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117476629 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.153356583 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123883314 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.11335188 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.140420781 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124932849 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140407093 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.23228471 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.151086947 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123324901 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121470537 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.148699425 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124305927 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112663679 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141544942 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.124216419 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.260261096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123856173 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.140235655 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.122340036 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120981325 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141575168 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126855577 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.12190139 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.149322415 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.114471291 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145676781 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118850303 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122325575 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147925519 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.142447475 seconds)
  done (took 11.936338396 seconds)
done (took 44.256775873 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.734241962 seconds)
  done (took 2.725420607 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.095425617 seconds)
  done (took 2.092895216 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.629597646 seconds)
  done (took 19.657605135 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.426061246 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.349351456 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.024941997 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.149754558 seconds)
  done (took 2.948461468 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.099770046 seconds)
  done (took 2.114118557 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.414219122 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276534956 seconds)
  done (took 1.692960437 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.730047667 seconds)
  done (took 1.73648596 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.896409451 seconds)
  done (took 2.901852375 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.276790056 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245682383 seconds)
  done (took 1.539951767 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.673858135 seconds)
  done (took 1.689488262 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.575510399 seconds)
  done (took 21.596320973 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259403124 seconds)
  done (took 1.285731706 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297859976 seconds)
  done (took 1.320232504 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.690687658 seconds)
  done (took 4.711875921 seconds)
done (took 69.021186399 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.124814771 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12390779 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123056954 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.148253702 seconds)
  done (took 1.52643368 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.130162647 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119484604 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12247375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144315724 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125500394 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120909479 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.144156171 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122967052 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118709541 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146705549 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119926877 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119393178 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147902871 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118839017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118956321 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146739934 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123517332 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120302146 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.146022775 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120840941 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120417298 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.12228102 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.150146955 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124076689 seconds)
  done (took 4.115002465 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.121694899 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110879249 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.112945205 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135103255 seconds)
  done (took 1.502205363 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13190321 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131838487 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156737333 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12726875 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133508455 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155931787 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119641496 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11768958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.145228907 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129035514 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135247217 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158556201 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131061434 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.122174043 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157347814 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115128107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.121672441 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156254976 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12702684 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12881895 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147696885 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127127446 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124938679 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.155253401 seconds)
  done (took 4.276788531 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19943628 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.132709869 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.176105452 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166953308 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177820104 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118500215 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148109938 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151362764 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125519266 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.129117629 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.146845182 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166211221 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125088689 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.148341496 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121884365 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152018635 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128633645 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124980081 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188758472 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124401176 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125974791 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.158729413 seconds)
  done (took 4.260445277 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.127527928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.112166053 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136113909 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108691893 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123562456 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.140030619 seconds)
  done (took 1.772311204 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.113744593 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.106708608 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.106473692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.13124519 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.111210165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.10652344 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.129559317 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105369183 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.106101172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.105600575 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.130948247 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104618667 seconds)
  done (took 2.380357421 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211978586 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150054612 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25283819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.389099176 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1899515 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163163219 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.306749874 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186671629 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179936506 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167036795 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183571539 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192898476 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155085239 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218052953 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144323193 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187153078 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174940966 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239824347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172362251 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214700533 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18549629 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209033382 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196038199 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178930089 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141601365 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193741714 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122115844 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13033663 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196674687 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194238908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177353648 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180009257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143740719 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216057361 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264021927 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179319525 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322770226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135471549 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.199772685 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.191853998 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260063833 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170835337 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193109942 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182483763 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13186367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22214411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15175807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216049667 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135645015 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173446476 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184575025 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2097066 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199556883 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139301489 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328800089 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136014802 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169863305 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178286562 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217160972 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231605887 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181847097 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.152389325 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198241255 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191939628 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246012646 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143026203 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193330123 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126854722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192797729 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.235810174 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184460656 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188510565 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.219845402 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131926448 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201889596 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165800804 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183402096 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209840597 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201750387 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.121474844 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181047828 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136496868 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128607782 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.219470489 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122960178 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245044814 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132686196 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.210394209 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209246544 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153928571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191634217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160890564 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19187509 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148372614 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101314247 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173069489 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157291722 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186483911 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130238682 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181095552 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140699386 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126538617 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17985368 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124374051 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199747425 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135711353 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188578294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171762324 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.161802276 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180570464 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177062153 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.166422571 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198006707 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224802291 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132314779 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13429698 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24865764 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200531 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.138442553 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201198446 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197476763 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179657576 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13623799 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195324398 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223404121 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144470389 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232603507 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140007475 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164029435 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140467221 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203343864 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161083982 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.190114132 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129797016 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19719477 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189367131 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.15632864 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140861406 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211303512 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135375752 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12634392 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165406495 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137805159 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.172072945 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152755472 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.140399145 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183710989 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195252064 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166558887 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187370129 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137660881 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203968661 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133026231 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197839782 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148912096 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119541284 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.204283929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228246796 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130754904 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211303688 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160913384 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209330253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200760454 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130224635 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183778728 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156895333 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121864105 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19199323 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170420076 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193957646 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.21837154 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177142581 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.194514061 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193013876 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149335578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199698429 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.184449157 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186714464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.141381079 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201153936 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169156758 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.150194612 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124624421 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128801305 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166615245 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133239656 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16544402 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182581794 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195101909 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20467273 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172141703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169781223 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191402137 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155335094 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161696675 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204767393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140550599 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219133133 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191306063 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209167715 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169600276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164414594 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120979336 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15544226 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136301508 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189372032 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137014763 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137204306 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171316377 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.220065401 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168775533 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178289377 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216152167 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165578351 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.230836893 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121544016 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189855309 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166318691 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199453138 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.186899829 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13505707 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187704687 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.22266725 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144404551 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221920675 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170159034 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210527317 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221349185 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.166331844 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131487392 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174904778 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161224659 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167475696 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160921666 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172134817 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132247095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177620528 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.138771118 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141338065 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215915641 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175306414 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176357644 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183620681 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169959081 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154649144 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143332197 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203290638 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147079225 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104815562 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193927032 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221423594 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151657805 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180747334 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170132071 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159430849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.326680809 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208286036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171572435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167603509 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140409506 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201354533 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158735202 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188122225 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185823535 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172239333 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242192861 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173521749 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169593043 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132273774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147624316 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177943128 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140169064 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.180851172 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.166975439 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.173014605 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220314386 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138535978 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199758303 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177650654 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.175409866 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150333673 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140257553 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257443999 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199856813 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173841329 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.195637385 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163920981 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212679771 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125995037 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157266922 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.1337876 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215645325 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131344228 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210432136 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.165353384 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209212141 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205881515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163473608 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170902472 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12891781 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169475593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179341317 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211679168 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136955821 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.167829909 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187424639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.155956187 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132624458 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16094308 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316011864 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176292209 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171202188 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105858581 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.310905492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129787439 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16041856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160366548 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199997577 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135254975 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.211963297 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175865637 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16984685 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160219111 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164179554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177748736 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209736807 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1963088 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17614988 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.175276778 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162345229 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18718923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172073285 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175534136 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.149417497 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189052481 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196798044 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.203528284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.134649315 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199771902 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171275033 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201614972 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202795315 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139432624 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18408802 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158035585 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167875181 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170552295 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125915523 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190372064 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.165593739 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159968018 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172361626 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20213688 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132449302 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156630788 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148925814 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197247424 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141303968 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130920467 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215659263 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158642198 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184098795 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241230068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132253079 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198655194 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144592678 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160575315 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140138456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145684453 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162303044 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.177835909 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204264775 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13549412 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20401685 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168197315 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194986425 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154895605 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172611742 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.265823793 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128800535 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220780094 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181289269 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197589805 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180150118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176564049 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199974393 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151660454 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195818937 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149648675 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.252148285 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167012163 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.198053165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132306639 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17403874 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139873603 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163898059 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153074691 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200709412 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142376239 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137831723 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.200258463 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146418843 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.176788049 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142969052 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232525638 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151559139 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219232214 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218493988 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139948964 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207990323 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174647074 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161020888 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164881234 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201371324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145306053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183525711 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136585322 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138115269 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246682851 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126536821 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190314905 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206323153 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171583044 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204901687 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136431889 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210849099 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142740925 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207834585 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128751599 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151451917 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201053692 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135533336 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157236938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172880175 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191249544 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166661782 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173031616 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179391908 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224940351 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125705939 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136205296 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316095698 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192397362 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194297455 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163335677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139917857 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147955376 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189461669 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.165838028 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204834727 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134864696 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160343747 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146966152 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.184477813 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138406806 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20018985 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181093146 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187817055 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187126705 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.166056208 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255013361 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172358201 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173774788 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116792099 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15954235 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143038608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165592787 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144102175 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208953209 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245107815 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.164418191 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.147324858 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16655523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129024105 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161438768 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163042543 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151047719 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199831892 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17766445 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104710492 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144159292 seconds)
  done (took 85.971680522 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180551233 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17139084 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.18356192 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.23722208 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.214706584 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.308349045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.249741175 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.261878583 seconds)
  done (took 2.923340441 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125889294 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162708588 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143439129 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145698325 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111798134 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.510802884 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163862796 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121293343 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.162673778 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.155672824 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138568917 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.574837807 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118428007 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.14841972 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.122610976 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137712164 seconds)
  done (took 4.152279713 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.706364022 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.552307046 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.224158973 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.311066188 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.23985921 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.211806871 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.821477154 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.200882182 seconds)
  done (took 13.376161106 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.177000553 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.171352264 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.461640946 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.339800244 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.218046091 seconds)
  done (took 2.488639152 seconds)
done (took 129.752363528 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131586246 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12707049 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.126010282 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.156854814 seconds)
  done (took 1.646929656 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.20048202 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092102858 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093989417 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121749665 seconds)
  done (took 1.626724432 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.3762285 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.09201845 seconds)
  done (took 1.607838339 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.153089161 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13586885 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166407386 seconds)
  done (took 1.583103581 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.144074216 seconds)
  done (took 1.261292067 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.125173781 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.118104664 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.278003597 seconds)
  done (took 1.643262667 seconds)
done (took 10.490282778 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148239186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934921805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436624279 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135309899 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.718069601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43031641 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.427658939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180397506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172730951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142342704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135058692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697722138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441588932 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.882371836 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39776084 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.908076212 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.697773217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114099772 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.148884741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113996814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.407448789 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.141686452 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114196048 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114068549 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723827995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422226228 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112453127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919545314 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111045969 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116557046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.430244975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11259597 seconds)
  done (took 21.101607904 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157587912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16997486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149387459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114279747 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.116277635 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.143220966 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124621043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.125824849 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203772774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112750983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164660456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112016417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11788561 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.142518938 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137988484 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111858776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.145208815 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.114567278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12104266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144810909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134461015 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.113324164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144357811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114184394 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112945518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.163563098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112809607 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125957084 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.141667814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.117423701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118865611 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143048132 seconds)
  done (took 5.401996741 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.166758192 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180986579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151430789 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151876056 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.192984271 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114603025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229352838 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.15212779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209631461 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112947508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135502334 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14279959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153750886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113801959 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168514549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113106714 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115160576 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144795457 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120408516 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115478399 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.165108082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112561376 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.115453663 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.145316672 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113316377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136977943 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142290529 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125685116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112383711 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14709337 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119253029 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113604602 seconds)
  done (took 5.658335753 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.13422187 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.129219178 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.137280195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.168028727 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123670816 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127992069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158522641 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123738059 seconds)
  done (took 2.235923786 seconds)
done (took 35.527583155 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.142000786 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130483755 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134901436 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.159109346 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276463189 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120682849 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13115699 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.15342868 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127762608 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.135294934 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.112468554 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153819491 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134985992 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125198476 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.27483607 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.162598034 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.281676118 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.245110887 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.15518198 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.129011897 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123270278 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.28108339 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.159327469 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121833875 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.271666727 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117044108 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.270421303 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12562731 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.156577482 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113600926 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.280034984 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124802993 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121661937 seconds)
  done (took 6.673148255 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.233047214 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156041545 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.124033666 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123262585 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.12394703 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.153007575 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.229946088 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.155001998 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.123173051 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12286473 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153496318 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214001696 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.160517539 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118413494 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.12521565 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111660837 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.264112837 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.124252487 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146758256 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.094333344 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11878847 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.121828557 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.276411705 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.150767671 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122585235 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122532903 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123000462 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.159230919 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.125394622 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.124875381 seconds)
  done (took 5.651081941 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133654917 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136117827 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170707896 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.190302335 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.153137295 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.168439952 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139078465 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133248961 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.175312711 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116272031 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130798906 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183993719 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132849157 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.126621162 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.14716017 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132483052 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132245897 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147227105 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124093346 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133985247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.166336124 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131854118 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138606142 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154354374 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114032253 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124281277 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.126898058 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.15744142 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124172502 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129598991 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146720112 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.119447562 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.11734665 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.181141757 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11703119 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128667052 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166329143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129940406 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129969529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178097653 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.119217073 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.116670148 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.173038626 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.173677335 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117834953 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.157168475 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.118278014 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129914365 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143985977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134068894 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159038838 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14612421 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136552969 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113907515 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143580253 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124581163 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11631395 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.14960463 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130589368 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117815134 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.167052735 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.122887213 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128204173 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.117441471 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.156583684 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115210717 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.11534501 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.151367682 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14169689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122768721 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.183060259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.114671404 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127586418 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.1591562 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126840083 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128294072 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144165348 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.127424938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127836371 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.120234452 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.157484607 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1190239 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11708243 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.162339386 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.135667628 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130268197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158293477 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127730139 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117400847 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.147816317 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13486668 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116478888 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.150365407 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.128161021 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116865494 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118567772 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.156042877 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125969391 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.113252251 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172137221 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.120087931 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.115661537 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.171057568 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119134919 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120251323 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.155932682 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157415928 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.116107114 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.155521017 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126656944 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.117265601 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.154460846 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.117042574 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.11545216 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13045497 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.162094428 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124617089 seconds)
  done (took 17.251619585 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.380862475 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.366138685 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.215010692 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.409724763 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128857725 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.284782176 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396900059 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.368573784 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.116151467 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182282717 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174299193 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329711264 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.149575368 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14300381 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370063096 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.448301683 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.145015531 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.187641207 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.151297531 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.163033282 seconds)
  done (took 6.269606144 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.128860642 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152037229 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.168944724 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.134450365 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.127655621 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163535106 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11697896 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13887074 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.126990722 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.156697761 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.120029223 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.124189986 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.15978645 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131444096 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131885772 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.178255269 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124222332 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122044215 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.169204837 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121303291 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.103087446 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.172121897 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125342378 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.137321974 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.16403725 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126597698 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11492201 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.151637542 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123225307 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.125355496 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150079376 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.12412371 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.124955254 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.1052042 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.159351333 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131034548 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12301728 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.149010095 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.120953799 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118881805 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129657262 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.157480511 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125037881 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099670062 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.166046416 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.110733315 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.130002574 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128215995 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.136893748 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135105246 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128750905 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.162345208 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.123131951 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13897465 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.153081441 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132440737 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126322277 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.16003502 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120914933 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115078269 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114576954 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.148408704 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125375892 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.130784557 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.157998458 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.125450668 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.125667911 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14543792 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120571495 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.119137631 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11789172 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.159051462 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137525706 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125065865 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.153635066 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127441589 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124613213 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125536026 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124294561 seconds)
  done (took 11.801152615 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146303712 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126826341 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133269121 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179133537 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128772193 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121593505 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.157367133 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.137484061 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.131000406 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.165633858 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131693739 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.130873259 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167941992 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.127295863 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126685121 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163709945 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128970479 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.154581319 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.157970067 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.144228908 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130163978 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150916256 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129677016 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127449354 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.17411276 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.128849876 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143021186 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158284752 seconds)
  done (took 5.178933321 seconds)
done (took 53.961941865 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.299811384 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.497927004 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.273645638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.272272989 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.294981519 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.302421408 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.268233605 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.273951304 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.751639916 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.23944113 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.272469004 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.271108859 seconds)
done (took 29.183476515 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.424184399 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.410513288 seconds)
    (2/2) benchmarking "String"...
    done (took 1.581555396 seconds)
  done (took 4.160411234 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.26454773 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.263835398 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.512240528 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.261280933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.258322286 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.259843419 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.28148525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.265580743 seconds)
  done (took 16.262639435 seconds)
done (took 26.271245389 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.270379872 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.53183144 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.506355181 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.251691083 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.259191464 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.263557011 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.2601815 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.313557572 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.265897444 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.242909064 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.711950817 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.531580319 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.263092626 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.653009252 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.248518315 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.274936128 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.276888187 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.579308197 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.260944427 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.266057837 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.256940589 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.241610387 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.266418643 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.286296344 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.27250008 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.266275731 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.288799711 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.264420017 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.538612693 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.285863039 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.25626382 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.276931677 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.288541598 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.266426184 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.281778317 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.271927841 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.535026964 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.274200243 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.255883612 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.274592842 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.537345913 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.283795028 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.261586068 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.266447516 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.242087279 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.282243732 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.250371279 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.383592131 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.300147662 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.270306301 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.335843913 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.681612523 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.270182384 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.265958811 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.26335952 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.576658004 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.266116583 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.379310135 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.301190858 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.265952289 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.262742214 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.26977252 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.291951643 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.264990262 seconds)
  done (took 148.11551613 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.265394474 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.264357996 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.263698794 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.270105618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.26433777 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.265091341 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.268546586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.268301111 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.265039865 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.288513134 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.265768299 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.263019908 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.268746287 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.20273245 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.280480094 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.289486174 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.26743874 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.281520852 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.290460681 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.269744468 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.292064237 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.265108977 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.265029442 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.265383208 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.277718283 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.360976835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283233745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.269786703 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.274944022 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.268611505 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.272738649 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.31742472 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.264338862 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.133853241 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.279173776 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.295678569 seconds)
  done (took 82.910968556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26912994 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.269623028 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270946855 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.305144083 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.269445497 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91789188 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918701988 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.334703316 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.726908586 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.861584936 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543850152 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.266154334 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365735187 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280903476 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.270871321 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.269921342 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.366851099 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.29277799 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273157525 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.270280277 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.920351206 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.286973787 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.815525477 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.453577178 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.283554619 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308411694 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.666574947 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.267239405 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309343694 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.615737052 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.32120277 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.267372713 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684011116 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.894581605 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382800832 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.271574411 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309605644 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.272005835 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560146434 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.268930601 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.270698837 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.274966861 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94153364 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.267553929 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.920747241 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.274384337 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.285778168 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.266735418 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.274331466 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.269336992 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.027829825 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.269180217 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.272823622 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.275797061 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.274499335 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.274728981 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.309002277 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.268482774 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.184594342 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.268850197 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.279163683 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310637476 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.276546609 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.827693925 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270346835 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.44911995 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.327452416 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.494101712 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924233205 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.275917839 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37338396 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.392279551 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.27180138 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.272074252 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.274908508 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.276552924 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.391512415 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.27256633 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.008134754 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45838652 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286065067 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.273887913 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.873543398 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.377542585 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.271541409 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.692850535 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.275528969 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.274750584 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.039133811 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370031611 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.270365682 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.276134761 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276502071 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.013249599 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.924731633 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.604323055 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.277331961 seconds)
    (98/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.277458061 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.864892572 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.277541937 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.189625521 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.888439438 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.9363027 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.276523826 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39097843 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.460212373 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.287011629 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.27869617 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.276060713 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.877498592 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.276098893 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337510415 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.277594052 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683968243 seconds)
  done (took 387.805758608 seconds)
done (took 619.995255725 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.256531869 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253736562 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.25227072 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.254767511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.256191208 seconds)
  done (took 12.443578853 seconds)
done (took 13.615414798 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.503202063 seconds)
    (2/23) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490178911 seconds)
    (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48636462 seconds)
    (4/23) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34407887 seconds)
    (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.503610824 seconds)
    (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.501461438 seconds)
    (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.405913829 seconds)
    (8/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
    done (took 1.345825881 seconds)
    (9/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.478185657 seconds)
    (10/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.499823004 seconds)
    (11/23) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.483456494 seconds)
    (12/23) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30930747 seconds)
    (13/23) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.505018387 seconds)
    (14/23) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.467201074 seconds)
    (15/23) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.292512011 seconds)
    (16/23) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395093246 seconds)
    (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
    done (took 1.428514447 seconds)
    (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
    done (took 1.426086089 seconds)
    (19/23) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.366615229 seconds)
    (20/23) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.397372277 seconds)
    (21/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
    done (took 1.524991646 seconds)
    (22/23) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314563513 seconds)
    (23/23) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.312995114 seconds)
  done (took 33.952715719 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.599550318 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.290706402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.347168723 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.573724413 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.3237338 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.589549412 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629594936 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29041012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.444025526 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308405582 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.302128362 seconds)
  done (took 18.873813656 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587171933 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.290451123 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367275612 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.569407763 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324826444 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.585059866 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.621230333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.29231139 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.458340516 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304537315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.301148942 seconds)
  done (took 18.876470269 seconds)
done (took 72.880118697 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320401398 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.38662794 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312726389 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.299903985 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.298708234 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.29705867 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.300953017 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.299117247 seconds)
  done (took 11.688543229 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.298582491 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.29903137 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.297488611 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.29959715 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.297190136 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.296420017 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.296520694 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.298742568 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.299901376 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.296372187 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.29656889 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.296559726 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.298989121 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.298118056 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.297965108 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.299429175 seconds)
  done (took 21.941238673 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.299930047 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.298930451 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.299087303 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.298388767 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.300035781 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.299249291 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.300925616 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.297873346 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.297916216 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.301730053 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.299447144 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300965039 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.298721742 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.298895541 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.2986342 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.301570566 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.300247001 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.299651019 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.303495019 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.299489932 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.299249803 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.297935765 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.301490298 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.300670017 seconds)
  done (took 32.370687095 seconds)
done (took 67.173476698 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.28331324 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.287024595 seconds)
  done (took 5.744800729 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.360376559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.362051469 seconds)
  done (took 3.900845426 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.300998776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.299278403 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.304054779 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.301083564 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.300585024 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.302699586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.300938184 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.300315857 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.310357754 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.300483564 seconds)
  done (took 14.198601785 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.303136624 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.301327952 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.300842469 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.301087997 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.30247896 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.302330766 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.30472514 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.301873846 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.303946861 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.301961001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.301881113 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.301417185 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.303000502 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303404634 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.302423329 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.30200811 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.301605344 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.30525735 seconds)
  done (took 24.621735919 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.316978912 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.321631205 seconds)
  done (took 3.8152885 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.431959414 seconds)
    (2/7) benchmarking "second"...
    done (took 1.345950925 seconds)
    (3/7) benchmarking "month"...
    done (took 1.40720486 seconds)
    (4/7) benchmarking "year"...
    done (took 1.399865937 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.345138977 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.323742587 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.349528406 seconds)
  done (took 10.780308294 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.2887686 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.600075542 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.796873715 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.449821118 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.279178178 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.309246668 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.270441024 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.306776654 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.314921097 seconds)
  done (took 14.793029732 seconds)
done (took 79.030115976 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.289517853 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.315818131 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.316838959 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.300912323 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.599410858 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.351554878 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.291084116 seconds)
done (took 16.648442427 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.268917343 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2826782 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.268095728 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.301348457 seconds)
  done (took 10.299606868 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.301674404 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611018966 seconds)
  done (took 5.093280069 seconds)
done (took 16.57392872 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305793668 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.303045934 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.304841229 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.304138878 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.304226118 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.303805003 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.307287273 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.306573662 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.307400355 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.307922857 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.307130041 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306747281 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.308085634 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306778006 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305536794 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306656189 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.305217802 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306028173 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303293197 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.305232344 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306724124 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307845822 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.305010713 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.309294249 seconds)
  done (took 32.523448526 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.307329087 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.30772879 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.309833319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.305235805 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.306476355 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.307750098 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.307818799 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.306291067 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.306677683 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.30867788 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.307076022 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.304888764 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.307652249 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.309608715 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306792296 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.308495895 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.30795677 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306897875 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308457582 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.308168241 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.3092893 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306695668 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.307660271 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30705899 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.309674097 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.30703687 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.304912006 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.30996351 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306690473 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.307307607 seconds)
  done (took 40.408651431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.314361125 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.314444529 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.307912133 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.311772113 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.307756941 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.309634879 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.309679401 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.308585406 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.306850988 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.308284084 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.30989558 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.309037883 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.308825207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.308894218 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.31025608 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.309294811 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.309326805 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.308345901 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.309160975 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.307714138 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.311390107 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.310527983 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.309103962 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.312257656 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.309567063 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.309348452 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.30960004 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.311577526 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.3126694 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.310359779 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312636326 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.30961348 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.31175953 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.311332912 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.310255986 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.311655151 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.316138796 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.31876564 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.310053848 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.310646893 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.310693119 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.311193281 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.311453113 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.311002416 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.310115375 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.309942581 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.31174482 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.312110713 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.313864283 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.313155685 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.310766338 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.311856129 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.310771471 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.311353637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.312305481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.312718797 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.311755935 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.31137066 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.316022534 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.312196101 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.313720941 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.31322418 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.312112926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.312001273 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.313565592 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.3099647 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.312285199 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.311130842 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.312062171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.310206848 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.31202447 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.314669442 seconds)
  done (took 95.585954591 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.310715504 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312908118 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312092228 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.311692582 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313177046 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.312139625 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.31220597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.31448048 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313713733 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.314274704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313990828 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312609294 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311460943 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.316472759 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314125079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312509826 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31369757 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.316434983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.314998409 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.314567078 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316584568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.316456002 seconds)
  done (took 30.088269188 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313448352 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.314635177 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.312249948 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.314186155 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.314879932 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318086552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.313655974 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.315354006 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314977572 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315140573 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319669089 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3171522 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315357783 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313651549 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.313577408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.317738445 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315072181 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.319513178 seconds)
  done (took 24.869409085 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.313301082 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.315145839 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.316637447 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.316121967 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.315658541 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.318292395 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31702983 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.316110999 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.317040591 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.317979797 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.316727744 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316628497 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.320056543 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.31675425 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318138605 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318589498 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.315823301 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317035707 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.317707209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318808356 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.316663135 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.318640085 seconds)
  done (took 30.163923466 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31744725 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.316602994 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.320485593 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.317211181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.315912858 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.318607061 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.31825991 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.318980439 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.322049529 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.317957086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.315883091 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.318350058 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.319476795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.32014687 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.316779203 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.319425251 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318919925 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318666637 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.318053361 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.318907658 seconds)
  done (took 27.556820754 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320677169 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318786261 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.321157702 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318134599 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.318118406 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316895228 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318208587 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.320290002 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318251134 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.321442135 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319861834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318378463 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31957502 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316293962 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318112503 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319071151 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.318778259 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32072621 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.319383806 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31802448 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.319459294 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.31860808 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320877258 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320937631 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320643075 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320554721 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322548097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.321049031 seconds)
  done (took 38.138471067 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.321693738 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32145844 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.321915199 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.319741509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.321691615 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.318364276 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.321481585 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.323772123 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.323726528 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.324732627 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.320882206 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.320748129 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.323972265 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.323843774 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.322106647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.320934708 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324889258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.321909091 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.32315719 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.322862016 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.321909772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323381744 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.323671747 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.32341605 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.323651045 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.323330869 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321573886 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.324795978 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323370746 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.322489412 seconds)
  done (took 40.871040582 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.340550716 seconds)
    (2/2) benchmarking "in"...
    done (took 1.341842063 seconds)
  done (took 3.876383928 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.324434327 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323661285 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.322289078 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.325270509 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.32535506 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.324236557 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.324808175 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32449256 seconds)
  done (took 11.790804268 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.315828051 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.325094138 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.325839512 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.325233945 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.323843699 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.312671059 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32447613 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.326740096 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.315028892 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.316963172 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.322633859 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.324244756 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.319464426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316633615 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.316114473 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31990696 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.326357861 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323134905 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.324592902 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.326063681 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325653629 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31723083 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.325955419 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.329549602 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.318675921 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.328977607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.327128941 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.330398487 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317307741 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.322951637 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.319360464 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.326512489 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.326830702 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.322374083 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.325468569 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.324984827 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.326370041 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328060161 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.327269623 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328865725 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.328382074 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.324818217 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.317785572 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.321883376 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.323497919 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.330201453 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.328662457 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.327848855 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.319394759 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.324368893 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.332689281 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318342655 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.329249612 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321758248 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.325221157 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332136939 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.334566849 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.322175793 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.329206316 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.330654651 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.337256762 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.337198162 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326885521 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.33226342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329429003 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.343980771 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.330783473 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.334236859 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.327749545 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.330574126 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.32956468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.342335523 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.340190396 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.332129517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.328469317 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.330074233 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321194884 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.334233196 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330898652 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.333714087 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.334264672 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.327895758 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331453368 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341703141 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.324127968 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.332854839 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.330516891 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.329512463 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.318910213 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336384642 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.337259436 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.328055955 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.319502043 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.32333213 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.326461358 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.331892727 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.320175975 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.326811265 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.332953876 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.32984611 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.330496397 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.324733507 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.332675938 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.334078015 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.329480392 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.332310762 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.339072077 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.325341784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.336742965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.339936976 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.330522121 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.323975375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.32955576 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.333375895 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.322628649 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.333878537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.335886535 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.327493729 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.338460051 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.331703269 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332762264 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.34940874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.336827234 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.330868448 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.326813179 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.34381368 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335270607 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.33314387 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.338593942 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.331633915 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.332042138 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.329519753 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.336141379 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324336839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.338517978 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.323665566 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.336335762 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.332448785 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.333115936 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.327393519 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.332763809 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.328882221 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.330636611 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.336931432 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.3386527 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.329276649 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.340690915 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.330599215 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.33204459 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.332844139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.337621529 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333615183 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.325947172 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.335192537 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.32457778 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.333502544 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.324518449 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.338065013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.332859716 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.334023932 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.333641356 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.326249008 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.331997951 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.337896926 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.330201109 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.334847693 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.335432788 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.336877436 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.336182063 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.323487771 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.337005901 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.324921853 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.330673639 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.340902238 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.333704293 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.33403882 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.33431217 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.343159301 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334979563 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.335237886 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.327006443 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.33644848 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.34085647 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.337347214 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.342633892 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.335562599 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.335593437 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.329897268 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.330302815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.339533114 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.329614087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.346516532 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.343984601 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347245541 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.331481409 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.338611004 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.330476363 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.33634719 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.33635398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.340774052 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.335773988 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.334996851 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.329763211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.339169376 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33081438 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.339499254 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.326298253 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.339767139 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.341358259 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.340798081 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.335482415 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.331139546 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336030838 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.340129417 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.337197719 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339641976 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.329371397 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.339678377 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.327507365 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.330635364 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.340816409 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.339072845 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.338857787 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.346287789 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336023724 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343917008 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.33938936 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.334434964 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.340153533 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.335410802 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.338460794 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342821999 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.340556935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.33453161 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.345763832 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.341814338 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.332921363 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.338475924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.345750974 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.339133998 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.331653937 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.345661226 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.34038483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.342037335 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.338160454 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.331975064 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344983672 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.341979053 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.348568095 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.334735173 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.343967938 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.332875971 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.342255714 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.336680018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.341760268 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.337357084 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342976911 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345754357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.339716851 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.335201821 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.342299712 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.340281512 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.338498061 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33448967 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.348537456 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.343131166 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.342419611 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.336984895 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.338781077 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.345572548 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.33339617 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.340836471 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.334478315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350500937 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.362050701 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.344021537 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.345472468 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.345033516 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344864558 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.344567346 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.336344918 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.337110931 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339813855 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.336439612 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.33369705 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.345322512 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335499148 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.344080252 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.343449858 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.342136348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.345849531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.344236793 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.335440528 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.34946963 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.343047664 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.341822404 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.332972906 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.346412071 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.33629151 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341452888 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.343477351 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.335216156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.3483074 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350857529 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.338910495 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.339975452 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.338716909 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.336608001 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.340100277 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.349504094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.337776091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.353202661 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.3385823 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.342577139 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.340076116 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.350983761 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.354892023 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338033214 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.351011653 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.340984479 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.333972094 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.337625491 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.347962816 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348924411 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.35862158 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335988281 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.34614713 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.34540922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.344413099 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.345693344 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.344240644 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.347252888 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.345451493 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.353067146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.350756456 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.341439578 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347049495 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35585454 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.344856079 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.345366308 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.338525439 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346567751 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.355623602 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.344063074 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.341506817 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.341431167 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.348683059 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.345596545 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.348187358 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.349215215 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.347623157 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.35035641 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.351442339 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.348798583 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.345071136 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.352722714 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359717269 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.349156675 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.357792449 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.340907023 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.347887562 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.346170111 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.341809843 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.342223296 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.344847779 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.351019541 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.339649238 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.353243525 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.346409653 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.341940101 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.34837049 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.352116548 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.340634654 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3488333 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.368563899 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.337333703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348904957 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.348191473 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.340394392 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.351350059 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.349640649 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.338909972 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346167062 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35013277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355861212 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.340069065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.350876139 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.339637022 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.352045191 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.346007874 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.348511082 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.346142309 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.347290236 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.343711923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.349938731 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347397846 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.359533499 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.341515211 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345875957 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.343541173 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.357194086 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.362810195 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.343887144 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.355633279 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.350648029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343368915 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.348404071 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.352069938 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343094713 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.352677426 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.340384738 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.346904751 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.348886378 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.349427854 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.351685458 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.351072754 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.343191032 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345787876 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.35157498 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.350190064 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.351293376 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.3480215 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.357181666 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.344249623 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345134056 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.353893203 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.345068728 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.357111142 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345164065 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.351252051 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.351622501 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.355461707 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.351013769 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.353353203 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.340995616 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.344172092 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.355744343 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359015888 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.353551265 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.351240917 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.355065138 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.344233217 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348147892 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.353020691 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.348181472 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.346761525 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.354806235 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.347074294 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.346881502 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.348904269 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.35362466 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.357124004 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.357564237 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.344859614 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360438108 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.363270567 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361529301 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347406657 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351734639 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.348060053 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.355134175 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.355270427 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.347184767 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359985335 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.362936972 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35698962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.351794933 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.356012793 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.344846615 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.36083992 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.352482477 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.349291653 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.361793489 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.351590226 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.36342491 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.352520846 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.351793955 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.347878638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.347601025 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.350134386 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.351704778 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.355955601 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355057784 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.359798665 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.351300629 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36042584 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.35601768 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.355338689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.354935583 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.344593526 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.357900757 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.346681958 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.358690874 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.358864769 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.348762815 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.36178333 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.357788147 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350018398 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.356165513 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.364204836 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.356862323 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.350775478 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.354901756 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361365882 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363683228 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.354401523 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.347435044 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.353867607 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.357569537 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.35779526 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.358217249 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.351368696 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.367625392 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.366560516 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.34968571 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.354225686 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.361910257 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.367818528 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.359081957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.357932186 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.354081083 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.356686056 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.365066948 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.357200415 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.362458046 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.362464821 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.353855378 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.360294757 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.350683447 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.357170142 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.361629695 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370107382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.357635226 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.355476921 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.372477513 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368712457 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.358848099 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.385694409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.367981965 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.356215411 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.36287888 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.352128091 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.360239182 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.353394304 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.364547973 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.358026094 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.360958194 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.357871367 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.35154437 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.359974549 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.367844021 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.367419224 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.35959179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.352384401 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.356903268 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.361102238 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.361886134 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.359291809 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.35815706 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.35882183 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.359636418 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352363413 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371949644 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.381997644 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.36600609 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.360176647 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.361258932 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.360173408 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.367562648 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360854767 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.367613077 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.358711642 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.361548405 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.358184198 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.370832097 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.358984884 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.353902971 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.355853498 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.35797904 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.365013465 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.370774802 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.383235865 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.363674815 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.368182936 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364726247 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.360986523 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.356733915 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.366028319 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363104809 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.352682666 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.359891608 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.367599734 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.363838641 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.362119356 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.35728153 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.369286501 seconds)
  done (took 801.766208988 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.360896314 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364743729 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362271216 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362302063 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.363328095 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363443897 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.361503921 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36534189 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.36263246 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.365930218 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.363559361 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.365401439 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363488492 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361170312 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362866873 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.363449994 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.361861575 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.365829059 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36656186 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364221451 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.36387212 seconds)
  done (took 29.868071113 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.364640616 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.364482397 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.366704964 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.36590385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.366334859 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.364367143 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.363842932 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3651513 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.364035649 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.364675746 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.366072955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.361095924 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.362438825 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.364569131 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365218809 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.366177956 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.367073767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365216701 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.365484533 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.366878989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.365351284 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.365394929 seconds)
  done (took 31.265437842 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.365068652 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.365709671 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.356909679 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.367650216 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.368856322 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.36438208 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.36538357 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.366461953 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.365409642 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.360036623 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.358761821 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.361302058 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.366035501 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.373530255 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.361876626 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.371981404 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.365174983 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.367268608 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.365807887 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.365277288 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.370886759 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.378093565 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.366927066 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.357789449 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.367667243 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.368589156 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.370540948 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.367481087 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.360220013 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.373209029 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.368227152 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.359885649 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.371113702 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.367792924 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.362791426 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.370963755 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.367994486 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.366868322 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.368732141 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.371137044 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.392185339 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.37008209 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.374205588 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.38110383 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.369291912 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.363904489 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.378653115 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.369043788 seconds)
  done (took 66.892836442 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.368172835 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.370516768 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.369208193 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.371102351 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.371711986 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.371652877 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.370927793 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.370691355 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.37114843 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.373695772 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.371739158 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.369985995 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.373167169 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.371484949 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.372453293 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.370318974 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.369778246 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.37089049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.372615146 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.370547289 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.370969872 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.371791157 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.372586423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.373410991 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.37322404 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.37447203 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.371164344 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.372995441 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.374027202 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.373111526 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.370748351 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.371458693 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.372460421 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.371400424 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.374535738 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.372462713 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.372492227 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.373531956 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.371609711 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.372190492 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.373972897 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.373114137 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.373320336 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.371816474 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.373091583 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.372273684 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.374179221 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.373306006 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.372919283 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.373766405 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.373005667 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.374447409 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.374090392 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.37413793 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.37476135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.376653945 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.375638496 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.37370254 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.373759279 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.37399794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.374261362 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.375654381 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.37550715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.37715869 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.374706071 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.37197936 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.373525484 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.375639662 seconds)
  done (took 94.58680743 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373761121 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.375774963 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375645764 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.373385169 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.375670772 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.376236597 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.374693162 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.37353815 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.376444543 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.375636904 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377465261 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.37324031 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.374703346 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.375273109 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.376372179 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.37724311 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.376422777 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.376199167 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376426345 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.374377505 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.377965416 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.375702056 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.376751351 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.376390397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376398802 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.376289396 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377090828 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.374294411 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375432534 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.375563143 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.376921859 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.375658424 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.377081766 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.376706957 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.377800651 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.377777965 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.376762673 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379942548 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.378081362 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.378994529 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.377833655 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.378698873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.378280926 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.377851189 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376986214 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.378829111 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.37770691 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.378925567 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.378676485 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.377615552 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.378565785 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.37832631 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376599104 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.378585586 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.376074352 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.377867092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379486516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.379046284 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376187018 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.377355902 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.379636788 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.378404371 seconds)
  done (took 86.607197588 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.377153284 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.380990397 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.379254298 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.37829188 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.379131333 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.378064799 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.378860264 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.379867133 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.381192449 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.378837334 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.380227337 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380723568 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379642848 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380725986 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.381226597 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382001915 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.381273878 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380091506 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.381984165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381764188 seconds)
  done (took 28.847255426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.380979137 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.380390597 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.381587309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.381401784 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.380450211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.380755839 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.381571708 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379711611 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378321831 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.381585509 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.381223849 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.380811205 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381260346 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.380285788 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.383922479 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.38302339 seconds)
  done (took 23.344770129 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.381398884 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.382595424 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.383475958 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.383240178 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.379519253 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.383646862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.384452569 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.382642936 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.382417347 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.381039974 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.381966666 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.381564007 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.381358662 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.384380779 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.38272035 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.383245572 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.38271858 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.382203104 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.382124087 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.383148899 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.379068966 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.381978197 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.383824578 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.384671967 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.384919698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.384558025 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.382670824 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.384092742 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.382538661 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.381446994 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.384154777 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.383358236 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.384998456 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.385311588 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.387578126 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.382898915 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.380523839 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.38504054 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.38381857 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.383164815 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.383433647 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.384805583 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.383662704 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.385363433 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.384177055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.384245613 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.382589864 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.383884454 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.38137946 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.385104213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.385093898 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.385410898 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.384790046 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.38707767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.384323391 seconds)
  done (took 77.334470499 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386229119 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.387238221 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.384139054 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.386330825 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.385917521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.386810658 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.386289228 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.385410279 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385106028 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.387789352 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387472382 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.387115917 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.386636284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.385787673 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.38541548 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.387106844 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.387231696 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.386301826 seconds)
  done (took 26.204606833 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.387527432 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.388109386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.386199822 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.38655873 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.388593595 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.387255035 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.38594395 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.386161871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.387288587 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.387613603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38667102 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.388506782 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.387288762 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.387149315 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.387783376 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38906849 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.387323671 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.388769885 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.389683794 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.387309456 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.388825171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.388357846 seconds)
  done (took 31.78011423 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.378228926 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.377458392 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.380264613 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.396914946 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.39709027 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.37989599 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.376692303 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.377480664 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.401737513 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.420936842 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.415558933 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.395973502 seconds)
  done (took 17.948019587 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390681774 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389556893 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.389323956 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.387946369 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389331072 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389721972 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391202122 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391403342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389650282 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39295647 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387352669 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.389653712 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389023615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.390839094 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391534634 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390691453 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388126003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390150927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389733915 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389611975 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387282973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.390269508 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391000879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390570786 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.389656124 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.388033715 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38984874 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392958205 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394257612 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.392819084 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.392126586 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.391892285 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.393289042 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.388980034 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.389882053 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.391068701 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.390495512 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.389232614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.391996119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.391388342 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.392456658 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391051178 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.391789759 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.391216009 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393503869 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.39447106 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.392718671 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394440532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394199545 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396473417 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.390116032 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393724968 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394093776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394805766 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395003882 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39770614 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.394852788 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.392566181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39663506 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395707064 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.393888387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394132052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.394520202 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.396290496 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.396864931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397952577 seconds)
  done (took 93.124098121 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.393678977 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397787964 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397087909 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.394194176 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395210952 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396952109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393430461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.395881828 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.396288356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39520178 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.394678163 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393423543 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.395195951 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395816655 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395141572 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.396791279 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.394611462 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39860644 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39568542 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39422304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.394387396 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396637126 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.395400153 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397096067 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.393912609 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396777162 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.396965564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.39749004 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.397617698 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397441696 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397640859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.397779771 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399345085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.397695516 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399965208 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.39781466 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.39911156 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395172994 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398584577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402365031 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.395665147 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.398226906 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400411942 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398979002 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400034985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400767341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400639948 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40146485 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400703762 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399460378 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400391398 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399333464 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398645838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398647091 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398519389 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400208781 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398659146 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399314191 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398344159 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.398050306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401062372 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.400616265 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399806144 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404427732 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400813548 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401209125 seconds)
  done (took 93.513957441 seconds)
done (took 1880.139290572 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.556136524 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.515960969 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.390345516 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.416614093 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.383992841 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.386219131 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.401191164 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.401343296 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.391602852 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.393287241 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.391029794 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.584563333 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.45637269 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.38875219 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.390097212 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.485186762 seconds)
  done (took 28.193249445 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.423957664 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.399189529 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.534958376 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.397500424 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.423884424 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.61812122 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.462962234 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.399365663 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.611412801 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.415853974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.386472058 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.423051321 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.3948619 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.386643342 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.416511589 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.613819161 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.706195294 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.392561004 seconds)
  done (took 30.670713589 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.948339735 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.402211629 seconds)
  done (took 5.612223733 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.421352172 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.395002005 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.399456794 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.394999822 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.386119606 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.382645491 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.394751694 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.387613863 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.40070998 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.542331237 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.39935509 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.411431132 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.410940439 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.397211287 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.403925376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.448487099 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.546966777 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.403168471 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.403873717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.401626986 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.393158468 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.50387867 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.440423234 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.40652764 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.544239602 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.390069688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.393842794 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.404477856 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.52907918 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.405723096 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.396487774 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.400267737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.396744721 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.391078873 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.993437801 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.387650838 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.42234326 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.405767398 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.40489962 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.552038706 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.398691657 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.404988893 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.388874264 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.978036275 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.506272039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.534816022 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.412155013 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.39539235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.398478662 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.474151717 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.3992642 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.403199356 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.471546111 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.251715294 seconds)
  done (took 89.197049001 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.428466018 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.392811869 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580631332 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.412199655 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.387828377 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.419611614 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.390219983 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.739326061 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.415772561 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.390332082 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.736597553 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.074625018 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.395884132 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.442590321 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405093155 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.436640571 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.393311555 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.393487675 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.3929193 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.394549552 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.002060786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.399390535 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.390939084 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.549550351 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.435722924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015990809 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.396734332 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.408198246 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.396181381 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.393708934 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.042053461 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.408029185 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.447748505 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.392871121 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.715654694 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.855256339 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818631055 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.393868919 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.413629099 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.391535328 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.394698292 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008001036 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.83316778 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.392635332 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.401536867 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005576775 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.391725703 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.400925586 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.40663585 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.672049323 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.396375439 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.396073623 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.393415689 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.410106541 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.397608753 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.424152524 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.450199331 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.014159668 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.390966558 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.392020858 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.44435492 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.395964496 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.400573421 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39829524 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.393381596 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.835581277 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.568565574 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.398431263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.841433921 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.032462357 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.391786759 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100234662 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.398068089 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.397335936 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.472177466 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.399528225 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.39787692 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998499404 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.391230771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.390797185 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.822906747 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.397865555 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.737366643 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.417491207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.393169942 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.021345545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.399355494 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.443533856 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.394838562 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.39683613 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.419931755 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39744832 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.718114684 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.421832958 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.395877193 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.396282905 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.431155136 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.394894328 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.392037571 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.39799376 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.109944235 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.398857543 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.398151135 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.400798926 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.4004899 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.399940352 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.398500635 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.401640809 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.686263259 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.398162768 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.39631016 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.39985493 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.394416275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.402292714 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.55332061 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.409713553 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.770755037 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.395990485 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.410226833 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.406601254 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.400467956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425436983 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.393398908 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.423830891 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.381082439 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.712933175 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.438880141 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.393823989 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.402044791 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.40118142 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.395106998 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.399698737 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.456766709 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.403510522 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.253657506 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409852758 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.41802262 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.40081872 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.410166619 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.399065354 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.402809273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.401257761 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.717656965 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.722405066 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561279504 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.406498834 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.399647784 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.26736909 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.401216658 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.588654496 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.422264156 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.399892588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.706780433 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.635543628 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.400337648 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.397169166 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.403770786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.686015253 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.401803016 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733773633 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.063105016 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.404125209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409175749 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.261564888 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.158797903 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.39789594 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.407646313 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.731798091 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.420996386 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.401373769 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.401199769 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.400710952 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.397685838 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.403223804 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.401843881 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.404656827 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.406319942 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.512112739 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.606906571 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.424403002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.405306545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.009065611 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.421972557 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.397848814 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.406786632 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.402882542 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.402665677 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.470336153 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.401158226 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.416264377 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.401756422 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.411371383 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.04698809 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.399955221 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.402203839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.604468619 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.206654944 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.406549562 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.403675285 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.401202141 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.461932821 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037289642 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.458905895 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.779197035 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.408825596 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.45126037 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.405804544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.407560364 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.041599517 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.40462936 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402503842 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.193950727 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.400814903 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.091588505 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.404359506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.405207828 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.118502727 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.400827696 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.408872992 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.401475912 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406921215 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.714230295 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.408190349 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.462783208 seconds)
  done (took 514.995355563 seconds)
done (took 669.92933615 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.407678914 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.40864617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.40935824 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.401753205 seconds)
  done (took 10.906979356 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.425188709 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.41511985 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.42273017 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.416674182 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.42560629 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.412954893 seconds)
  done (took 9.800136478 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.405671148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.408149254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.409249988 seconds)
  done (took 8.504519497 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.652364569 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.438537598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.814817721 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.407929243 seconds)
  done (took 9.597407247 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.424517082 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.422485798 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.422974431 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.422715086 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.429504593 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.429115653 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.425474728 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.426099997 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.427842837 seconds)
  done (took 14.108819515 seconds)
done (took 54.197332151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.913398894 seconds)
    (2/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.385203685 seconds)
    (3/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.436798917 seconds)
    (4/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.510912795 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.485116486 seconds)
    (6/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.764075157 seconds)
    (7/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.443716739 seconds)
    (8/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.482692421 seconds)
    (9/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.38727329 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.385990342 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.685825063 seconds)
    (12/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.542319433 seconds)
    (13/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.439074232 seconds)
    (14/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.623064084 seconds)
    (15/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.483568607 seconds)
    (16/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.492725926 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.510313467 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.445413086 seconds)
    (19/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.535323361 seconds)
    (20/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.479518301 seconds)
    (21/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.386757968 seconds)
    (22/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.805378455 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.388028564 seconds)
    (24/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.541542643 seconds)
    (25/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.223507003 seconds)
    (26/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.487818874 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.86107657 seconds)
    (28/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.039014474 seconds)
    (29/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.389815084 seconds)
    (30/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.503285822 seconds)
    (31/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.388978877 seconds)
    (32/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.822969404 seconds)
    (33/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.389093293 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.454580312 seconds)
    (35/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.735150535 seconds)
    (36/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.499716648 seconds)
    (37/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.919349935 seconds)
    (38/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.497203443 seconds)
    (39/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.391275914 seconds)
    (40/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.851274758 seconds)
    (41/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.519268325 seconds)
    (42/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.388973218 seconds)
    (43/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416110146 seconds)
    (44/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.439575157 seconds)
    (45/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.48053766 seconds)
    (46/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.628749827 seconds)
    (47/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.99271066 seconds)
    (48/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.500212607 seconds)
    (49/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.682731821 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.571802397 seconds)
    (51/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.38809636 seconds)
    (52/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.510823129 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.576884788 seconds)
    (54/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.675527945 seconds)
    (55/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.503650581 seconds)
    (56/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.5722701 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.717772591 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.574309315 seconds)
    (59/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.443040275 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.399574381 seconds)
    (61/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.383583256 seconds)
    (62/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.387724825 seconds)
    (63/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.395512344 seconds)
    (64/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.498243622 seconds)
    (65/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.545230829 seconds)
    (66/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.500618029 seconds)
    (67/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.470444438 seconds)
    (68/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.413013094 seconds)
    (69/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.419549364 seconds)
    (70/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.543211191 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.441282019 seconds)
    (72/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.49736923 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.694161347 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.509012664 seconds)
    (75/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.398697262 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.593048611 seconds)
    (77/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.518060725 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.586866075 seconds)
    (79/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.484239662 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.389121081 seconds)
    (81/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.414653703 seconds)
    (82/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.388101708 seconds)
    (83/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.437586136 seconds)
    (84/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.44959375 seconds)
    (85/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.641674109 seconds)
    (86/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.592972983 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.548190647 seconds)
    (88/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.444978403 seconds)
    (89/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.456480584 seconds)
    (90/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.515763588 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.417931833 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.981989526 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.522000928 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.445335242 seconds)
    (95/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.389867456 seconds)
    (96/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.51633893 seconds)
    (97/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.534724041 seconds)
    (98/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391322954 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.522809907 seconds)
    (100/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.569684236 seconds)
    (101/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.936676067 seconds)
    (102/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.56246018 seconds)
    (103/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.590032889 seconds)
    (104/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.493464726 seconds)
    (105/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.740200233 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.543718328 seconds)
    (107/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.592032564 seconds)
    (108/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.38992756 seconds)
    (109/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.746184964 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.39254925 seconds)
    (111/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.588784508 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.456759897 seconds)
    (113/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.394538578 seconds)
    (114/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.574014275 seconds)
    (115/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.394852192 seconds)
    (116/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.413178429 seconds)
    (117/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.854420411 seconds)
    (118/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.702837762 seconds)
    (119/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.502101306 seconds)
    (120/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.497472192 seconds)
    (121/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.637738652 seconds)
    (122/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.693665145 seconds)
    (123/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.397092548 seconds)
    (124/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.456090291 seconds)
    (125/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.557679071 seconds)
    (126/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.450745177 seconds)
    (127/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.398787818 seconds)
    (128/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.553277885 seconds)
    (129/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.505869353 seconds)
    (130/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.506802651 seconds)
    (131/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.632403826 seconds)
    (132/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.524256468 seconds)
    (133/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.39381554 seconds)
    (134/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.652708925 seconds)
    (135/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.400221252 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.514036155 seconds)
    (137/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.692961822 seconds)
    (138/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.715254883 seconds)
    (139/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.525077546 seconds)
    (140/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.551897584 seconds)
    (141/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.396917628 seconds)
    (142/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.584877474 seconds)
    (143/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.410199941 seconds)
    (144/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.806394775 seconds)
    (145/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.633900699 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.461245387 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.555161013 seconds)
    (148/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.875763654 seconds)
    (149/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.421246809 seconds)
    (150/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.582575059 seconds)
    (151/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.555990172 seconds)
    (152/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.401354632 seconds)
    (153/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.695888106 seconds)
    (154/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.544085534 seconds)
    (155/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.425936076 seconds)
    (156/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.510280023 seconds)
    (157/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.715814538 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.041265707 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.494970732 seconds)
    (160/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.447790964 seconds)
    (161/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.657812602 seconds)
    (162/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.418171865 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.496656547 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.727670471 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.524596387 seconds)
    (166/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.491175144 seconds)
    (167/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.695941178 seconds)
    (168/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.455600902 seconds)
    (169/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.396220228 seconds)
    (170/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.553911529 seconds)
    (171/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.42342359 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.531018706 seconds)
    (173/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.809698424 seconds)
    (174/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.452350712 seconds)
    (175/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.862272725 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.057730469 seconds)
    (177/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.749434395 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.616039082 seconds)
    (179/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.739367164 seconds)
    (180/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.978997965 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.612938734 seconds)
    (182/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.756119103 seconds)
    (183/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.459501527 seconds)
    (184/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464316353 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.057911396 seconds)
    (186/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.825977067 seconds)
    (187/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.231481373 seconds)
    (188/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.557294157 seconds)
    (189/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.496575353 seconds)
    (190/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.399657366 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.601678311 seconds)
    (192/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.398614719 seconds)
  done (took 349.321782602 seconds)
done (took 350.60432279 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456042675 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.526879037 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.432530922 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.436938224 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.437562847 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.430332301 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.452517697 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.436461889 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.450385236 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.447560685 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.425121415 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.437501678 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.447166323 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.446106675 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.469270981 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.43381886 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.432031136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.441990665 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.447317467 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.448570667 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.436954685 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.437642623 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.460280737 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.434974631 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.444187894 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.445451569 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.440610557 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.431529527 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.436886017 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.449831831 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.440494978 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.436419542 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.450813923 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.446370659 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436927673 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.445363335 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438251285 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.533804783 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.453144268 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.446974177 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.44385045 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.450829968 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.441270407 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.439461149 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.4474988 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.462170246 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.444500229 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.454698256 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.44398242 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.43856697 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.453616602 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.451646685 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.443733717 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440048387 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433558986 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.446400447 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.446052331 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454845473 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.443111039 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.443336229 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.470146621 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456994169 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.451155773 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.448184019 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.443055136 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.45323151 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.446357685 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.451279193 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.444530622 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441290228 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.441727752 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.444309396 seconds)
done (took 113.498517928 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.561026022 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.434352749 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.592595772 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.448605036 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.611331701 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.556866374 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.444565779 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.449358545 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.444320864 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.237187105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.443045195 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.44541922 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437504705 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.44455485 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.55808092 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.446707714 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.446616432 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.138018086 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.446379022 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.568815636 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.437425765 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.448776027 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.447858299 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.244543397 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438286578 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.432483661 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.576048653 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.448071765 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.144915962 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.43249762 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.434720538 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.143247274 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.573815097 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.468201346 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.459142039 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.45693106 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.610265028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.452467545 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.562746022 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.564649803 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.595742008 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.485596099 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.431196911 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.440908046 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.452820302 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.452419591 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.446143155 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.477227399 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.435540788 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.44878647 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.142719476 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.458128586 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.450572906 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.448450054 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.447571584 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.481300691 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.449394935 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.453998025 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.579335378 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.450516921 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.562646315 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.245136558 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.2387113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.448980132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.433379975 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.450279368 seconds)
  done (took 115.638401947 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.510472134 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.516731037 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.568100602 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.437141282 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.488907986 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567473942 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.438313901 seconds)
  done (took 11.828832449 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.447984648 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.449667317 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.489773959 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.488005856 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.451826743 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.614611136 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451216637 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.453046483 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.4541161 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.493925248 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.452732794 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.454245328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.45989893 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.440014008 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.491021352 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.453670396 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.554604429 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.441812003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.450345986 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.595043874 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.448571388 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.457727363 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.494421335 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.453048049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.455404234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.448658003 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.202436886 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451506501 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.450412027 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.45332581 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452521591 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.509046438 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.453780297 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.446126903 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.449770093 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558746627 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.451311942 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453853893 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.457045951 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.445893102 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.45414287 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.452916394 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.455490528 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.456434446 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.453563686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.467558645 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.455661501 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.45200166 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.452376748 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.45424626 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.493944254 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.450901857 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.450839271 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.453099563 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.498683041 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.463094222 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.456560408 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.45010059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.457956655 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452486792 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.596968412 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.492987631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.453940999 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.490455254 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454595416 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.452587197 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.454656544 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.454639411 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.531663246 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.454774056 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.494878296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.453987137 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.628447271 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.472446267 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.451803929 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.44610199 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.447775173 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.453535411 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.441405726 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.451241566 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.454512494 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.445977491 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.453525013 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454315594 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.452618477 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.605135225 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.551309205 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.452976004 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.460069238 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.448324086 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.454138022 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.497351481 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.457110367 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.454423718 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.495009405 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.561420665 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.500328607 seconds)
  done (took 148.848079794 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.460596371 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.460432259 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.451476314 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.478578642 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.447630909 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.446934392 seconds)
  done (took 10.051143244 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.449756964 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.458902336 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.457555073 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.457184595 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.459672841 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.456218278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.455035581 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.448272295 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.464554743 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.459600633 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.459124806 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.461426933 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.459615073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458499488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.455607975 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.457406251 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.454872508 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.454626573 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.456904069 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.458363893 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.442476475 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.456302203 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.456351004 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.445719338 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.461280931 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.459286732 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.472300232 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.457647671 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.457270384 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.456244781 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.461699996 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.459192047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.451175253 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.456173544 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.46269181 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.450772605 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460593518 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.463115439 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.46043731 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.459200254 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.4582469 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.459066394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.458874567 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.458855011 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.450625402 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.456939188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.462663094 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.473414981 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.456898449 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.457638299 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.461156544 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.45666063 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.462184526 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.462037962 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.453647211 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.454506186 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.4664992 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.462387158 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.46008541 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.45192339 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.462329625 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.460591922 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.450950995 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.463103214 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.458596724 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.463260787 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.453328576 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.465614419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459536828 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.459518097 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.460653781 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.462248397 seconds)
  done (took 107.307487197 seconds)
done (took 394.974474128 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.999255898 seconds)
  done (took 4.310382061 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.720125083 seconds)
  done (took 4.035448504 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.968338037 seconds)
  done (took 26.294776521 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.459093356 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.448850215 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.446267647 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.448256102 seconds)
  done (took 11.112520983 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.07576283 seconds)
  done (took 4.387726255 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.458856943 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.455906786 seconds)
  done (took 6.230297583 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.781569541 seconds)
  done (took 4.095712369 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.374545372 seconds)
  done (took 4.699268964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.460311165 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.461133669 seconds)
  done (took 6.244765137 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.431370157 seconds)
  done (took 3.745528371 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.467440789 seconds)
  done (took 23.78071149 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.462507927 seconds)
  done (took 3.779368289 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.501294857 seconds)
  done (took 3.813839437 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.664551477 seconds)
  done (took 6.97778556 seconds)
done (took 114.822298108 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.446948036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.443589071 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.449741813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.44680607 seconds)
  done (took 11.101700809 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.529939203 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.5282297 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.535552851 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.520337877 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.519538211 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.530647696 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.487945082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.494117107 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.517499832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.516194353 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.530744554 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.520507447 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.531120826 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.487267018 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.51407875 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.536474857 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.519698505 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.536535755 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.492499514 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.521454211 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.465501233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.522205893 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.514942888 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.465587245 seconds)
  done (took 37.655730852 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.972101772 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.523902551 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.607454717 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.506461955 seconds)
  done (took 7.925949296 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.586171674 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.569142874 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.587376843 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.63575702 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.66950453 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.588591859 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.487713785 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.48813127 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.472530309 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.569508598 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.655083414 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.5700705 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.784199762 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.464266649 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.783355928 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.467134918 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.464552575 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.569695471 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.618847452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.649087979 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.465955326 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.567534512 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.576116739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.569915557 seconds)
  done (took 39.17498561 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.474052985 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.481268213 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.465305315 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.481025991 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.46589404 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.467416497 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.469561938 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.473268992 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.466807599 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.465745123 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.467459418 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.483066446 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.468472699 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.465486881 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.474456239 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.467208023 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.468656636 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.473115701 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.475251317 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.467466384 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.466822259 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.474400497 seconds)
  done (took 33.679516538 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.450925022 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.454439531 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.802510022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.703994114 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.454377158 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.448687617 seconds)
  done (took 14.633648415 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.545216894 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.713139738 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.462735249 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.908672954 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.985852159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.462909986 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.461154538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.761773315 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.149247312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.12643617 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.529849554 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.546172413 seconds)
  done (took 21.973825397 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54713576 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46788939 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467239477 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486024911 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461447326 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46309608 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.507983677 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997891162 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.465824288 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743626198 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.462877191 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551500551 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.71126488 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469284236 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.469311628 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.437927849 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694756018 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066587137 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470600743 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46875017 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498785053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.483465432 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.467718535 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.723464896 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.469661689 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.465298221 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.759180138 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468900219 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813033436 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788613546 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788043038 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470573725 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.743137326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962831875 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570180471 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720456461 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479533923 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.468500386 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.450688439 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.467426837 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.468956268 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.469961618 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781080804 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471440567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.468305079 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470628661 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007123456 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.473569074 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.470144112 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468740107 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.787478811 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553158208 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.474730675 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466402939 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563477444 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464430938 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.472814712 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590634069 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104557635 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482348656 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473404842 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.468894179 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.486947521 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484930114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.219948369 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.475491547 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.471894205 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.475697013 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465671753 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464074739 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.490578754 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469769479 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.482962504 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467156285 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430995443 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475766538 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.471506665 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129211316 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486254356 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.468559852 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695407609 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469819465 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467386525 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.469598999 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.466082528 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.350327257 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473698446 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.435365412 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501026541 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000479485 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72497125 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491049211 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.499365823 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694993559 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.436638529 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470649415 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.473431298 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494650345 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485883632 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008079278 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469664399 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.471173757 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.721713045 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.682413716 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469154401 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.445374879 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011118051 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489019437 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.500457122 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.471088114 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.732738116 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.195998553 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796321366 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489447834 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509860345 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471314948 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.421532519 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483732566 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.478697867 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474144613 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.800646355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.443658996 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473326805 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546280282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474503614 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.472997207 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474777192 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4768432 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.474494127 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.704826124 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477296017 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.81397889 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.474829756 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473383512 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.473051755 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481812036 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.478600627 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.692043054 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490267726 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749045326 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473200089 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474701721 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468448991 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.69007964 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.490645096 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.482991963 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.815709314 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488452879 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492612837 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798878883 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510974653 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588247102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505792039 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.493615318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.724538373 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.479029145 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.483397137 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.478904969 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.479673486 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479069505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.484695005 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.483158909 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201886259 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46387833 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.478836195 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476663348 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.488859892 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.549584889 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.483959785 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.734462172 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.487738401 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493912988 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.482149718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.479483196 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70057726 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793861581 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.483645827 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650949666 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.017573802 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189561207 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.496210331 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.479040444 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.476726256 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.479982251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474533461 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478211927 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.482177475 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.734425593 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81046222 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.473679535 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.206751753 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48365561 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480905375 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.48941344 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802180524 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.489213877 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480261251 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.495241056 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493152273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.499581209 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.80301443 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.700981937 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.496719529 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.475323846 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.997048688 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.486748238 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480856313 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.482046522 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50444052 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.481916527 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095200647 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817976449 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470425573 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81014626 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485733819 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.498001548 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.479030403 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47879124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496711562 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.497407601 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492773012 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.739844147 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488942505 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486434063 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113211667 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467236883 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144962068 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485956633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.48754037 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.484134389 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.022390827 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478532492 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482892987 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.766364283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026200165 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478102773 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0152221 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.478477445 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.35218107 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808135556 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.712949052 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482448775 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.518407423 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808116159 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.69640329 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508621005 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495445704 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482165966 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.444241253 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097049553 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479650206 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667681283 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026893411 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494552981 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487395386 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.49122335 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.49326496 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96452326 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.477436208 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484134365 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478258785 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.50734984 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.102203398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490523246 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485534861 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232688554 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490480242 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.03417274 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482164823 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.742560778 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.812046383 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.782008046 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.489255382 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.495582397 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.731364328 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81005917 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491512135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.485363282 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150875084 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.344659302 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.490544483 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485528086 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4358359 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497049675 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835738603 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.501649218 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.487368136 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498526469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488301987 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489957884 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.483825562 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493142852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470826187 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090165934 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.494789845 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491767837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503589427 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488774965 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.732929262 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.503431487 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.207148083 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715858268 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480460266 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525240762 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.494030954 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497241843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.45795012 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488009076 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488115156 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482901684 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.705691578 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487697436 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.469971646 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.532709498 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.695215583 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.488543791 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.496509638 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762892079 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.490497938 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.511672345 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481392314 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.524610624 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495777671 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490381328 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.500426627 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525023382 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565424038 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.74941194 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.818038155 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.816508337 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982268342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49477649 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490265143 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.505554978 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.569489307 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502256464 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.49305456 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.490518003 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212047222 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474061862 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22503022 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817605683 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49588584 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49013019 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487773237 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726600458 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491322762 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769362017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493471857 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.478620086 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514951964 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501766263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506561122 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70119322 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767666981 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.490969242 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500007447 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493520133 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.492475396 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827057322 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.709626277 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102597193 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165473809 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496111295 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509832659 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.041260108 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.765825676 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492716574 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492167784 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492995634 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.493552992 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.502692664 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.495041379 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50694321 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718799391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819005143 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002481188 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.811938973 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.520767408 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.372891782 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492040491 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.743712852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330987666 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.751567764 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22897578 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364689061 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74894882 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565660883 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.754695706 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.495294798 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727360616 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.502752482 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497375051 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494318315 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491051871 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.490061643 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.816731938 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24335161 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.750003133 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.497683959 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.499756879 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52423498 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.756466043 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.718747184 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.395492586 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710977392 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.825992488 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.504960343 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493150844 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230412367 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827636734 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498870925 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.493950028 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765975992 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498870362 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527999817 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.3664381 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.495533919 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176570435 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.710069628 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514979777 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492811645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.392027021 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246581642 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.502331913 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109584728 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.50062088 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506191387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775276297 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.502588122 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.49518011 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.786463876 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.499676272 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.49607576 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780421593 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.227775103 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.391704888 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.504388102 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512584458 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.498458076 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497340558 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542654505 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491921526 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503247082 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.968189231 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.491988732 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498860043 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504542168 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.496016937 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500249259 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.519421127 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497503925 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.498115049 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.472511775 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.467267298 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504053355 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644765669 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119086196 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495387195 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.111315464 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.83691938 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.750248768 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49771969 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.492643158 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.503382122 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500349028 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500210103 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495437485 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.487965608 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177616552 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.504585677 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.850948305 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513254725 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.712944244 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709681035 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498230339 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768296325 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.521418683 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520900631 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.465128476 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49796909 seconds)
  done (took 1039.928952274 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.54656196 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.516906696 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.535476957 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.547242615 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.499505083 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.515186866 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.565818746 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.511013114 seconds)
  done (took 21.585499179 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.488704005 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.499201785 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.502722359 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.499843134 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.498231356 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.042585908 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.508130629 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.496369335 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.524079324 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.512052456 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.504522613 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.202203049 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.502226136 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.514754973 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.497481545 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.497338203 seconds)
  done (took 34.655047887 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.732222498 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.719122899 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.308730683 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.508930955 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.512742747 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.494586275 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.929265755 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.508021256 seconds)
  done (took 29.066570469 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.508060349 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.508646984 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.508541904 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.507027638 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.50661185 seconds)
  done (took 8.889851075 seconds)
done (took 1301.588161554 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.506362093 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.510222378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.509401113 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.511247885 seconds)
  done (took 7.387438885 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.470833581 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.46690398 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.467475006 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.478956451 seconds)
  done (took 10.237709441 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.936686087 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149096391 seconds)
  done (took 5.439411386 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.503549217 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.26862959 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.255889853 seconds)
  done (took 8.380744292 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.814822122 seconds)
  done (took 3.168373919 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.944355775 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.033695293 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.496030999 seconds)
  done (took 7.828880766 seconds)
done (took 43.798264373 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.494910466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.261948755 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.656074153 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.510335766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.659385647 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.656582256 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.746282632 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.498573054 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.499722932 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.494884978 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.507383644 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.660418106 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.729801239 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.266104722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.722987745 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.264708373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.715580991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.502150003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.492444816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.509797895 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.708876319 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.509837174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.508313133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.509511676 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.666171162 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.651743026 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.512941669 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.252759653 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.506075844 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.509241538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.649998841 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.514088169 seconds)
  done (took 86.702967044 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.495844272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.492701481 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.512675878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.492360254 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490458128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.501219249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.51094328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.494474869 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.491057092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.493035489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.493261746 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.492071455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.492811802 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.492196618 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.497121843 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.492515398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.514961982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.492407537 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.494157542 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.492238455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.495624205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.505271002 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.49497981 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529120438 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.50308559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.493598084 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.496011074 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.51150425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.495171352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.492331429 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.496582628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.496097012 seconds)
  done (took 81.294578802 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.500042008 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.51435521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.497128303 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.502141691 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.511565588 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.49829402 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.493971514 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.506725934 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.506035465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.501872832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.4926738 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.495276201 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.496751782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.497959776 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.495050359 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.496937696 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.495036935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.501123002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.508027392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.500950272 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.495923919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.497838506 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.496943017 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.524888271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.507249178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.498515353 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.512620236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.496469237 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.500471923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.495016649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505279405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.505011952 seconds)
  done (took 81.404568879 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.742322833 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.515440004 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.519492859 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.511877512 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.519279673 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.519467226 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.514065711 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.795564181 seconds)
  done (took 15.996511425 seconds)
done (took 266.753710555 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.515403856 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.507484439 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.532523393 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.518166793 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.52301725 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.53993288 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.751013616 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.535057611 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.743179177 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.507951298 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.523065439 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.529539179 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.520040377 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.664553022 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.507434818 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.508345104 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.512779891 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.519841097 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.512822361 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.788515611 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.539652829 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.505523611 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.511113538 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.519899863 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.475764991 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.586337075 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.590939357 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.693823787 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.652215174 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.588903047 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.507920605 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.536338121 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.509438531 seconds)
  done (took 70.839442964 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.510163391 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.518650932 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.521206584 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.520641813 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.520258047 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.519794565 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.511856288 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.522175115 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.518298948 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.519684901 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.522191667 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.521915757 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.523022152 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.520622519 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.5228785 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.493118419 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.512956728 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.522031194 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.510193747 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.493808748 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.52316841 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.520341066 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.521152041 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.520295225 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.521182492 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.519260054 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.520445124 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.523206099 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.52010277 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521462025 seconds)
  done (took 46.899749437 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.523511798 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.509360992 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.524965083 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.520849897 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.514380883 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.51548443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.896805278 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.526553856 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.516479821 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.519627307 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.506074526 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.526110802 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.571900925 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.532412027 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.512141217 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.526397605 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.524253472 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.516220007 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.512239243 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.533602731 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.9049253 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.527579516 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.880503121 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.524330342 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.519642692 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.517801453 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.524385491 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.510553673 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.513945643 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.510220594 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.539844498 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.87604182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.505524829 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.50689342 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.51962532 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.529355163 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.526988018 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.511740506 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.520488882 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.519896284 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.896112928 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.518332091 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.514418601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.507174036 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.519033308 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.528305317 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.510658676 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.50712218 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.833160775 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.523325468 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.526773008 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.520693948 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.530533924 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.520859909 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.828220148 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.51521941 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.521409105 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.510794344 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.520603271 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.894790112 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.529419612 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.520920255 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.517110398 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.514057166 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.521882042 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.517118107 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.533036816 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.521795397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.512346007 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.540476307 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.511420115 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.518371374 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.529661468 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.514114388 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.516812374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.511369236 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.516709099 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.515766853 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.526517665 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.885958952 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.525552721 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.514863956 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.920532574 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.525408874 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.532722486 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.531633297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.530166272 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.594113182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.890763338 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.495302976 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.530676103 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.52119021 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.896144388 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.531926362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.522467616 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.52697388 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.527583391 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.53138345 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.511915377 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.510699775 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.51840305 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.537412253 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.516391704 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.518605095 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.900874632 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.529910995 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.534505413 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.517221942 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.642767668 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.53269992 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.535132384 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.526662133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.911466253 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.526249986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.532810752 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.513952763 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.51730652 seconds)
  done (took 222.695396414 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.523542174 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.514083676 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.522330903 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.511429094 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.515686214 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.528274498 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.516244105 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.520229626 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.522459988 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.519494585 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.516317661 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.528291388 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.526362376 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.520006119 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.529584421 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.52097709 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.517257406 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.517509454 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.515573603 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.515719756 seconds)
  done (took 47.772311195 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.532942364 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.220058506 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.192429812 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.529945949 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.532178571 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.524761333 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.596320993 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.529209544 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.532678348 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.897498478 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.745339371 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.535635941 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.534372673 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.533434764 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.201709309 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.502179117 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.906970231 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.217022321 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.530703939 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.225520859 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.500002109 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.533230683 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.522589052 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.27008452 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935700806 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.899948613 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.604785456 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.265220285 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.536513957 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.536195583 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.258755352 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.534899001 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.525875974 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.242209998 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.534723714 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.548586954 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.537282665 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.600880234 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.599279933 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.920423624 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.269411652 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.907803588 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.548216915 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.703607944 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.531056118 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.50585899 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.280366114 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.539782462 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.506200709 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.534963586 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.539824741 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.231004624 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.529322121 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.234341649 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.537968411 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.536230006 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.22839653 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.237035378 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.201779344 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.742874563 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.529750692 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.892558719 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.530182567 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.239979663 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.5335839 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.537365661 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.536647054 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.750738805 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.231933921 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.9026768 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.909340009 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.904190778 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.534454624 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.613434394 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.540814662 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.93008358 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.613047003 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.959353104 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.931333343 seconds)
  done (took 141.266960952 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.853686987 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.655133489 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.996902904 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.175440938 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.107537691 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.678789383 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.655784952 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.804990995 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545899579 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.637153998 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.340931334 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.637267404 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.366778999 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.612917422 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.650604817 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.675991501 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.019635671 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.53992031 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.261043567 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.297982707 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.531159187 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.665491775 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.345837909 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.95998523 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.527471183 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.354799762 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.534046509 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.125009048 seconds)
  done (took 58.935573626 seconds)
done (took 589.771304999 seconds)
SAVING RESULT...
DONE!
