cset: moving following pidspec: 13477
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384418485 seconds)
loading group "string"... done (took 0.502751591 seconds)
loading group "linalg"... done (took 8.570167947 seconds)
loading group "parallel"... done (took 0.17137733 seconds)
loading group "find"... done (took 1.289034928 seconds)
loading group "tuple"... done (took 2.031417078 seconds)
loading group "dates"... done (took 1.321972338 seconds)
loading group "micro"... done (took 0.209087819 seconds)
loading group "io"... done (took 0.573195376 seconds)
loading group "scalar"... done (took 40.844025219 seconds)
loading group "sparse"... done (took 12.944485972 seconds)
loading group "broadcast"... done (took 1.032676302 seconds)
loading group "union"... done (took 14.083007971 seconds)
loading group "simd"... done (took 4.87864371 seconds)
loading group "random"... done (took 9.731238005 seconds)
loading group "problem"... done (took 2.077166919 seconds)
loading group "array"... done (took 23.361682516 seconds)
loading group "misc"... done (took 1.06845129 seconds)
loading group "sort"... done (took 3.54078738 seconds)
loading group "collection"... done (took 20.952919345 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.579094466 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132203343 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.145147 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.173929378 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206151638 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13764481 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153815334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459788142 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029263352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227875467 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123325952 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.529273314 seconds)
done (took 5.650954693 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.222754878 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072601167 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125981088 seconds)
  done (took 0.899339633 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.07339158 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17169004 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091889272 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107241164 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.108445857 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.106970303 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.091898523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107931998 seconds)
  done (took 1.489295142 seconds)
done (took 3.393303016 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.768266796 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.829506646 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.493906006 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.124127919 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.155154178 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.126972523 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313277997 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.15610318 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.103728073 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112340332 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17480312 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.355723915 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.423078708 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.933632236 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092493554 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.130196234 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.078000168 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695183654 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078556678 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130270108 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.498054459 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108453983 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114471501 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123837255 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.204659252 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128852046 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.178693202 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101132668 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.691394871 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.099233929 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.181119385 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.094462518 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159706403 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.225963095 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.076222802 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.105557258 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680524268 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.187582347 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108749931 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.091980828 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681501725 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076916492 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.190119952 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10548554 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.110612587 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184874341 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.11573378 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.074471463 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.097634311 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085111316 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170721176 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.499652943 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104006429 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.140469506 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.107414538 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.685698631 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.092782314 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155609526 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122219196 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.106915404 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094726482 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113782797 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157230747 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120340521 seconds)
  done (took 19.575606866 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11437753 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136662857 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091577916 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136697722 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135648667 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.093343116 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081251354 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091390144 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107106781 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179569626 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132931863 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141295874 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.088342733 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077582501 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114257237 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246360048 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101466633 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116570339 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078908821 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104112945 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136146833 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093602771 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106247071 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091322896 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166885742 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.215212794 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106609954 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.120203928 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090947235 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096128217 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139397285 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157027398 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073017497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091481281 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175773569 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11768912 seconds)
  done (took 5.065065496 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194943131 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.116762016 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188483536 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.171831165 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144483434 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.161500133 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114561338 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258423606 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.242989481 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158385388 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159593014 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125933678 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113048239 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076738754 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.093648418 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075824419 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749609603 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.184437525 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.144856685 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.120961803 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102246689 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.079369427 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369659369 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097190852 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078396024 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099089538 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068660674 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167518098 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099465073 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.224881715 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.097842739 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105002363 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127750696 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19075422 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123994315 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.115709845 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100369 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077133858 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.212954781 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086436056 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.093024784 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.099634642 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098127616 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128060551 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114723505 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097986419 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104200462 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225130208 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096174043 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112703041 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.024624655 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.197218281 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09246482 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.093996042 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.33327148 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113096496 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081212645 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095960608 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.283137369 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131500058 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07704128 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074712703 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100461561 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076284042 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.428383248 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085258457 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.189647002 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.094923682 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.152809667 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096517581 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084510175 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099133202 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098406639 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09932001 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092804416 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079251889 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076167753 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093641412 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080238338 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113897768 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.098069334 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076383859 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160446438 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.117740432 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079843723 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113080195 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122763473 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081842377 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092544796 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110073778 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095033978 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079708715 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136454609 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101546288 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.1122852 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080453213 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.140730184 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.09368894 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.169805785 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094119089 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078148182 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12190035 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097655458 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124301147 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098724322 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094696204 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079985501 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092680127 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076254246 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159939158 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076897427 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075701292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097582419 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107009119 seconds)
  done (took 23.510883619 seconds)
done (took 48.855861833 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418332225 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107436819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107738132 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107415377 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106276683 seconds)
  done (took 1.626224176 seconds)
done (took 2.379602847 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.318518568 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.193909205 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084414816 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187939954 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084537642 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19353646 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160737967 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096599546 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204699226 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.07970292 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183936845 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080065416 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.101921351 seconds)
  done (took 2.750304731 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089642307 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113874727 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079062565 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10461177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072717307 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087068214 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105171204 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124782984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087311642 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081071923 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089320844 seconds)
  done (took 1.783835339 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089357288 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111333834 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077651648 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086796501 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089906111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087832056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104628739 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096378012 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105007445 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084930899 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090167498 seconds)
  done (took 1.775438404 seconds)
done (took 7.053174384 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.124674888 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.714810929 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.098318956 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.18713507 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.324599293 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212667255 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.620686711 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111697382 seconds)
  done (took 16.321361854 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.106977419 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093382395 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076218416 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111457748 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.079529176 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09440421 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077155615 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.094527225 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078327459 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091889723 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077396238 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095386174 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.079105155 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.09376761 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075933308 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.096335684 seconds)
  done (took 2.235963717 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112931006 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110709436 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099483341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085906677 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097428478 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097969283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.083154486 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098849195 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07947807 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096964822 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085339081 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100940905 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083717757 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094427386 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099163423 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085854903 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095628547 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083469021 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.100086746 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083485504 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102348004 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097187379 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08425195 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101654463 seconds)
  done (took 3.116699064 seconds)
done (took 22.426664874 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162171855 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080765428 seconds)
  done (took 0.998340272 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098527057 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115312404 seconds)
  done (took 0.975974901 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.103357488 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093353628 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132816446 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1118475 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07818452 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077395222 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127197553 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094575625 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077489608 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094415252 seconds)
  done (took 1.754363711 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081287516 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098172159 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.086441353 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.114897879 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106148938 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079876339 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100263276 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.081626905 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100356895 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076205917 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10239442 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.097909861 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.101114868 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115364637 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.082375551 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099677093 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105109908 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082394969 seconds)
  done (took 2.473888796 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077022937 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.079330698 seconds)
  done (took 0.922802135 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079602062 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092090371 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080199672 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096524463 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.076622314 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09222523 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075680147 seconds)
  done (took 1.358957468 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.470165216 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178805178 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.320730955 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111569541 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129070593 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.339530516 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149917991 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.091552379 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.109073906 seconds)
  done (took 2.706241409 seconds)
done (took 11.951058523 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.088021772 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.129693827 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.596058585 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112045776 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.074936863 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155168767 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257354979 seconds)
done (took 2.182759536 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334381871 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119575912 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085454507 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074920623 seconds)
  done (took 1.378164277 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075142818 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081862189 seconds)
  done (took 0.928192775 seconds)
done (took 3.077292557 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075183854 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07648181 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090367484 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.074381582 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089462425 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.072181524 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.123246062 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07476472 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.092947269 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.074684477 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.093097705 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073995329 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072388843 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090017243 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.074321787 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091695613 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.074483558 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089340524 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071310747 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.072505301 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089319658 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074931573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089061079 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072611952 seconds)
  done (took 2.779801847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100837246 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093896323 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081205352 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098379049 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079550167 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098822489 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098113765 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.075612654 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.098856861 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07776701 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095493892 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08011455 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09389274 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079885887 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094873938 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.080231184 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.097636944 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075899179 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094650596 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079431802 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.096768094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076024724 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.096472576 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098391277 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079937616 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096142296 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.077871044 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093702399 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08121605 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096196902 seconds)
  done (took 3.44396749 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080942816 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073101294 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089882139 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084883802 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089808624 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.077389776 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.089966781 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075989929 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094734466 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073019389 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.096040725 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.072620951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.075275852 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094370013 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077765974 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098177599 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.090567765 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093163234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075734909 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095536831 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077679666 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09340612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.075765271 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073046457 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089738237 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.072236831 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090414847 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.0725862 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09084369 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073021092 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.07802618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.096851057 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.072532777 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.102498755 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.079395663 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089234534 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081193724 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090216771 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077701347 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089923934 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.072441661 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072539525 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093258783 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.084852701 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.093423304 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.074824494 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093658228 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.077416484 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.09441737 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080400074 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08963813 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.075082439 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.078158644 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095107438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079751027 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.089185007 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073379548 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.089589305 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07704338 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089576064 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.072800068 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072591263 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097552918 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073820348 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113758397 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.100727526 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075280204 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078702524 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.093954082 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080473566 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095203262 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091386576 seconds)
  done (took 6.862967899 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.07717099 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10144627 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075704889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09255612 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071156068 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073807659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097965439 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072889806 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092778236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090795844 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09137451 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074861305 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092059131 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077259867 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091458166 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074888133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101144169 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071673329 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.091031401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076962834 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090985819 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079918499 seconds)
  done (took 2.640750051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.219311936 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101674958 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137144053 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110316375 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094211312 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109821033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080788498 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099344809 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098462426 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083478406 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102233985 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080564813 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111867481 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101456307 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083603047 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.102306642 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079921538 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101471023 seconds)
  done (took 2.679534943 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089106857 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093943641 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100205494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094152956 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076287381 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097521933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082825268 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109296337 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078268231 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093654244 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105040787 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078462178 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.095592854 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076472371 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095729482 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075775953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.096169136 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07632844 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104582141 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082853112 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100297282 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.086627047 seconds)
  done (took 2.771424515 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092296631 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095742826 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09755411 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097864599 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075261051 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.09578654 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.084240699 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09346969 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.08938191 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.096345883 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076699432 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095260962 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083770707 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094382286 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.100649208 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076815944 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096006958 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076257516 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078450883 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09278018 seconds)
  done (took 2.573854964 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119017166 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108626705 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090350728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119761224 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108527573 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093610437 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12008049 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090694114 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108330003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122136206 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090955035 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108976022 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102586323 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115628731 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107758629 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102257175 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119667399 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119165688 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090753906 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107989717 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122653958 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090443174 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119805382 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090554737 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107817171 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.091216329 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108476327 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116317281 seconds)
  done (took 3.780452364 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075796446 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076453153 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091654672 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073005336 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091306148 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073255248 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.072699782 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.091666655 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075525975 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090799362 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075865281 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09301932 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076344194 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.075230977 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093015153 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.075677744 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09341862 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073713548 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090906545 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073609379 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.074820168 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093941144 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075590623 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090759347 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07376635 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09335797 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073672797 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073100822 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093309664 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073584866 seconds)
  done (took 3.235674717 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085128929 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104549472 seconds)
  done (took 0.97973123 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074335186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11093629 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073952595 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097720839 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.082569342 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094818793 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.08653053 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099685078 seconds)
  done (took 1.508434378 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.100978913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114280617 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083614353 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10718963 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095343348 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114096106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157940978 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.083439684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.102567468 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.077771351 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113650388 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07737398 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103194284 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08231319 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104083771 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09146678 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095817363 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086792915 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.10278989 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.079180531 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100566642 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110722385 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08818229 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102741825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079828503 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107279077 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.091306268 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107250753 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081940435 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10666308 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08436269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.087983158 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081246603 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.10000912 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.077888945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.1129632 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11254152 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08286539 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.103950542 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082648129 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104019174 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075920786 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105744266 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084640269 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108368445 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082513692 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101859484 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076640508 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09623284 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081128797 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.092899977 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081128261 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070729057 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10483685 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105112052 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095873361 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097929438 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.081830663 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.09945295 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080518187 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.102044748 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.081301302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105889496 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.080589602 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105476318 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086922078 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103992624 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076107921 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.088966254 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078882898 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.104538594 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10117131 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.107086651 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.10090517 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083730446 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09622302 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083261617 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101819044 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085188272 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107197803 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082528168 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102979408 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087684267 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099077958 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081065655 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.102310304 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079261275 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097690917 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078436218 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115484996 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.079702964 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095945561 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.078306933 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10694034 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.081142725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099189407 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078331077 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105516537 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.071771508 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100651156 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083394311 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102074824 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089603741 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101370603 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.0830419 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104337899 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088971205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100209056 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081029298 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.091896614 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083777699 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097284389 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086621382 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089213635 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08274762 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099646845 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082786716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105895668 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.079391395 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099762666 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088032262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106878813 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.07955171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091032762 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.081311229 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100612661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087039365 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107492346 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.079215885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094515941 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.075475528 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.104052284 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.082420967 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102204353 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082741641 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.101061554 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072622006 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096677245 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.082908894 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107018326 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08159769 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103071201 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105698882 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084874416 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09816447 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.08809568 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098786159 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07726043 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104997677 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081994164 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094538354 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087586087 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099897614 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.07964497 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.100103831 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087347326 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099907209 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083414433 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097941596 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.082804029 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101744108 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.077599549 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100885469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079695224 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.108310994 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082341753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.093117905 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.074305962 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101782757 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079082896 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081129823 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096462173 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082140894 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101891181 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.078134362 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09814609 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.081523832 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111123654 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108683391 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084379369 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.103553457 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.089151047 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.09950507 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084893047 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.099257408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083823338 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102622791 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086928836 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103012747 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083077914 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099392208 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07406628 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.102314176 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087399738 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.095923832 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.078897114 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.077592378 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.100909096 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108169256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.081708933 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101341713 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080565228 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102879312 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088129814 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.100941082 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082595569 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.096259991 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.082077073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086437881 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102668509 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083637424 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108426094 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102206574 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076622807 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105681772 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079965618 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.10406548 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076332216 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.07806242 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.096873531 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083270638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10251468 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.080679533 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08967333 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087448853 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10630581 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082258126 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.096008075 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.082601861 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110147721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.080194546 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10455608 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081331446 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.103984553 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114515499 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078637898 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.100927448 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089610551 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110296904 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.071492278 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.104272427 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080699308 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.094651313 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081041949 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097142252 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083081784 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102532066 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.083222527 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070654113 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100724979 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079125877 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.096687349 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076387992 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10603952 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082887532 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100398506 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110147893 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084510474 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.101864539 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083834621 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099877205 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083880673 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101831668 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083990558 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101643938 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08103489 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096365649 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083002323 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.096582538 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079096753 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081097392 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101441567 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08328977 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104266882 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.080413676 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106694073 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.101724182 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.083742523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.119535742 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.07986004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.096917705 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084512373 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104219513 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081754906 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100072767 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077141794 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10672629 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082126109 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106946241 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.081535557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093068057 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083060294 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.100457348 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.083729549 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102007248 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.08409451 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.099724796 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.081872875 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101111212 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091571783 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097795135 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089808516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104107058 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104126877 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.082591764 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101571166 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.080837907 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.077821125 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.101346164 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083457108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102378545 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.080596452 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104424897 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.100702334 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.081594187 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079992705 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102695236 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082840202 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102762205 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071934943 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097009147 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.078264893 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101210107 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086513987 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101842923 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.080146455 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099385186 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083775908 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.099128344 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073796455 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10469404 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084925797 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.101956405 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091351785 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.096455368 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.083079715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111922601 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.071787285 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09898898 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.078643764 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097711751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087868731 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102281137 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08833216 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102269229 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077969324 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093844848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084291516 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098679409 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.072552029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097070729 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085721425 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.098497252 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080866472 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101718657 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085810829 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102683567 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0870648 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098912233 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082637753 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101384513 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.075964698 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.097248955 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078527201 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08169945 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103031991 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078205707 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094485291 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081389964 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.100986627 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083350724 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100323223 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080826187 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107035412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081810498 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.101575692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088049318 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.091287433 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08237436 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100365095 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082545002 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097115252 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084285081 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103368869 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08495117 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.106646649 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082342339 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104072828 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082221599 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098359126 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082961006 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101881491 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.084214844 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.098041101 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085652973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108089486 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.079346596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.102234581 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083982757 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.098704519 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085302661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103089218 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.083827203 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104846827 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083441649 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101525396 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086353498 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101989205 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083881109 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103206639 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081126552 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106598745 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078059073 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108737889 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083759678 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103524163 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081137846 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09813474 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081912667 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101317733 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081418125 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107687975 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084247496 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.097496722 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07838421 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09850822 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.082945264 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107706606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089370127 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102140415 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.083973032 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095887993 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.075063239 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103689721 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080221486 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100194852 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085519892 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10709219 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083431854 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.100013858 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080827401 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107298791 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087844633 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10472116 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.07957186 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.104558875 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084916759 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101759599 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081103156 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102601757 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084451252 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104544567 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081777598 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.09812825 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092212037 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10711131 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103840931 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083107989 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104437616 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082259985 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095796065 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084938003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.102209256 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087211045 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.101923577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083562131 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11248141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.078220153 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100354238 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088668578 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100886806 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.088586403 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.09629118 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083811645 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103865989 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084802624 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096059195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.079591174 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098470467 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083311041 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.097820239 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077304993 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112819135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.088154662 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10307961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082234222 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.1002376 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078124527 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.095601507 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.080229984 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10343427 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.083025535 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109859269 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079077058 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.098181492 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077459796 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08292979 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104438613 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.084780334 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095099807 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.077220152 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.098439031 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083770687 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109265598 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080982677 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102204908 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085209671 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102480051 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079461713 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108207173 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075631176 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.104608085 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.093888628 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104040815 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104612267 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086328286 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108928236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0847479 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096305547 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085250043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102860451 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084302034 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103997894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086644418 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11759376 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084129514 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098827256 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082593167 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102969562 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.079588893 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10951409 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084772574 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103578251 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085361462 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100951523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08528889 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109662241 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084869205 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.103585211 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.082851824 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101127556 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082185383 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099967537 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082084271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104626252 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08460256 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102824922 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084927196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.099679534 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093416712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109725913 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084583029 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094740257 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079017503 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098902156 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077872312 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104865262 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076857626 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100811898 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.081721179 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100299816 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087850155 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10556879 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.083876066 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104225529 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083584089 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.091564213 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087150034 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103449226 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086351254 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.094643921 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084428165 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104027938 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088263679 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107755864 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081043386 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102732249 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081811715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1054207 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.078439786 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105802626 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081942616 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100999585 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080204724 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082027306 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104949526 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102861037 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085735377 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103818035 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083994974 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.106292258 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08726 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.0947908 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.076634576 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.105013689 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.080605731 seconds)
  done (took 55.954081583 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143702389 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084389908 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073203166 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095042013 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120794741 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079071081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09432819 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078946398 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098170467 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088500761 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.093801169 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074178555 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115774093 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122465018 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120349805 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088254452 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094298338 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078778934 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093522228 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078351123 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114958486 seconds)
  done (took 2.872070573 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098958228 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111842201 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110285257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096674472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105695454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11229355 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090588056 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112939144 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115875512 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08619848 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115907155 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111664007 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086970402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107737755 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105940333 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089910454 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116526546 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105293815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.09440586 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111256554 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108970029 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.091168379 seconds)
  done (took 3.124641802 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086997751 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081043635 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.107938382 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.075423835 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102550423 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.07663136 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.10667863 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.0788582 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107800144 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083616251 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.099510544 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.084068042 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107029657 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.076551101 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.100576479 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.07855751 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107106267 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082768963 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103580225 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.076530337 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122196915 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.076566647 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097128807 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.080957764 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.111464109 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.084255056 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.102023964 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082988543 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.099018452 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082858468 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098158093 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084927693 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105176426 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.080369416 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.099589275 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083013031 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082348634 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.098187779 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.079469888 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106561673 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.077229296 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103496513 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08975745 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099895783 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.079358028 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105413002 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082614444 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.097039006 seconds)
  done (took 5.258543727 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.113963872 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151066883 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.081150708 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141601991 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117568065 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092106704 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.1037705 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.14065501 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076731687 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.10218358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120750615 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095904706 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103864018 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.108271136 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.086486018 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101902998 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084828897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098005127 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087903164 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101548216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107338273 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.085809539 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117489051 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.113916128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.087632168 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101595177 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.078841112 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108141689 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.113402839 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.088082573 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109943198 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089717379 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11738446 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104004225 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.080844784 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10511237 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.119488477 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083797649 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104530063 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076826532 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104987242 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08907288 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105331276 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119823329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083439329 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.104228659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082407223 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.095753152 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113774408 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.085657787 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112672131 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11700988 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087679173 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103039895 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089015471 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117799321 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.102456447 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081517388 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.1070536 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.092894052 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096755767 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107093612 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.095702185 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104529253 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091236108 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.117246139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10425965 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086261704 seconds)
  done (took 7.886423897 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111367259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10774607 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119500199 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099836403 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108995742 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087330117 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109612203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107717648 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088320738 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115513836 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087717583 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155865646 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.10530684 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113965997 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.088136586 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108329966 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08741379 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108784529 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087622341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108170282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107155335 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.100704962 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108377815 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.118522976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122035555 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08586634 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107975482 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088593741 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120742646 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107896295 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100668111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10849634 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107790192 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100425644 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122034631 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108165203 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082599816 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108930477 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088658576 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.109066652 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084835878 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120514026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109331062 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.085712831 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109027462 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087911373 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120121377 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12185838 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114581332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095425355 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11037755 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120541623 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087792394 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109218009 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12023705 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12918213 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10113379 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122160274 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108649838 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120283328 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100102073 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129707373 seconds)
  done (took 7.473665915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080122313 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07903423 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098126668 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077205982 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099849572 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078507989 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078940729 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100792278 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08182092 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099641465 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079265462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09652265 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077206658 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078683161 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097690979 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076910217 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097640012 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077156451 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099004439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077703382 seconds)
  done (took 2.584751536 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088531609 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120918064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080640549 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108373343 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082692447 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10851553 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081789566 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103567069 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080012322 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104410273 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112636167 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093500958 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101102056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087445348 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113853701 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107110752 seconds)
  done (took 2.431762292 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101215914 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12269089 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12457022 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085660059 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.098520499 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0876268 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103679481 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.076729305 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.096243555 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.089025969 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105424648 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.086420451 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102951838 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.078860925 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079942424 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10676382 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075639534 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105697346 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08202574 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.126125586 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105023255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.083167423 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104589804 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.082152308 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103800335 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.0857887 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107913967 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.078238088 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.099867826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.083464761 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104735323 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088432126 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097887259 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084463583 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098837451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.077147691 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104096137 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084237954 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107162313 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082591882 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.099328257 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.08205769 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103570983 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.084819658 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.097439049 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.083138908 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.096401467 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.086965574 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103010514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083064319 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103644626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088352574 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107810252 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.090947702 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.111844857 seconds)
  done (took 6.078849131 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095287641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104761969 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085382325 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098187352 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084188616 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108761606 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084817202 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103257014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082776668 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097465867 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084073124 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.105274428 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083777719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10481379 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083338707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105075501 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075666105 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102175811 seconds)
  done (took 2.550642364 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085684217 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079996248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.108998859 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079002777 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101918201 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081200139 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096657095 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.079118621 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098669688 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080362619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100906291 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082967706 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098237086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.083313694 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10078143 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081392976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.102139069 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0794651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079187871 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096625103 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082098089 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099352188 seconds)
  done (took 2.838441744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.098262468 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132329671 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.094518778 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.14315702 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.106036323 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.084585633 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.115178983 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084966226 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.124007646 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084101468 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.105092948 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.083806699 seconds)
  done (took 2.118118882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104867657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138107467 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080796415 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104596622 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115525649 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086871779 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106869274 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086611784 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12066541 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120728372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085793123 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121140057 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119980266 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11751639 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094141125 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115523916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106236102 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086416348 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101900922 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108689765 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10702958 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120102941 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084997437 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107021462 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10564191 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098298782 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120558238 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120255171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085639524 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120870615 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114783446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085296562 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121002385 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12018306 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082297819 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121617744 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106062197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129213089 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094981983 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118165284 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103611568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095569698 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12131852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113356241 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098837464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106925153 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11341346 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086329137 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107445823 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136204451 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11468726 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09849279 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11581891 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121563686 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099494306 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136752895 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12072414 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119280296 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11566897 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120861048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097694574 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116672543 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118639452 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119587827 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095260511 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119232468 seconds)
  done (took 8.069184389 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120710083 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104218 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08490661 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121284427 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118593303 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106012066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087205974 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106671997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086576692 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103516713 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154583527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086406932 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11912227 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118592622 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085044536 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108391533 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105648837 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098114808 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10335338 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136038147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085002877 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11882457 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119281396 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118275904 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120570205 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094919697 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10677721 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085986105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107563714 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107165925 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094232933 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106984962 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118325491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083177569 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118608068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085884734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109266569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114489847 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086343605 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115515336 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118526355 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129804629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087433973 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10691111 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.33622763 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107794502 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106018749 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08282704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107295334 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083302725 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121021358 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120896214 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120517832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097726986 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108076399 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105821927 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086616622 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106902888 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085535951 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11650022 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118800669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086821555 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136216391 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107307282 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085235426 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119560636 seconds)
  done (took 8.111695322 seconds)
done (took 151.383542015 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098635017 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138257813 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095276631 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164832317 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080299787 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.137711102 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114068128 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117703216 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080541574 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102067076 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.08043572 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.104868793 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.147462011 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101153273 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.081158676 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.105040901 seconds)
  done (took 2.617733802 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.176166619 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283948543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100144477 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108742821 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086623241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105884409 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084981083 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.109825025 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081533413 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.114018616 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103193589 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083207512 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.112848199 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083899029 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10270188 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083655323 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113295765 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085505104 seconds)
  done (took 2.89428815 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111678136 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146149891 seconds)
  done (took 1.136991058 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116457561 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182063501 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29182031 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156250434 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.110852853 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124489962 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156077522 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.120431024 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200049404 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125371052 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104504745 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109339208 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133857287 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093572743 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.111798823 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.086112523 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135974149 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110333592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.088498904 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.109312828 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112526835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.109478743 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092472865 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110645313 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184067584 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125243153 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087416225 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.110043923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.109649364 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08993478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114183905 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.101973538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123747484 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.187028135 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093282136 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182902552 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095103273 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107899104 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.088809747 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107777754 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09228021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114515829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.123330126 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.088031425 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.108852595 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097418338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.109803977 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.088638903 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11724014 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117761026 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095724075 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114738029 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160158571 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119142772 seconds)
  done (took 7.421677982 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794484064 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151488698 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086456056 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.897368648 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139681158 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099904915 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.791862845 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131341176 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234950306 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.81193449 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10107701 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124338296 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228049842 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.249754892 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.142452339 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313747253 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.696264188 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.098927236 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137536944 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.147674501 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092537897 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136690446 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127926078 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.425641445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.109031714 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087270364 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114237914 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099334332 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178480048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087668952 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111085387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180488801 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26547277 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20331721 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087275758 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107716152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.085732796 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.16569108 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267184465 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21729573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173455826 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.082681525 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106994082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098765997 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129904801 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.081830659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185094534 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172219488 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172139834 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.113377932 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11980791 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096645302 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121117644 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.161379213 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082223782 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336572086 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340216958 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1075395 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094491225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128074471 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266266511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086373374 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227235694 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13542921 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190556291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.108407763 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77451535 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166663114 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085452739 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118124678 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.093541183 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114075865 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.119951213 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164575498 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389192109 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.102639171 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113497092 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085270408 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228107927 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086622941 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107447344 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163320881 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086042571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117863767 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125392217 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098926258 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.193336652 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247412339 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123183227 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095499333 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114312376 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098279298 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110801991 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211085023 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221282683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.157041245 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212278544 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122684832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162701533 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.186398792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099238128 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.168892951 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116219443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128358816 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120325429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.193921968 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140597845 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.109077437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092141413 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116944257 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14230896 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089275023 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116280775 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168729327 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.456963637 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.187191097 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082844226 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112208227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095531108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159658771 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116348632 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25940579 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097209451 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165466195 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117254458 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.081383057 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117807036 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1627646 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124190239 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118047836 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098522904 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118745673 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248259951 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222708288 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123520746 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219587009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177318743 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120266605 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173591148 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118331162 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168652866 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09543613 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121142055 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109370205 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752700778 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122743883 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116958438 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092177109 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185665902 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108882277 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08840625 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107246676 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08374433 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776544303 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089000199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105145715 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.088351625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117909518 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.094668795 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.115099055 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.090903479 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183926496 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.210552419 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122783759 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115940549 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085139633 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158501993 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.110980424 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.086312426 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.109714877 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085847056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119533672 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089811747 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112141146 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171417474 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156593388 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222270128 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.578090907 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.086132861 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108429054 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20839572 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108979022 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30636579 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093535146 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228294547 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166913093 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.106007318 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.335939941 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167999166 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185073352 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088971649 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193092874 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083935471 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.114266618 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.161291648 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085879234 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116907774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158205407 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125961462 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100976816 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.145839266 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109712385 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226504292 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082010286 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191433474 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.088968146 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122188412 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.311266006 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086840727 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12970575 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.161903601 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112739277 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087165917 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704372984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111588898 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.118566854 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097001888 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225631455 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164464259 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11721809 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.116077796 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100695324 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160482721 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233998592 seconds)
  done (took 43.500228178 seconds)
done (took 58.443173186 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310358798 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.262039135 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.292702612 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193742584 seconds)
  done (took 2.033114046 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.177270752 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150017358 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12083786 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106867972 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150722068 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083709409 seconds)
  done (took 1.692582083 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.472196687 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.368856788 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.343744758 seconds)
  done (took 2.092197963 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.250747067 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.27857598 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.320097807 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.429882909 seconds)
  done (took 2.288651972 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204400018 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122585331 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.096642859 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.135582295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169443445 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.175562654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139891234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.150773575 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.126238605 seconds)
  done (took 2.269876146 seconds)
done (took 11.281161575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.277851954 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.314200089 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.148932039 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.260450692 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.23009336 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.177422475 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.209939861 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.141196502 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.226911965 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.14072452 seconds)
    (11/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.255192722 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088985573 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.14569745 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.200259837 seconds)
    (15/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.185733451 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.122430789 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 0.228008399 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.161624381 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116037259 seconds)
    (20/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.208330526 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111290392 seconds)
    (22/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071717823 seconds)
    (23/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.184435586 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.089728309 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111771836 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.230223377 seconds)
    (27/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.149004004 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132909238 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180993578 seconds)
    (30/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.096459186 seconds)
    (31/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098811061 seconds)
    (32/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089689196 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.204282632 seconds)
    (34/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104725082 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.220122247 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08558208 seconds)
    (37/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.12354065 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 0.215542395 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.177653397 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096581869 seconds)
    (41/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.188276016 seconds)
    (42/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133759916 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094891735 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197608557 seconds)
    (45/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094422361 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.19409323 seconds)
    (47/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112396125 seconds)
    (48/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.192088564 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092597293 seconds)
    (50/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.153697111 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 0.227399485 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.13781247 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.139808711 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.11778862 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.180276453 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.109231518 seconds)
    (57/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.121837149 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116010078 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138484509 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098959858 seconds)
    (61/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070380198 seconds)
    (62/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.227882734 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.162462861 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124829459 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.114762507 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.130905441 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178274696 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.122085112 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.192378366 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110354321 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.098283385 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.078210727 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.077387836 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09528622 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 0.083767648 seconds)
    (76/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.105588992 seconds)
    (77/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129731383 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.113460203 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154898677 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.099254782 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.1780211 seconds)
    (82/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.147162098 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.213140879 seconds)
    (84/286) benchmarking ("sort", Float64, false)...
    done (took 0.146015028 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120965519 seconds)
    (86/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098036238 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183104361 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.18385806 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.123285025 seconds)
    (90/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086834746 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.123794656 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092505155 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.176235205 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120301487 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.109233735 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.181444225 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124970782 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.089313139 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.124931742 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090950003 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.10835359 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.196510499 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090485292 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123642217 seconds)
    (105/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.191946033 seconds)
    (106/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151915687 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.10818299 seconds)
    (108/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.072221509 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.244163824 seconds)
    (110/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.203451278 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.182529856 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120762317 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111095747 seconds)
    (114/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.146195792 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119984023 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077210564 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111828913 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096716689 seconds)
    (119/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.095403065 seconds)
    (120/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074243197 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117078203 seconds)
    (122/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.072412844 seconds)
    (123/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.071601167 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.19039068 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.119852868 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.09218048 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124092557 seconds)
    (128/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.079953499 seconds)
    (129/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.117378938 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.083313412 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.115804242 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090930222 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124568899 seconds)
    (134/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118582223 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091322033 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119563055 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091924282 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.116261501 seconds)
    (139/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075354193 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.099564578 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.195729206 seconds)
    (142/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130040397 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113344836 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.09496466 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.095216084 seconds)
    (146/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098436526 seconds)
    (147/286) benchmarking ("sort", Int8, false)...
    done (took 0.189598504 seconds)
    (148/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110761346 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.123298269 seconds)
    (150/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119731859 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.114039965 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073368655 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.086552251 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132220711 seconds)
    (155/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108084621 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091802885 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.170802031 seconds)
    (158/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.072453428 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.115619538 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08748002 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123163897 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090736836 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.135637909 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107515536 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092176025 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.089398263 seconds)
    (167/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.112973628 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12034377 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074321497 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17311026 seconds)
    (171/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074602266 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.116025273 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.096252596 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.099830825 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.097306577 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115685393 seconds)
    (177/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075839199 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 0.216479804 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11209307 seconds)
    (180/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.090279979 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.170862224 seconds)
    (182/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112457508 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.176893976 seconds)
    (184/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091835573 seconds)
    (185/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.070771796 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115344144 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087643521 seconds)
    (188/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192901402 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 0.252638467 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100519857 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121191956 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073340009 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.097963031 seconds)
    (194/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.165091079 seconds)
    (195/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.114602029 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.199142428 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.084369898 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122640528 seconds)
    (199/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.074398924 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.109274807 seconds)
    (201/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080567735 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11392587 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.089513224 seconds)
    (204/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.114246288 seconds)
    (205/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073308741 seconds)
    (206/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120568338 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098467514 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.11176219 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09141054 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116283704 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091630023 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.098346715 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.091098597 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134769743 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098331008 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 0.173068861 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115181043 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.108058016 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.10087417 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.074187932 seconds)
    (221/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.095811743 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.074017248 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.130565664 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13444682 seconds)
    (225/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.102567532 seconds)
    (226/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088333989 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.131985275 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.088495982 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.116584729 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100049488 seconds)
    (231/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120255097 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.106735168 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.097761103 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.078529252 seconds)
    (235/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.09772396 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084833089 seconds)
    (237/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114444229 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114644134 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.11060485 seconds)
    (240/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190741678 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089709888 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.10961116 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.074554905 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.115879623 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.089135555 seconds)
    (246/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156892195 seconds)
    (247/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15348669 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098262482 seconds)
    (249/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.097675138 seconds)
    (250/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.080680733 seconds)
    (251/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.099477429 seconds)
    (252/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074794518 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088625769 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.115352719 seconds)
    (255/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081605292 seconds)
    (256/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.098706156 seconds)
    (257/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.073461064 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.097103332 seconds)
    (259/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.087114912 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.097656077 seconds)
    (261/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115570225 seconds)
    (262/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.096069113 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093682501 seconds)
    (264/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.096765368 seconds)
    (265/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103302672 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135629101 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.08414446 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111460076 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098239284 seconds)
    (270/286) benchmarking ("sort", BigInt, true)...
    done (took 0.269817594 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.088563584 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099091929 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.074209972 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.086870122 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.113577727 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083927913 seconds)
    (277/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.104372772 seconds)
    (278/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083620226 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.100689731 seconds)
    (280/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07644389 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.111573698 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.092722005 seconds)
    (283/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112767364 seconds)
    (284/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.183938894 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091672733 seconds)
    (286/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113132201 seconds)
  done (took 36.804314004 seconds)
done (took 37.713876667 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100533329 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149308262 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094881693 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139767343 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121836923 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.10164633 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117995491 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098439893 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123159352 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.099486313 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.122616825 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078624918 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.120069887 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.09434824 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.120885722 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138107796 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.099138122 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.115192077 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.087792492 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111375906 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.087263928 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111742513 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089502917 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103565036 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.096017582 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117694653 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.091212443 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.11977178 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088236347 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109841042 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086433467 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117167661 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086192366 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121637305 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090364709 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.111748793 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096094059 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.118251239 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.089550908 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112920425 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.092290368 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.113551909 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.091167564 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116607008 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089107245 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111178816 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087693013 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124574175 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113621456 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114142116 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091994591 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120595999 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095112924 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116834806 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.085162452 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.112380909 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.087754612 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139608834 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110620748 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088932165 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115115849 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.092798281 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.109792246 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088415242 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110971572 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095634328 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119275857 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087508348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.117928092 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090659937 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.106602486 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.089005282 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.109831955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086602439 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.092646554 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.11982109 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081924341 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.113676627 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089986919 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11511638 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.087312221 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111077182 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088922302 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113567282 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085923364 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.10412429 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.085708439 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114721446 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087373938 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112078282 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090836761 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114952997 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.09006013 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120389381 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087448357 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113934851 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087708996 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113098193 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088716257 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111410903 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.082881148 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110478968 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.092122901 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.109539423 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089064838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122563335 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086383417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115016027 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087342491 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112098454 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100877505 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120128433 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088102999 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113657407 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084167208 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.115926048 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085563113 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111051714 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086329022 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.130922493 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.088338588 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112777855 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086791888 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.115450319 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097191176 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.108168111 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.086278779 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110395189 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.088069473 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.11555622 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.088963929 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110314027 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.087497808 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.106630939 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086604991 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108630945 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09225301 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.110186813 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.089303672 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112073393 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088991235 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.112744644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.09027373 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.112227699 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086549403 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.104411941 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09062123 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085420171 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115338447 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088097296 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113197709 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.084033452 seconds)
done (took 16.605092582 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.096114953 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186568506 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146031814 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.147692053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.14520177 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.105879836 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124537301 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143683967 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.097177329 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141643072 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.143813654 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108611272 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149762497 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12064699 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.128999965 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.095112854 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117969942 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10443256 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.153696353 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.138562383 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145960037 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.096986784 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140896406 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139905112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.0936819 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.149337312 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.121950513 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.094362634 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.122572212 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102364752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.136445955 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.122184807 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.097260846 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132397967 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100769084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119006113 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.129696116 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090130707 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.119987133 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.095207708 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.133659236 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131148214 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.091741835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.127958583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118160808 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.098841611 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.117917942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094355404 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.120571651 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089677802 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.124843951 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140044243 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093511036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122841869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.094840987 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121198158 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121308516 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.099258212 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.121780541 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097479622 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120375013 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12180482 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.100828304 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137777114 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.118333263 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.097856972 seconds)
  done (took 8.863489653 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109795241 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.14733728 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125558362 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.1019515 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.122542305 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.083762044 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.108372428 seconds)
  done (took 1.773265933 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08624968 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138959816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118112862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142992736 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133544889 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121230792 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127803135 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.084960308 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134816239 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.11960954 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.113986665 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.165623247 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112884041 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.099006049 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.14718876 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.084916834 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.14751566 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111895073 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094417537 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14238168 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090880235 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132436653 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.122855121 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.08763577 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131650999 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.088017826 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.17590118 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.120214218 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085271358 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090424421 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117077641 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.181129189 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.131661775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.097019224 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108067944 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113409225 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.132216225 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114858096 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.110428854 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.116355927 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107409748 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117361714 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092622583 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117481305 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.092201496 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125976992 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120630981 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094837202 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.114898913 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114487195 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.12212413 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107894502 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113233588 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.089100318 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.121932072 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091480336 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125968427 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114979703 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.114909563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118206863 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.111755731 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138327924 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.131178912 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112836414 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128810475 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.132095558 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.107799382 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115707943 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094755004 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119861934 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113551282 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116001562 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.095615253 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127715935 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118247815 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.114350064 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137979362 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09051677 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.123872649 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.090354954 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11348682 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086705569 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127408032 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.089864868 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113066464 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103404317 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124195526 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.090162033 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.116030816 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133330492 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.091125008 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123717147 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.095839585 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115332628 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125758335 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.114279763 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123556894 seconds)
  done (took 12.17313661 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089242907 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.08651997 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118687893 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08759232 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113226841 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087501755 seconds)
  done (took 1.565968477 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117818094 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11599594 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102160711 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12017611 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15496547 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.111197165 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.136691753 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096222274 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.133024875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126205031 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111285671 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.138009303 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143142961 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.095261421 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.137282858 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.094284561 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137405063 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089777997 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12711955 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089424493 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.131800077 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119208811 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.091306854 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134997004 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095725811 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120728255 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093958375 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.127848916 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125615734 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.098705882 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118470921 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.096421244 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.119655563 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.097742379 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.137987328 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.119338388 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0906403 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121355851 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.096813387 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120293916 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.112907535 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116828323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.100551777 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122876964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122350811 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096526505 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121676256 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09411293 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.135832108 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097017804 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123132291 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094235892 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121161005 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.096773632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12146029 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121994235 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097624192 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.136718873 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094380023 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120259676 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.090751126 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121677872 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121512327 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096725901 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120135626 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.097704871 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.119361064 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091309956 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115678236 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.094535649 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122451638 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092480247 seconds)
  done (took 9.158481386 seconds)
done (took 34.502068386 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.672849681 seconds)
  done (took 1.653163395 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.827517746 seconds)
  done (took 1.809507121 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.630918121 seconds)
  done (took 18.639962291 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.495440401 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58931305 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.97395386 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161301112 seconds)
  done (took 3.202279084 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.970582117 seconds)
  done (took 1.972834853 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300057812 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.26563482 seconds)
  done (took 1.553455084 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.816770096 seconds)
  done (took 1.811621695 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.506543356 seconds)
  done (took 2.500806917 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.349335056 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196808163 seconds)
  done (took 1.551696276 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.569037505 seconds)
  done (took 1.56798191 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.760147199 seconds)
  done (took 15.762207125 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238405953 seconds)
  done (took 1.25149064 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.29258813 seconds)
  done (took 1.294355244 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.641004528 seconds)
  done (took 4.648105307 seconds)
done (took 60.211739794 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.09771689 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125207316 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101227784 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.121516949 seconds)
  done (took 1.446563224 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101973114 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119837374 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098473599 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119210537 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102703066 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.121120648 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.093530815 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164335063 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119467427 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096465289 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119914147 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094549598 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.121828339 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.093803418 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.118312969 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095677616 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.123684233 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094220188 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121596509 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120010109 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.09246932 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.120605469 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.097447692 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118049985 seconds)
  done (took 3.676470263 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097759929 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090230365 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.119212002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090387837 seconds)
  done (took 1.404219024 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100659896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132504006 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106743084 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125717966 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.106461764 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133338218 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115436542 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.089873004 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116551177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.102242857 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116323585 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111440703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132104772 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085921354 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.12768394 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087166811 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112729524 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.106208242 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126335637 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.125962781 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.090360702 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124322489 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.099077096 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129733795 seconds)
  done (took 3.718514475 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171052539 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128579232 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139669092 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096107503 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164844377 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140963759 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089356269 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141125161 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088765009 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127572109 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.092018967 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167822375 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12450934 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.092343422 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116849914 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122287278 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.099625547 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123699457 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092470165 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130587375 seconds)
  done (took 3.462065412 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097342317 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114993224 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08691404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088242336 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123591917 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092361079 seconds)
  done (took 1.61744542 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.08712538 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085051884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111939106 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085791772 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115877347 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085800038 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109188435 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.086099914 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084423767 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.11134658 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085843037 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109652257 seconds)
  done (took 2.176101185 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379906908 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116455067 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.115964507 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090801887 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121858719 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089268359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127757373 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.089730203 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.14416628 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089666927 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114676899 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.093039413 seconds)
  done (took 2.587930687 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209150439 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094548266 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266163408 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.37341409 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131008593 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163328201 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281792362 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160314688 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.208288737 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110409627 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221498204 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129336393 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15402952 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178877117 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137728954 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.177566101 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176872698 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200832347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14854787 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205706116 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164851563 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166456351 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179384997 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151599616 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13420426 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129579961 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118519103 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125672086 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173879305 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171068713 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175754998 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14824495 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137475468 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201912641 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213609156 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207482505 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.307406867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133828545 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.18576865 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.182472105 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228288609 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140433472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195251945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154981426 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128757398 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182423314 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159751653 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.180631966 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103867037 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138809488 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18414076 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17700946 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.20610581 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10938472 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327496137 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12106106 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146433432 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180950533 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186604049 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218680361 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166404783 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.093468945 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184455397 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18261784 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178857528 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144525042 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.166495073 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123159844 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176827321 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194052576 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177931503 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166303403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.213618665 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106028471 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165439931 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167999803 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155629646 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178452959 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160715395 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1193355 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122649369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136439407 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126476632 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.157606651 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121683246 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204148599 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134131946 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.18916552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202965772 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15757478 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160941493 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165202097 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165994356 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14797178 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.091425203 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146900874 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160183103 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158568531 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10306458 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156517791 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143739005 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126156943 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15346168 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.094676047 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159968913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132828799 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168917781 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16507956 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099757022 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164808191 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149402644 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157952006 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171047321 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186016918 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103770778 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130793092 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192923419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161909666 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135469951 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174617009 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184927317 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.164208834 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135453584 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170732217 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193108133 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111742603 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214377807 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113653034 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132398474 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.151181315 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159670857 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156422451 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12766647 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129120672 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.152229468 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193819148 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125496993 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107401811 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174649128 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125533013 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1274547 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114036135 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135965597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141804493 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.119347569 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13863477 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155552929 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160419494 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153128412 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158975772 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139761519 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193151949 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129786641 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132077584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147516591 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116687197 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.179910005 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184290106 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099959951 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228107644 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169317508 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197404502 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165854279 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131496812 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17686355 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098999528 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118651336 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166920601 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160591359 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162544378 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.182413708 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192531955 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166569232 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153378884 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150173321 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167177475 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173045601 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155204961 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.144314279 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161217572 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167975578 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092973628 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122150013 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.098711266 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141371339 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128933514 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102879697 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180710802 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164253969 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213524106 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1630966 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113346861 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180372412 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125528894 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164812891 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170922131 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137998411 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.183058987 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18139834 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168038743 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140690854 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177563289 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.090217245 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12119791 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103663649 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163845448 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132534085 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132614523 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114823095 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18084469 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2037209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121690616 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228387866 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170426572 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19122434 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120435524 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134448825 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170515057 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157988365 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183036207 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106106115 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.159854655 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176397581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142813951 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189147299 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162875492 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168055851 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227842392 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.127444184 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128827404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147527969 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166711854 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138966138 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136681689 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144972956 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134633584 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154612684 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10495412 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12538692 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180842963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143604713 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179265786 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.156405629 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172864687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12431507 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141080244 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134177668 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145946263 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114635859 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172303705 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186185339 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143305411 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15921456 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175189269 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099035444 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307144154 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217149059 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184741337 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134589523 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113875087 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160508661 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158775722 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164666713 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178840856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144204218 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180238847 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157660019 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113336625 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134818774 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146274887 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149421286 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122055964 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132048514 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.152586829 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141929951 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186036384 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141872853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157439234 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136447128 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147771353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146816513 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142080138 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199813994 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157635136 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179331843 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126583211 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165047451 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229211135 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094466431 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128026801 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096170926 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17832161 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132750949 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159006515 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183385091 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198670993 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159265861 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166786842 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137488846 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.089574128 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158511593 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14959902 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224403158 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112192037 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13498265 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191761938 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.150432166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128773478 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133392223 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312369801 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116569985 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174043008 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115764887 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.27519657 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096212537 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128209096 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158980999 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170147156 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136680022 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15554027 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161169028 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145192417 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158827653 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13650553 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18719889 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205569018 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170593191 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176470397 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.141936658 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158707026 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162939623 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176674114 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141789781 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14302258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13345999 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183126555 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.185712073 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131987337 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163385922 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165093747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159913048 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172994714 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131986703 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199956511 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129922243 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168030483 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111602098 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123336731 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159960207 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.184197982 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131919822 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176717379 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158186753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10328002 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125253371 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150001895 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158693628 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113087184 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129193636 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179136382 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12376517 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133806757 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179207747 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129628103 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154907979 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115895024 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136158782 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141962066 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144604333 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105717852 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.16931678 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181752618 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129526548 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178451236 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177053036 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16534613 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160337759 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143282949 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637044611 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12737382 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182166043 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146844576 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185582614 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146895177 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167690914 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131596034 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149071492 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168358405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150761389 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.21984999 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166258222 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.158539317 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09978785 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144574585 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143546254 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.128207008 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122665143 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165911279 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140786306 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.137210666 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155518831 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115729914 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.144104802 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136924862 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182320729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117697011 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21172194 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179380254 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107588294 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165849503 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173338151 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13024365 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159882847 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171404935 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139354012 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149295028 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100982599 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133845745 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179348864 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.093614751 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160365405 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16021969 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161244723 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16368035 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132115575 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130687842 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141053522 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161397895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129272345 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151937451 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127510686 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129236482 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.125796454 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126232207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158816672 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.156399339 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1256234 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143637633 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178114981 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124479591 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103043981 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.30974269 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130908215 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220302041 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.121082097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134161899 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144774271 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155175059 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122671275 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160288528 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127483869 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130389113 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.100121032 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181011214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.154238609 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155749254 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184565924 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161766862 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201265318 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.1329675 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234971777 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138925142 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154131869 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.099594199 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129015997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141824708 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103935312 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144427637 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189004915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177112086 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.1523071 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14477358 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096496948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126155955 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131112756 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130755367 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154761774 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158270419 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143283024 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.086576855 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14309964 seconds)
  done (took 76.241447041 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144565177 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130129514 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146387407 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.192874564 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164242891 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239649075 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.202527753 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223922577 seconds)
  done (took 2.545154423 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.09774248 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154410258 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138193897 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.121714589 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089316012 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.331749749 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.135724884 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.12178257 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.145430469 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.130917478 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090161379 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.564667112 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.091682976 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.123460921 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.111622068 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.088124672 seconds)
  done (took 3.629908204 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.256871271 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536887858 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.057741932 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.24348487 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223847992 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.150490802 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.752807406 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.183963011 seconds)
  done (took 12.50990043 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119092584 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137305321 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132022539 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161957292 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.115941023 seconds)
  done (took 1.773293388 seconds)
done (took 117.789881556 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093277039 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122950701 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094261236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.125369262 seconds)
  done (took 1.529584239 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.1058819 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078328054 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109110275 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07711883 seconds)
  done (took 1.471198195 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421677063 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108570673 seconds)
  done (took 1.669696888 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113519896 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132063694 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104553859 seconds)
  done (took 1.456883415 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100977789 seconds)
  done (took 1.211112082 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094748008 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096287055 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139290842 seconds)
  done (took 1.439989283 seconds)
done (took 9.886694602 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110261171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.525196901 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383206848 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135454843 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.719253493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.377529377 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.071817549 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154531088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.137078231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117470487 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105070283 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697015617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.016458646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.435606007 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.003670134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.337044968 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.671748394 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119009248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09372181 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119007525 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.050249099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089244317 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089043854 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118665058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.66850552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421456475 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088856234 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378023535 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115817828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094456964 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.405159377 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.08922152 seconds)
  done (took 17.03615095 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094263828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177792413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.095950451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119295339 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092452012 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119558512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098586582 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130698613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179226583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.087514562 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135286213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087579967 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123002533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089108362 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138023353 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087524157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.120304856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09092694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124224882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089864966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137512526 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.08841698 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118909717 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090030051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11786426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.100980814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.11810188 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.10189499 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.117323309 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.092319172 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122194191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089058388 seconds)
  done (took 4.688593847 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139783434 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185650021 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126480845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123441059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168142161 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11817807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.172963141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155412794 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182033406 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117557648 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105985961 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11789089 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123840154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118832515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.108559935 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117683374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09041683 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119383762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095157342 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119982271 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108266345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116794368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089773025 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119917294 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088652603 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13193069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088467244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130611433 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116278509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.093931206 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.122075441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089375621 seconds)
  done (took 5.018936943 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096910453 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125780603 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105497914 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.134308294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.091480349 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124958499 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096830754 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119188046 seconds)
  done (took 2.013232245 seconds)
done (took 29.867172488 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106474485 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093326326 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130903822 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100490036 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127863854 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102075771 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116518912 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09988581 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.130830182 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096317346 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134140812 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08770879 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.118106626 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.087333305 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.129415876 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093960627 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132610721 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0985508 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.138062086 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.104391419 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.118453172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100767152 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.096990104 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138461867 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137444024 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.109823668 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13392676 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09448578 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.118561372 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089829456 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131972964 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111055992 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120193465 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104719235 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124917584 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092259928 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.118207045 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.090810586 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132108291 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099998603 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123700495 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100144272 seconds)
  done (took 5.82420551 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116236405 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.162064548 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.08912281 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.119578738 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089377126 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.158493019 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.153683833 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.089812916 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.118577556 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.115170907 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.144953797 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089770163 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.11864307 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089613576 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.117312027 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.090651422 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.140513132 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.115184307 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.148565658 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.118880925 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.163981249 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.149358774 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.123376222 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.142332396 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.160920897 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.153507471 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.109620774 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.155410413 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.115510282 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.118241745 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.146902128 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.121614947 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.117617276 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.089431152 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.159362037 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.124198233 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.14704515 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.16029157 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.149167785 seconds)
  done (took 6.12363442 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.09907961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131578529 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11066884 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183099815 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126255765 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132398697 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098890714 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137727973 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105396932 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119397947 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090507529 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148889642 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135360601 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.09727473 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089173042 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134208213 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138484257 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091268247 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12261356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.108473085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.136980904 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102793753 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.130745952 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.10028605 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117600872 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098405984 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.121006985 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.104325762 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123450203 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097504624 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122571686 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.093898256 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121106689 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.101246547 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.121868644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.096928418 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140592208 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09843942 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.13075577 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.12082458 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131094757 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092941924 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141190849 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157844567 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09038313 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12612832 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.096682568 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097288178 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117914868 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106534099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12921097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089058064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133851506 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117351193 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.08938677 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102926353 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.120053187 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.092531771 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126725235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.095754446 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139825185 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.093379442 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135400413 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.090082615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125507241 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088900035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119250513 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093605996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141347645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.092561201 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158418622 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.088397042 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125025747 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096927116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125205369 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097599731 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119811194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102825342 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128755741 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.094374087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129938867 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092989548 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123699257 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106530773 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134149095 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096406515 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124529467 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.095847161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123754059 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090578541 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142001407 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092474218 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123461974 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.106241326 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120207678 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091904806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126020853 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093176294 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117662848 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102015145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.125257063 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088385288 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128839554 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090605134 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123171406 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098207192 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123400684 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088958654 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123747837 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.096815633 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118127485 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092818532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122122787 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092597751 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131438385 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097619104 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.1213902 seconds)
  done (took 14.424340513 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.235732417 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217430113 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191891662 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.303802499 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141597835 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115876798 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213648468 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16562306 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090665915 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160903011 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177868777 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186923718 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175665566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.186983129 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.17502109 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121213015 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108147553 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.172594791 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21534954 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298607159 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108289861 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135689782 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162305788 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160747195 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108484151 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.136607465 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.142785256 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111046588 seconds)
  done (took 5.860290504 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105782077 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156365323 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096658029 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146834373 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146557925 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090635904 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.124960221 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.090662889 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133042513 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.104753509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.12162731 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.096438565 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.127179745 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099199085 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120796792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098881569 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130754037 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.098282604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123874703 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093337609 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134886493 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.106523442 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126357729 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091892178 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137487106 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121887501 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092360776 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14174296 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128624928 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11623467 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117498866 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099302633 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134735003 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090759876 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.09258674 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.123705394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.091664085 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.123043151 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.09119197 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118018072 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089277864 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110704903 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.09410975 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135327658 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.097062946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11802593 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095422117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125111525 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096917615 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.116849682 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.092103988 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092513254 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.125571581 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.100463508 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.124867465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097000725 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.125037604 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091694651 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130770324 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.092481506 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118707033 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092484667 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128311775 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.094051318 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129434873 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.095427252 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122481467 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091654199 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.126722152 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.096858527 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12362701 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099047297 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.117051904 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091931572 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.130427097 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.099144045 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.123353693 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092014322 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092478418 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.120302047 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078419916 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.120639633 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077571293 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124452664 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089724 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.09119588 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.12311723 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.0952695 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137880891 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130694157 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097385433 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120858546 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092793193 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.124373168 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.089009399 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124536375 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108216079 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140946604 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088474798 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118410286 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.10537693 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122122315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.089027272 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.112364172 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103245353 seconds)
  done (took 12.788504962 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.131943431 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.171770969 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121951825 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.109612824 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156151836 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162960952 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.099533807 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127666831 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.657422788 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108223265 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124619937 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098639261 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.124433186 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.103572529 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.161916376 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130402172 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.090976694 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134835594 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095591893 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.174839889 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.140543616 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.129693625 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.161736141 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12417045 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.095855866 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.157702784 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164648075 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103804456 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133313656 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.131326276 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135658588 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164407376 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.162914361 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096758881 seconds)
  done (took 6.150257798 seconds)
done (took 52.284044765 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.220712898 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.442963442 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.215313516 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.213719051 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.255873734 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.234060185 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219111748 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.406341073 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.97149739 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.207451168 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.214356479 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.213151995 seconds)
done (took 27.95870916 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.290764326 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.372206903 seconds)
    (2/2) benchmarking "String"...
    done (took 1.508054446 seconds)
  done (took 4.023759553 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.213298645 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.215048199 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.458690876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.218208641 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.213820553 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.231141835 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212280906 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.238738718 seconds)
  done (took 15.930282794 seconds)
done (took 25.599021558 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.290128604 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.405691591 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.471189965 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.242885031 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.213374868 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.224087714 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.219919022 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.261214056 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.221930072 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.213205404 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.216311831 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.469349583 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.246446315 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58861659 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.215878354 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.22979241 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.228561797 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443828851 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.229530065 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.202947396 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.218484647 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.223587851 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.216710576 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.237628552 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.22339348 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.217540134 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.244305126 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.224715527 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.432947605 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.233664068 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258089201 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.214311504 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.248024075 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.226239747 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.324404229 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.250020209 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.410097033 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.223701815 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.205165149 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.22607607 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.416552688 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.64148914 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.219051244 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.228423246 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.217598155 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.317988481 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.208852122 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.943886347 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.217905505 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.229277131 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.235125553 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.603777895 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.224359115 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.223009393 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229843125 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.465644042 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.218272943 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.259414524 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.252933139 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.215182079 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.217481264 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.214652654 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.230058623 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.23024965 seconds)
  done (took 144.499885429 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.213452866 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.222955818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.223016415 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.238252561 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.222271148 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.222552211 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.21844872 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.216381498 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.22315341 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.249790003 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.223594546 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.219456468 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.221008707 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.199602696 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216098937 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234071639 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.229952159 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.221546801 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238856951 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.219736602 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.218805324 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.223717518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.224895155 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.221261112 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.265360375 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.309670535 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.238058681 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.221976563 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.220895346 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.223756662 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.222509291 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.227757327 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.857878711 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.071104355 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.228628327 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.245507524 seconds)
  done (took 80.842674968 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.217013416 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.215600743 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219927356 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.252008226 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21430402 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.793686932 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.814151068 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.952513207 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.617572345 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216999898 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.657486048 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.489401904 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.21424629 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312905911 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.232120503 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215934996 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.232844896 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249336592 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220871056 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220020002 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814333433 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239114477 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.424126473 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.398432138 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.234122011 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.255124065 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620134344 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220853913 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254274239 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.557303974 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.269196035 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221580967 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.634083165 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.569255865 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335424149 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222774444 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.254140464 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.22096332 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505870366 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220488664 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.221197351 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.225069674 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.221780786 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.905588327 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.221690943 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800070816 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.222664078 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188677637 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.222616458 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.222221798 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.47342261 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.980162982 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240691687 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220832001 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222183116 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.221025103 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219988327 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.253947147 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.397437643 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.336552995 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221537282 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.224215836 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.256222731 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.221432635 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.29883738 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226518856 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.257626985 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.297677926 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.433338123 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.817465501 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225601744 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319803851 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.343765791 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.221870668 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.221973455 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222118229 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.222612808 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.33235888 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.222376081 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.652067434 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.399171014 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.23843388 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.674541626 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323074569 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.223062909 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.221855229 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629197466 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227394269 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.222909389 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98575824 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320803533 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.222471558 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.223313048 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221529717 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.654252672 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.820785548 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500528449 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.228455349 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.701033223 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228185902 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.223189187 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.661439503 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.79913853 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.946990147 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228417029 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337783227 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401466698 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.240865857 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.223037438 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.671169423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.224671397 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.275181996 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.223939185 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.623820384 seconds)
  done (took 369.78517794 seconds)
done (took 596.271117905 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.949732497 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.902780169 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.036713408 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.932398098 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.896932505 seconds)
  done (took 10.872101439 seconds)
done (took 12.025235371 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416767285 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.415937486 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.287560271 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.417394444 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.262289374 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.434146218 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401147926 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.249195024 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.330575367 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.308594304 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330397864 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.279184592 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.261694179 seconds)
  done (took 18.547019714 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.605981605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.228002456 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.309260328 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562602173 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264989869 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.581247744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436360933 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24493109 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430569921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.240815684 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239905179 seconds)
  done (took 18.299357549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.575459735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.227571823 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.310634364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552404745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266346099 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.609330773 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.442639671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244856143 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.435787305 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241010132 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.241581742 seconds)
  done (took 18.302813033 seconds)
done (took 56.302384239 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.271011626 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.401150742 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.254331822 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.241076537 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.237496724 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.239007001 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.243931448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.237387018 seconds)
  done (took 11.282523973 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.234657779 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.233782087 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.235586401 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.234927686 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2362832 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.233001308 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.235135372 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.238420666 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.23535166 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.233149161 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.234549781 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.236981215 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.235979687 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.233668543 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.232965459 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.237980834 seconds)
  done (took 20.918570188 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.235752464 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.235711394 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.234646315 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.234341165 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.233324599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.236974633 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.235764455 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.234950047 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.23496761 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.236594594 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233062465 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.237481139 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.235706378 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.236520769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.238142216 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.238357868 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.236259998 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.238116778 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.239390089 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.236835928 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.236462832 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.237074524 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.236132016 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.234777827 seconds)
  done (took 30.827583893 seconds)
done (took 64.184752734 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.230823922 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.244507339 seconds)
  done (took 5.630621843 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.292971087 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.301119892 seconds)
  done (took 3.751195343 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.237900051 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240405501 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.23949616 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.239392707 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.240869527 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.23917335 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.240441692 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.240760108 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.241046855 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241077554 seconds)
  done (took 13.55669257 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.239172506 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.240905393 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.237535168 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.242269572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.239449242 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.23658157 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.241170788 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.240649513 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24010278 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.237234206 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.239532169 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.237544938 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.240273379 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.236948638 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.238325753 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239428459 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.238296416 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.240063865 seconds)
  done (took 23.464917438 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.253653953 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.262102484 seconds)
  done (took 3.675394724 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.365027505 seconds)
    (2/7) benchmarking "second"...
    done (took 1.281870264 seconds)
    (3/7) benchmarking "month"...
    done (took 1.349010267 seconds)
    (4/7) benchmarking "year"...
    done (took 1.33686422 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.278271818 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.259755136 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.281008445 seconds)
  done (took 10.311071485 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.241530485 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.43476981 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.546377461 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.828725269 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241210819 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.244459634 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.124382365 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246873166 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.247460356 seconds)
  done (took 14.317010438 seconds)
done (took 75.859088919 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.234331406 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.258604593 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.24779318 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.250130443 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.592428463 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.266652962 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.237444023 seconds)
done (took 16.250989162 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.231583523 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.226317734 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229545805 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.237840225 seconds)
  done (took 10.082184967 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.241707613 seconds)
    (2/2) benchmarking "read"...
    done (took 1.558970542 seconds)
  done (took 4.963248026 seconds)
done (took 16.207767328 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.242122491 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.246006557 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.241956665 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.241677371 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.241003365 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.240963323 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242039078 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.244803287 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.243509749 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.244170651 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.24045861 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245899469 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239633998 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243094467 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.242393067 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24544757 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.245082023 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.241773023 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242298061 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.242905701 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2407994 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.242057715 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243132882 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.241565448 seconds)
  done (took 30.988134741 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242865059 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.242801572 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.246190833 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.243532249 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239804082 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245271604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241657405 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.242969558 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.244924456 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.244590029 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.243030924 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.241537076 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245970353 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.241220863 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242763392 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.24268467 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.246674294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242833156 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246290192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.244484088 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.246678037 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243821106 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.24400466 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241959438 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.243855099 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239661284 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242828056 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.241932868 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24351937 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.24058903 seconds)
  done (took 38.462747628 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.250159464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.25206361 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.246589109 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.246780817 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.24583293 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.248706044 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.249384538 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24914453 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.246654386 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.245046536 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246385179 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.246301061 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246640821 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.251597931 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.244793608 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.245235189 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.249826915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.248818999 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.250058488 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.247445452 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.246442828 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.247760626 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.247478418 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.246354616 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24996695 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.248044591 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.246157079 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.248431916 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.248481218 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.246715952 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.246029718 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.247332644 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.250082987 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.249340633 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.247776581 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.248210032 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.254286939 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.255894974 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.248729324 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.249467403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.251243736 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.252677953 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244142986 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.24392201 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.242851071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.244332125 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244928087 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.242759609 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.24412171 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.244594723 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.244791996 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244631348 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.2455837 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.243914297 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244960092 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244212065 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.24505938 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.246892286 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.248051168 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247750064 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.248203779 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.247210408 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244337984 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.243711711 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245533359 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247766553 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.244741287 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.245397362 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.245691738 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24608529 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247481927 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.244058969 seconds)
  done (took 90.956777447 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.245864427 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.243555501 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.243567943 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.242598679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242374554 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.24503935 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244018729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.245346345 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243596426 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245337295 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245479339 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243847935 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244152938 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.247138009 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246293211 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.243944631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247949242 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.243574719 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.245074314 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2458149 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244409739 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.242111825 seconds)
  done (took 28.54757392 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245719343 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250419221 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.24544048 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24878524 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246297431 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.247021795 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.2450678 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246901257 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24506035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245147917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244371194 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244587265 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.245090567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243663223 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244147144 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.244608166 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245401823 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.24671158 seconds)
  done (took 23.59135176 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.243954784 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241890768 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244941614 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.241759602 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.24394243 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246642787 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242875642 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.249927319 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.245552597 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242444918 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.245849173 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246222645 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.245735591 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243414928 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245866675 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.2424596 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.243764656 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242330485 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245066468 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242224357 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24196306 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244637877 seconds)
  done (took 28.54022022 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246490864 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245817175 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243833633 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242026374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.241783003 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245510304 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.245210277 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.244114551 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.24728245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.245490066 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244507183 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.24615898 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.244197087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242669621 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243331359 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244185504 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.245754619 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24370295 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24604799 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243865154 seconds)
  done (took 26.057445636 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247830368 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247683295 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247002015 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248125588 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247852833 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247619563 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247818854 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.248926642 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248254756 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247668224 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248484866 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.24863193 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247688543 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249497835 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.249041965 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248943481 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248097702 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.249227597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.248986006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.250016585 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250137349 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.248960338 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25032485 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249638721 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248758764 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.24942794 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249528031 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249322375 seconds)
  done (took 36.129834588 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248786106 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.247823924 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.247141818 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247137188 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246010185 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246455564 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.247089197 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.247722265 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249368182 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247347244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249540455 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248709323 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249912092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.249759752 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250644202 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25006442 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24894581 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.247519298 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247512397 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247705404 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.251061897 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249853271 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25046974 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.248514707 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248792099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.250502956 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249188731 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247488663 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251155639 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249044107 seconds)
  done (took 38.631049952 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.296072764 seconds)
    (2/2) benchmarking "in"...
    done (took 1.296823503 seconds)
  done (took 3.763401107 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249694356 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250815389 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.251232109 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249733617 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250309067 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.251861304 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252820319 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249681408 seconds)
  done (took 11.176804736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.252060921 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.250563992 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.252001908 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.251844747 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252038615 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251003976 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258627485 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.272786505 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253533747 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253690691 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.259066924 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.260826759 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.253797855 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25247638 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.252233981 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254143559 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.252352563 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254032831 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252019252 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252994649 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252876335 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.254124344 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254244387 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.25140186 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254994747 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264347128 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.257323271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.254469314 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25369947 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.256827129 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.25329032 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.250670288 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.25315725 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253170078 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253800182 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255472023 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262424994 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275281711 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260502648 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254018673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256315261 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.251959646 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.254437199 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.254453863 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256032186 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.254436607 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254259767 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.25208599 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254287813 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.258469344 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259375486 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255878883 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.251432922 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257668198 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256307749 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26249015 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.274473175 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258763218 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.266942838 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270601657 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268748625 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.279890192 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258410033 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.256036308 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.267182052 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.283084046 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263117736 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.274045317 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.25267782 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255642104 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.261517298 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26942855 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.2833266 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255778129 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256807058 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25934171 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256679899 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256499331 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.26473987 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.279652331 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257948882 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258055103 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268724919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283731811 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256619747 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.256695572 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.257478257 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.259417152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258314947 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268300006 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.278695329 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.259992593 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.258375041 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.2583905 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259285857 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.259235204 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.259321077 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257986479 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.258654213 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.26615437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259347838 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261498625 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.269701814 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262520392 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260578715 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.267128161 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.259885541 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260369703 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26428865 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.257098573 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258207008 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.265417055 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.266230195 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.261030799 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.26748545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.273169636 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263147767 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.256743267 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.262092039 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259824648 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271919013 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.294420262 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.261684542 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259905642 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.265849034 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277760267 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260269813 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.261791314 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.261350254 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261507144 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258597592 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261644174 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.262357261 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262615831 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263907537 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261773724 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260894334 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.266769951 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.258937864 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261919097 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261048738 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262814527 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.26450459 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.265131938 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.26474709 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.26233632 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271659067 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258993739 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264464326 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264586676 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257499327 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.258773607 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.264148676 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265624422 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262672098 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263698489 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261373486 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264081972 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264108548 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.266957486 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265614614 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.264968641 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268194551 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.259747786 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265718418 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261523585 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.259783191 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.262767138 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265205746 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.263664048 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262948577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.262523042 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.265073432 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.272136918 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.263522732 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262251648 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.26511813 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267502205 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265934268 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264394174 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269398397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275476415 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.268758873 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.268177679 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.260299346 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.2705234 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.262910492 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267175311 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.266878355 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267313025 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271134631 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.272479832 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279112182 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.287359212 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269137989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.270478509 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.267585631 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270167181 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.272049682 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.261694355 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.266589198 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261505268 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263804007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267180481 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.267382479 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265724226 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268122364 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27032384 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268033215 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270759827 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.264911076 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.272161227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268943402 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260175638 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265646869 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26715861 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.26327857 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.264388671 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.266111266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.264870094 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.267649304 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.264363437 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273873033 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.262834914 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26826108 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26864594 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.264969904 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.268407656 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268140438 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271493791 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.269760857 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273014206 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.285386439 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.267667852 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.277343091 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.284696138 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.267263242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269365006 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269109636 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264155843 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269865276 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.278282948 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271605674 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270500792 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.273583148 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26696804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269627452 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.272315286 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.267210428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.267761639 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268975607 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.27070161 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.265336994 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269228354 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267524289 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.270476368 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272316479 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272112505 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.268885479 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269605495 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.269945061 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268925145 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269225085 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275769295 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.282143521 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273268259 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.269146615 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271123396 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272552736 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274863667 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.266946355 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268740792 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.26664482 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282271935 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293512711 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276313443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290811584 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.268431281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273130023 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.290810584 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.272087412 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26895614 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.269909543 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267606794 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.267422211 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269064552 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27203357 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270002154 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270026948 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.269578764 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273184264 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.269225446 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268175591 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269588448 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269531307 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269723104 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.268714221 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.269021515 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271064416 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270584036 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26942004 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269633833 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275804288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289910649 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.270312556 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268639572 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.268881917 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.268851223 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.269953767 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.269807076 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.274235921 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.277614147 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274576893 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.280860246 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.271821185 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.27971465 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.270644715 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.273694836 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.278622264 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268902069 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.269174486 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.271137922 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.268779411 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278322062 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.291235469 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.272453863 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275533257 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273187927 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.271343268 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.271456513 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.269988011 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271236714 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.270521085 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.278927661 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.293544812 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.27462931 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271891541 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.268045661 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271585918 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.271005722 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270929515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273573823 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271887102 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.272564525 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.271236108 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.271370785 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271919533 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.270981364 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.273912918 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.269672934 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271402245 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.278782981 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.292723449 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275391175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274111265 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280225872 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272014827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.279448144 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.292192656 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273865977 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270703971 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272715065 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273388513 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271994558 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.273792384 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272345766 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274449416 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.27625831 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.27303056 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.274346018 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.273276265 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.273870456 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273801712 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282994798 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.298170372 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275896231 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277643899 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.270563359 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274744913 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.278259645 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275389243 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.273436881 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.276865049 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286028068 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28361935 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277027117 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.274912339 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275793494 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275236693 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.275608447 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.275768778 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.275752979 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.275737146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.274483304 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275117428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276940005 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.274838073 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.276048736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.276135922 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.276909239 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.284890828 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.274592694 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.27701172 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275302883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.276681641 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.27530939 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.276662139 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.275654937 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277013238 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275446814 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.277205908 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.283519667 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.282917217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2772168 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275127386 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.275375271 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.278314969 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.277357899 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277116693 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.276524059 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276654743 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.277670761 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.275821324 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.276147869 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.274412168 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.276508869 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275759956 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.275549951 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.280009717 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.283806657 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.276652831 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.273979367 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276410765 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276950414 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.275107421 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.277999973 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283474747 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280817859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.288220509 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285879218 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.281201093 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277359838 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279959608 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.285451517 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.275358343 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.278826324 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.277327471 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.27889568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276800124 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.281562397 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278558912 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.284185344 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.276880303 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.276567802 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.28652833 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.302045083 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.277493527 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28106123 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.283361514 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.277318689 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.274958318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.278499838 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.279861315 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.284913246 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.298972677 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278166301 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280091334 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.278264437 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.281532916 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282025199 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278141238 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.278763909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.277360342 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.278492566 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278731451 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280274519 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.276477846 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.279248837 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.279476788 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.282720881 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.286760291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.276851993 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.280426107 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.279918858 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.281158183 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277257879 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278858942 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.277002268 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276689255 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.278524757 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278434252 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.280532627 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.279911103 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.27766564 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.28128011 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.281028354 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280378624 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283334129 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.291160941 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.287011024 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.277602914 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.279405263 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279616687 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.281970819 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.279501551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.280034545 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.280901767 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.282164773 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.281335821 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.280264422 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.282284878 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.284627979 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296163918 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.302109023 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280602115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.282332601 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28227497 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28182771 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.278347225 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.28167552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.282279553 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.28445553 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.288990802 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.281590968 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287553443 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.301285709 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.283077189 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.286121526 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.285646962 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.290302864 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.284370645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282683357 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.281826978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.288036762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.298828817 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282181711 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.292701078 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311531202 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.303006196 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.281506632 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.280815232 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.282481051 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.283267029 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.283765811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.281837191 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.283345961 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283768051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28205677 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.284167164 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287547634 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.283037816 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283796962 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.28309137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.282587613 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285342528 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279477827 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.281963601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282300594 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.282427932 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28362675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.283636301 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.284296631 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.295977005 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.310725833 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.283835238 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28417674 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280824541 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.286769719 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.287384822 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294154859 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.293178118 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.285025406 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.284297316 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.28545672 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283502013 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.283811846 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.284423196 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.283137941 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.284515856 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.281407956 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.296709979 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.311703358 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.289227942 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284899042 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284685166 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.284817336 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286381547 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.284222019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285118248 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.285171643 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.2889476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28840291 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.284648785 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.284337746 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.287870305 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.292769127 seconds)
  done (took 759.576036689 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282375925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.282547177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282613437 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.28256482 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.283550141 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283033792 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283132152 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.282701385 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.283360197 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.283888017 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282562833 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283201889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283763994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283209979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.283678475 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.282987526 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.284759274 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.283584031 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.283479439 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.283974711 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283326314 seconds)
  done (took 28.14935768 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.285385593 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.283405526 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28290445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285847544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284347022 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.28622004 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283714887 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285785986 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.285568274 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284296746 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.287241419 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.287165375 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.284900922 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283437215 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284504862 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287031051 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.285799848 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.284268511 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.287992432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.285014901 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.287699063 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285292531 seconds)
  done (took 29.480707878 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28679803 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.288319765 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.288107325 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.285360359 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.287890927 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.285011204 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.289168884 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.288098157 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.288598768 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.289060948 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.286472851 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.29076142 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.296901457 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.293556434 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.289585724 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.288661682 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.287415825 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28909478 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.289762008 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.287005356 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.293229529 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.307163677 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.28665505 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.287276499 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28832237 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.289909363 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.289648504 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.288472799 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.290936919 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.293622697 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.2896351 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.290081602 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.291719129 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.288234179 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.291017162 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293441451 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.289169851 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.286252806 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.289315892 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.299122378 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.313831031 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.290148473 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.296441656 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.310733076 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.28943492 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.294829602 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29797305 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.288670372 seconds)
  done (took 63.185852225 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.290408708 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.289764359 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287664579 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.291001711 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.290486969 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.290388395 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290911076 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291531365 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.288517143 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287859502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.289949962 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288749514 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287921397 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.289927979 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291449741 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288867543 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288299724 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289628814 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.289644106 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289282894 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.289256232 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.29293058 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.291559978 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289728574 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.29081628 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.289648124 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288614937 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291021693 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288469618 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288066572 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.29167669 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291686374 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.291676351 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.290627836 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290057054 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.292527786 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.293514036 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.290558789 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293356354 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289773615 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.292407463 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.292031592 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.293932725 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.293889039 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289100874 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.289916643 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290168712 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289952445 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291391747 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.292309112 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.293348366 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.291245649 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.294636967 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291920428 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292520411 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.294581668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.291846903 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291320731 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.294259305 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292090161 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.289670997 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295028939 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.290749356 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.293061133 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.294093932 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292077111 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291897821 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.295246822 seconds)
  done (took 89.001618157 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293957346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.295047172 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295280132 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295503298 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295948541 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294300919 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.294924161 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.294675096 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295472639 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.295457879 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295099604 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29685495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.294990169 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295753263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.295252791 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296089837 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.295458579 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295006393 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.295568485 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.295209169 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.295230079 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.297153767 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29588052 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296035019 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294899538 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.296051863 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296305242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29575195 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296961462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.296618438 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2960313 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297105355 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297024294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297232978 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.297646104 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295577359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295872172 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296571954 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.296584512 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.297664381 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.296863816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296645617 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.297150944 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.298008225 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296574157 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.298509005 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296792794 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.298109858 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299208738 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297890994 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.297710123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.297053443 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.298448041 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.298778152 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298554756 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.29893714 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297753609 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298324644 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299113194 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299499655 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.29959007 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.299216158 seconds)
  done (took 81.603853092 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29932661 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.298680874 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.296477897 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.296553871 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.298576452 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.294399748 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.298281476 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.297528893 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.298517009 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.299078226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299218548 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296415518 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298397936 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299686529 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297481206 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298435052 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295742926 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297140168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300128183 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297281552 seconds)
  done (took 27.171635994 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.297426871 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.29981743 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.296692664 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29703184 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.299700437 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298033855 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299334496 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299527493 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.296703877 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299099372 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30084863 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299162861 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297241755 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.297523454 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.299977422 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298212642 seconds)
  done (took 21.990953905 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297173453 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.300289728 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.300666201 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299451123 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.297616542 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299269874 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.300881089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297575483 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297778732 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.299912584 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.300922508 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301267088 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30205755 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.301523068 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.298944665 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.301585576 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.299117468 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.299165387 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.302631671 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.301828453 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.300762359 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299372205 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301725984 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.302454582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300665882 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300515478 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.300262432 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.299866177 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.299229727 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.301884269 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.300089204 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301514174 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298749349 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.299531107 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303090802 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301607453 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.302984057 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.304209067 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.303344485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303436921 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30302291 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300462658 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.303984082 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.302519001 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.301098629 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.302439501 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30105168 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300768391 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300873976 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.30151029 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.303949952 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.303271656 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.304514834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304445577 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.304214715 seconds)
  done (took 72.779664174 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303439306 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303936895 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.3034984 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.30314312 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.3041977 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30143244 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304669534 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303404099 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.301972427 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304725109 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.301713045 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.305218238 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.301958964 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305545249 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302010953 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.305500532 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.302511001 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302583312 seconds)
  done (took 24.67872172 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302718243 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304331622 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.304202754 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303103579 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.303450816 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305626136 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304231821 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304707198 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304566363 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.303618745 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302580142 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306031747 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305451896 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.306610448 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.303040138 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302948113 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305398798 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305358777 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.303190053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303545701 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.307036602 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306821506 seconds)
  done (took 29.91803136 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.306122261 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.306504411 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.30501966 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.323096669 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.325438908 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.306059214 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.306326494 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.307621207 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.329513524 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.361074294 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.354314547 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.327083115 seconds)
  done (took 17.08005552 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3046413 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307085196 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30558249 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307540029 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307802014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304139082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304734329 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304616462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307647124 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305221076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305994655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308266966 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308487465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305011293 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308553789 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307291291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304606381 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305621947 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305075454 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30788521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306006138 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308178251 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305149921 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304873197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305328876 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307894018 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309009031 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306924125 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305499707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308159563 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308939557 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306602119 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309349008 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30653443 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308698633 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309887551 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306851165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309871528 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309088947 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306804268 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309054067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310466034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309488869 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306772439 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310447348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307638423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308198502 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306856845 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306568257 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30962977 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310123319 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307778857 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309702958 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310504354 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31047312 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310420168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307616108 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307689713 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310113213 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307717162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308949391 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310677797 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308021209 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308910108 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311487024 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308117789 seconds)
  done (took 87.532481893 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308408701 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.308039321 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307905966 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309443908 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309017688 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309460055 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308182552 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308838044 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309359815 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308908615 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310668784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309349163 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308284155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308411338 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309824159 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310019013 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30802051 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310409273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309867207 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312511859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310440795 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310167165 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308841958 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309240159 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309668228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311850254 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309146052 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309875798 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310121784 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309139906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309412914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311190739 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31030782 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309585529 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309967907 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310968445 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309249394 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310183237 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309905904 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313821792 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310840114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313435254 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311854713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310630757 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311346192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312214114 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312044641 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310347435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311813477 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312441501 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312304514 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311879145 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312430352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31095554 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312849361 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312210073 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311272539 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312690881 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311665393 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313814787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310671445 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312395183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315908062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312635764 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312253063 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31267852 seconds)
  done (took 87.731067871 seconds)
done (took 1777.885281892 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.475791281 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.43024262 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313642816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.31850366 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.31629093 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.307872215 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.326742248 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.314695288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.314149934 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.315390663 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.314018825 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503710996 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.309056195 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.314377997 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.313793765 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410076466 seconds)
  done (took 26.828770491 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.344202413 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.321419175 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437200536 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336075961 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344893988 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.512074752 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.374102313 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31955578 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.495563084 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.362538131 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.310658043 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.344611574 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.319879861 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.310192457 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.339515843 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.510869845 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568440893 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.31482233 seconds)
  done (took 29.097814365 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785520707 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.310848917 seconds)
  done (took 5.327479544 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.340971793 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.321391502 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322269684 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.319763316 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.310652346 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.311052682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319892091 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.315999511 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.311511309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465487266 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.321609298 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329922078 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.33951459 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32163151 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.317070214 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.35953844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471876497 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.318740914 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31718266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.325524793 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321067243 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404956042 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.362410935 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.318102409 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.449656413 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.313822276 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.32317956 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.329145385 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.455729972 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.322012633 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.321315516 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.321987169 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324020398 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.237378196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782661847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.315922868 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.347647076 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33088634 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.319100897 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.462373579 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.324429269 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.328569654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.315117162 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75967021 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.469747867 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.440883829 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.333633297 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.341710641 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.324390138 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.385638169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.323528556 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.324877443 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.368238486 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.123200059 seconds)
  done (took 84.531743873 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.363029638 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.315624031 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494774091 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.336587453 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314675388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.314591505 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.332962362 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612744023 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.352474822 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.315118461 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.603605307 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.878128251 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341619734 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.353753522 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.159074435 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.392634185 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.325252581 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.316133135 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.332846252 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.321366922 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872528756 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317449523 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.314843719 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.471665334 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.355465343 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.82346764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319165638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.327170241 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.319247587 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.315856868 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831720454 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.33183368 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.371492473 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.316109931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.5827022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.698192806 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664051358 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315498707 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.355426144 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316731643 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.333804624 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820776033 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.680857571 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31603583 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33138129 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827362499 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317124042 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.324054416 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.327370327 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563681342 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.316001178 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327194133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.314991859 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.316837502 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.317575391 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.417131001 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.38236121 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.821766921 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31725302 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.317821521 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.358431031 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.317303091 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.320911526 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321948732 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.318887073 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684404144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.483518499 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.32025926 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.681163644 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.827416462 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.333903194 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92133815 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.333666102 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.336904216 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.33020209 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318860953 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335790585 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.819975299 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.332702656 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319693309 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.667651704 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.322139851 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.608929251 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337074839 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320225735 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883693637 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.336883809 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.320830675 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.318859321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.336634999 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.33622927 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321568422 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.606817897 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.396332001 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318565257 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.321568532 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.331128716 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.319634267 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.320246235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.326676302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906199137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.33626846 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.317830704 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.320062103 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320452578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.324818431 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.32110504 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318510342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582613841 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320405363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.331045357 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.321877606 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.319800741 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.342006921 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.463413631 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.328026497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.637870116 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.323004608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320377556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.32442202 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.320462679 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.356445232 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.320882328 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.32399827 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.261493407 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.625599501 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.339217101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.32124201 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321902394 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.321870344 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340349278 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321655401 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.345774423 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.326218547 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082940557 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.365615811 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.347643836 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.321690419 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.325923371 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.328820059 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.324099892 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.321626113 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618368881 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.595268349 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500185217 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.325116133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.321982807 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.066417153 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34992512 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.501279405 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342683426 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.322490382 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.5698603 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.523730927 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.322340204 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.323859235 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.324658648 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578944377 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.323727506 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.645766306 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866290573 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.346488206 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.332229107 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.082182885 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.062533288 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.325766735 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.32513645 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602671594 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.342599413 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.324049646 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.323106817 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324954256 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.342075832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.345542565 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.328206313 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.324100128 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.32377937 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.458486588 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513729183 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.342542287 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.327394096 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827512197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.324777668 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.323049291 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324058327 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.325286601 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.324894744 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.409381994 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.326901512 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.327313941 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.332128419 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.330943194 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903045411 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.32512589 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.331660978 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.515379568 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016400617 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.346115674 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.342595101 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.324678025 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.207544691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853242883 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.33940338 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643727041 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.327921186 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.366326753 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.326296384 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42704831 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856714012 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.328090304 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.325861281 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.979743832 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.343498568 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.873160939 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.325113156 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.342953152 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91690796 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.345772328 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.33210509 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.326524834 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.3292077 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.667037431 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.327645386 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.356502434 seconds)
  done (took 495.917948476 seconds)
done (took 642.933009879 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.328318421 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.32855107 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.321002275 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.331433685 seconds)
  done (took 10.556421381 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.33651149 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.332155208 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.33181838 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332583166 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333388578 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.332207793 seconds)
  done (took 9.244593656 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.323987682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.325683724 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.333159467 seconds)
  done (took 8.229436816 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541681961 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.345758992 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669060583 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.350336496 seconds)
  done (took 9.152706059 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.333497895 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.332762311 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.33355195 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335617957 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.337273758 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.336862222 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.33422477 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333548578 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.338183877 seconds)
  done (took 13.258227555 seconds)
done (took 51.687072436 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.312799224 seconds)
    (2/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.329958449 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353381992 seconds)
    (4/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.319909447 seconds)
    (5/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.113567563 seconds)
    (6/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.331550548 seconds)
    (7/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.325126796 seconds)
    (8/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.20443596 seconds)
    (9/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.31404799 seconds)
    (10/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.962722623 seconds)
    (11/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.854138657 seconds)
    (12/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.585549147 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.414975025 seconds)
    (14/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.329980066 seconds)
    (15/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.088690672 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.369511788 seconds)
    (17/286) benchmarking ("sort", Float32, true)...
    done (took 2.328330992 seconds)
    (18/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.325941266 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.354081642 seconds)
    (20/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.319309328 seconds)
    (21/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.409403235 seconds)
    (22/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.314367396 seconds)
    (23/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.338769456 seconds)
    (24/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.561811622 seconds)
    (25/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.150514785 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.321408368 seconds)
    (27/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.524994675 seconds)
    (28/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.346061785 seconds)
    (29/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.315475253 seconds)
    (30/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.455495948 seconds)
    (31/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.33003874 seconds)
    (32/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.351552568 seconds)
    (33/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.324814757 seconds)
    (34/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.317843065 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 2.335004078 seconds)
    (36/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.317150199 seconds)
    (37/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.442036955 seconds)
    (38/286) benchmarking ("sort", Int8, true)...
    done (took 2.330570393 seconds)
    (39/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.316360003 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.456043748 seconds)
    (41/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.323893737 seconds)
    (42/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.360179513 seconds)
    (43/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432215147 seconds)
    (44/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.326006814 seconds)
    (45/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.356788217 seconds)
    (46/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.318579719 seconds)
    (47/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.520557202 seconds)
    (48/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.317112858 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.438565916 seconds)
    (50/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.332252241 seconds)
    (51/286) benchmarking ("sort", Float64, true)...
    done (took 2.335545831 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.592780231 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.251161318 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.333230048 seconds)
    (55/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.317885046 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387976213 seconds)
    (57/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.47764205 seconds)
    (58/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.451833018 seconds)
    (59/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.72834268 seconds)
    (60/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.435689826 seconds)
    (61/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.965284846 seconds)
    (62/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.360976963 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.336786968 seconds)
    (64/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.333247215 seconds)
    (65/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.36005947 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.334882589 seconds)
    (67/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.320132526 seconds)
    (68/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.336309606 seconds)
    (69/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.332471881 seconds)
    (70/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.330460798 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.318678647 seconds)
    (72/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.710946069 seconds)
    (73/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.702647468 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223578548 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 2.332517726 seconds)
    (76/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.319890758 seconds)
    (77/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.416177501 seconds)
    (78/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.35252363 seconds)
    (79/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.334963077 seconds)
    (80/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.31925846 seconds)
    (81/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.338277953 seconds)
    (82/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.687314867 seconds)
    (83/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.324756117 seconds)
    (84/286) benchmarking ("sort", Float64, false)...
    done (took 2.330127484 seconds)
    (85/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.34333474 seconds)
    (86/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420042923 seconds)
    (87/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.440781602 seconds)
    (88/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.321319099 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.735041808 seconds)
    (90/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.434204716 seconds)
    (91/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.366104754 seconds)
    (92/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.365734696 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.369793751 seconds)
    (94/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.546870259 seconds)
    (95/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.392289064 seconds)
    (96/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.320466931 seconds)
    (97/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.367372973 seconds)
    (98/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.334560367 seconds)
    (99/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.343416809 seconds)
    (100/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.181296193 seconds)
    (101/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.339865647 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.309619261 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.471825451 seconds)
    (104/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.358878253 seconds)
    (105/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.334513011 seconds)
    (106/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.16684136 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584130019 seconds)
    (108/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.339994076 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.34223677 seconds)
    (110/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.48141075 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.854002041 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357482206 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.165281017 seconds)
    (114/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.974867491 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.618062064 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.321198237 seconds)
    (117/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.117576184 seconds)
    (118/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.595793112 seconds)
    (119/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.604646353 seconds)
    (120/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.323457497 seconds)
    (121/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416839136 seconds)
    (122/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.95714583 seconds)
    (123/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.327677592 seconds)
    (124/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.328635276 seconds)
    (125/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.443492185 seconds)
    (126/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.343448046 seconds)
    (127/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.447101453 seconds)
    (128/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.67907464 seconds)
    (129/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.341363796 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.141043554 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.36102798 seconds)
    (132/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363026634 seconds)
    (133/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.3375116 seconds)
    (134/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.422542503 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.669727558 seconds)
    (136/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.378476417 seconds)
    (137/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.238979319 seconds)
    (138/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.341631466 seconds)
    (139/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.324541675 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.323461697 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.323253488 seconds)
    (142/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.679345348 seconds)
    (143/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.400406717 seconds)
    (144/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.421842964 seconds)
    (145/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.329511011 seconds)
    (146/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.35071301 seconds)
    (147/286) benchmarking ("sort", Int8, false)...
    done (took 2.336197367 seconds)
    (148/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460875727 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.96213514 seconds)
    (150/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.342913732 seconds)
    (151/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.486808429 seconds)
    (152/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.866257866 seconds)
    (153/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.356556832 seconds)
    (154/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.341832711 seconds)
    (155/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.425630746 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.340998044 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.343372818 seconds)
    (158/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.379950769 seconds)
    (159/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.828376332 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362436203 seconds)
    (161/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447838397 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.205500889 seconds)
    (163/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.356901297 seconds)
    (164/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.805415093 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369354911 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368786707 seconds)
    (167/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.351844727 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.384886668 seconds)
    (169/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.329023871 seconds)
    (170/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.350921869 seconds)
    (171/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.331125127 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.755396543 seconds)
    (173/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.115245642 seconds)
    (174/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.349331601 seconds)
    (175/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.469979708 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97699677 seconds)
    (177/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.330343723 seconds)
    (178/286) benchmarking ("sort", Bool, true)...
    done (took 2.342812804 seconds)
    (179/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.400263336 seconds)
    (180/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.368986593 seconds)
    (181/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.36814232 seconds)
    (182/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.450427778 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.470184423 seconds)
    (184/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369535289 seconds)
    (185/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.492051328 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.275068709 seconds)
    (187/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.405784918 seconds)
    (188/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.344480607 seconds)
    (189/286) benchmarking ("sort", BigInt, false)...
    done (took 2.343843132 seconds)
    (190/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.342753507 seconds)
    (191/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.555319579 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327331646 seconds)
    (193/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.331404984 seconds)
    (194/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.921649456 seconds)
    (195/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.337550408 seconds)
    (196/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.366340648 seconds)
    (197/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.268367745 seconds)
    (198/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.348865796 seconds)
    (199/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.343540848 seconds)
    (200/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.367011054 seconds)
    (201/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.341902445 seconds)
    (202/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738223525 seconds)
    (203/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.447736341 seconds)
    (204/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.428837584 seconds)
    (205/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.879585865 seconds)
    (206/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.345316711 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.364175282 seconds)
    (208/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385886962 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.273510328 seconds)
    (210/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.371778619 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.918064685 seconds)
    (212/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.339519487 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.354180621 seconds)
    (214/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.178593138 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.117700465 seconds)
    (216/286) benchmarking ("sort", Float32, false)...
    done (took 2.362246487 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.277475019 seconds)
    (218/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.355877841 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.333866473 seconds)
    (220/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.210182497 seconds)
    (221/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.694159965 seconds)
    (222/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.151272116 seconds)
    (223/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.351897295 seconds)
    (224/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.333805473 seconds)
    (225/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.334320503 seconds)
    (226/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.428536493 seconds)
    (227/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.364066122 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.343839422 seconds)
    (229/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.44991605 seconds)
    (230/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.354968974 seconds)
    (231/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371890438 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.35010925 seconds)
    (233/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.333177871 seconds)
    (234/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.381663099 seconds)
    (235/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.251969259 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.582589652 seconds)
    (237/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.370984807 seconds)
    (238/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.389233342 seconds)
    (239/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.335096499 seconds)
    (240/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.250310168 seconds)
    (241/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.368114222 seconds)
    (242/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.225891103 seconds)
    (243/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.335958626 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.373925786 seconds)
    (245/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.372740781 seconds)
    (246/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.462532726 seconds)
    (247/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.349819507 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.737060762 seconds)
    (249/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.343469922 seconds)
    (250/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.110535972 seconds)
    (251/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.335014792 seconds)
    (252/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.336095502 seconds)
    (253/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.397120787 seconds)
    (254/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.34757064 seconds)
    (255/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.343147753 seconds)
    (256/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.642263241 seconds)
    (257/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.336652123 seconds)
    (258/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.335649769 seconds)
    (259/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.373132141 seconds)
    (260/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.348570941 seconds)
    (261/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.351482303 seconds)
    (262/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.348440689 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432342563 seconds)
    (264/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.867778443 seconds)
    (265/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.357703364 seconds)
    (266/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.350144422 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.450066954 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.460393518 seconds)
    (269/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.346825988 seconds)
    (270/286) benchmarking ("sort", BigInt, true)...
    done (took 2.349942043 seconds)
    (271/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.352730745 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.337376626 seconds)
    (273/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.350669124 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.391301751 seconds)
    (275/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.452666841 seconds)
    (276/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.143222992 seconds)
    (277/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.343232666 seconds)
    (278/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.340567381 seconds)
    (279/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.368759089 seconds)
    (280/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.33751307 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.371514793 seconds)
    (282/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.347535425 seconds)
    (283/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46765371 seconds)
    (284/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.479467674 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.686149837 seconds)
    (286/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.379556438 seconds)
  done (took 569.130581007 seconds)
done (took 570.376397931 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383383635 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394723538 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.363691831 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.383612917 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472896062 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.537430186 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.370769916 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.363445039 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408853847 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.411212962 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.358408745 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.535721833 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.361050235 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361252911 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.362097596 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39014979 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35959542 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361176975 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377556288 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372866587 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377892819 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360182019 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.412308675 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.536357866 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.367060229 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365038472 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366151362 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381610977 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474075334 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36668677 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.36459193 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373304752 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.363448302 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.362102001 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.358548519 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.382229781 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.374924931 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.374060741 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.366575913 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393489351 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.361181633 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.359667108 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365146504 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.365087371 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.3644986 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367510647 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364907169 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370777874 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392670345 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394556502 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.354209604 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.378909551 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.368244012 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.36554391 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.374869135 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364279796 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.369279092 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.396610409 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.3837311 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39675113 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.354129769 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.369220865 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.366512167 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.379521708 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369895511 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.357759501 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.360421703 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369813452 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.36662393 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.369792333 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.358437476 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371344315 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.367977228 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.378463162 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.395087927 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.364943641 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.359996531 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367957235 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.37154965 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.364559436 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.376493734 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.39258185 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371981405 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.367104414 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394093504 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.54231293 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.3777703 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.366891373 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.378379823 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.386043281 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.37244924 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.378502579 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370982452 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.363875956 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.37672521 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.369702539 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.371504373 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371007493 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373084861 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.378813528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.366555543 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.400512007 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.364674941 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364850919 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.367537012 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380564464 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.368406721 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.368095795 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.391638577 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.41712452 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.370746006 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.357262339 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.371337518 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.399751771 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.379474213 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.37391157 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.36492708 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.357693614 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.362180764 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.383384508 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.371996638 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366915904 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.401179571 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372395908 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.366397988 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.368631619 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.371187115 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399065839 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.48931485 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380413503 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399515514 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367200513 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.373938743 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.400178784 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40105254 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.401484385 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.373949234 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40253032 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385621431 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.368426989 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.378826444 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.382845881 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.372166784 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.375938911 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365369225 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.403139963 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.398084461 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.398591435 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.392147011 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.488841344 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368904 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358934589 seconds)
done (took 227.38295157 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.427976562 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.366229913 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450750968 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.367583545 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.466243343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466332962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.366033408 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.365999041 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.364994042 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742182792 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.366145687 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.364916517 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.366491476 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.36544932 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.449255185 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368012562 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364354425 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705332628 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368439636 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.440858538 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365468882 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.365976454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.367595676 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.751210367 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.367716073 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.362248281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.441157396 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369640961 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714880345 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.362880046 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366480931 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.71313964 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45885145 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.385816147 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378092572 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376380378 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.470813155 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.386649036 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.449914401 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.449470845 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.451696499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408302006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364378112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.367571338 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370745347 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.370063665 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.368140315 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.396924866 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.367368364 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367231963 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707563972 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379725742 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.377160152 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.367681153 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368030035 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.388260473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368828792 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37019344 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.460779399 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370059378 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434113169 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.751659952 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.744460235 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370544224 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.368624294 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.370459077 seconds)
  done (took 106.758317996 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.437152922 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.447112456 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.485416874 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390152215 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424219232 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491595818 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388307906 seconds)
  done (took 11.343866608 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377776948 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.373694218 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422667572 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.42306768 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.371694609 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.58269514 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372363629 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383006076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.371334066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.449596787 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.372824496 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375287862 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.379446242 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.369912892 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.420898846 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.385372747 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.48722108 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.375529128 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374469172 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.524330726 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370734323 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.379942742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.446772465 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.385142133 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.374974581 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379608688 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.291987996 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.37407512 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372204212 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373878878 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371644431 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.476047576 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375085881 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.371619312 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373147559 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.536387419 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376759448 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371561944 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375217254 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.373916255 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.375692609 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375704906 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.375690658 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.371538524 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.375302599 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39742687 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.375901055 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374420628 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.374751314 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375849203 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.449806612 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376432757 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371616756 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.372736134 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.455550607 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382160854 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.377509283 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373563117 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.377741382 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373352445 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527755773 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423386077 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.377249085 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422813429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.37801322 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375994389 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.375853684 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375945571 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468746909 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.376524875 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.425789068 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373040111 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597223162 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.40066921 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378349357 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.377711984 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380714731 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376523039 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.375276132 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.384002152 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.376736909 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378801358 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382037105 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374350959 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.37532922 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.559989069 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.536136451 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.375238451 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390859754 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385965018 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.37763684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.453144135 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.379108514 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.376296213 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430996666 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493849748 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.454936268 seconds)
  done (took 142.183116007 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.382912299 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.386980683 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382459507 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400196685 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377336455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379030345 seconds)
  done (took 9.59659456 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.380270009 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.380860382 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.378310212 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379922252 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379364296 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.383056402 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379826292 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381459359 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384359538 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380184241 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.380577768 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.379569501 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381162462 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.380227506 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380903381 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380853287 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381572181 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.378763664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.380888057 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380213823 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.380346251 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.381695234 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381296786 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.38204362 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.385121391 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.381702311 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389387813 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381229869 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382158737 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.388389039 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.400671228 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.381623707 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.383814371 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.388307366 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.386556146 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383500105 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385784121 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38150218 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379772921 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.382679153 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382935685 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382579423 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.383528506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383556835 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.384474147 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.388208578 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388383028 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.391040214 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382051813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.38448585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385647157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383468483 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382806358 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383409541 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.385842434 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.405254392 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.389057311 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.385369192 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.384234834 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.386344527 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385796061 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385328203 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385481503 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387096573 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381600516 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.383876437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.386226036 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388065571 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385275806 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.38446611 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384959504 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.381743243 seconds)
  done (took 101.932134715 seconds)
done (took 373.09062655 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.849335517 seconds)
  done (took 4.14242542 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.494604399 seconds)
  done (took 3.788920907 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.370232464 seconds)
  done (took 23.666849957 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.424467567 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.467740153 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.388142641 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.382430968 seconds)
  done (took 10.953555041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.640914319 seconds)
  done (took 3.933265984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.37642505 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.397726008 seconds)
  done (took 6.068014376 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.706186083 seconds)
  done (took 3.998829584 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.791490948 seconds)
  done (took 4.090932533 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.39881247 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.393377004 seconds)
  done (took 6.094566319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.37258672 seconds)
  done (took 3.664977165 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.424028173 seconds)
  done (took 17.717298142 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.392454213 seconds)
  done (took 3.690806888 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.40165712 seconds)
  done (took 3.696465428 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.134303162 seconds)
  done (took 6.429586206 seconds)
done (took 103.229222012 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.378834111 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.384603517 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.381677472 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.379898904 seconds)
  done (took 10.819218678 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.419561907 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.419531662 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419568246 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.430506242 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.422544073 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419802707 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.426440849 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411090307 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430023678 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422499633 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.422280561 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.423978421 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419789571 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412238254 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.422667234 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421978085 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431360764 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420704903 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.412530392 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.424487246 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388060354 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.432097487 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.423993922 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.387467533 seconds)
  done (took 35.36255317 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.907549537 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.459288005 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541191942 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.439077766 seconds)
  done (took 7.640923531 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438541862 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.44061484 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.454047205 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492577356 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.518101467 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.451146971 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416638649 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408311502 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.395488362 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442873162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.516412462 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457305809 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.526624217 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.391068687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.574482505 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.390335181 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388169992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.443132241 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.492509078 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.514977195 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388820128 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.441132569 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444198808 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.45773893 seconds)
  done (took 36.182717992 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.389130173 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.406932605 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388308289 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387221407 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.394756529 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.389442779 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38867493 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388189831 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.388769143 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.394053124 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.388504922 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.400288629 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388012047 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.388146149 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.394647296 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390713042 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394941954 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389491395 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.389723099 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.395155126 seconds)
  done (took 29.132895021 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.380766033 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.381350318 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.73216644 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.638725314 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.381637381 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.381638236 seconds)
  done (took 14.195109813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.465727773 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.625869331 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.389211783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.769243353 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.847302863 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391071698 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390085163 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650071817 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.99143455 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.981649986 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451164401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461403821 seconds)
  done (took 20.713283208 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.396509644 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.387659459 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.401574818 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.404591212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.448014341 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.411520008 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.397042989 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.383054806 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.455589731 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.470614415 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.412328931 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.450166836 seconds)
  done (took 22.320250688 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474434906 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.385162154 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.384635414 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430780916 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39031635 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597850874 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.437839625 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.122754647 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.408959395 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659475261 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385745007 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477009086 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642268883 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386460387 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.387298175 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.37231935 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620056145 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894355513 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387373694 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386021959 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419041918 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388735131 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389854809 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620978459 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387197499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386387249 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.647507279 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386486806 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693768819 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407469929 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397315651 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386406526 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660926098 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068638685 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504099498 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613181297 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405686939 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389400938 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.379839195 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.394535738 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401394372 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395526453 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398656257 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389850067 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.388413332 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388016047 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132594731 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.414177188 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.38495652 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388889032 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669287251 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492796433 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.392363885 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388803314 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396347497 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39177342 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392761026 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484265402 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95895444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392876404 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399797346 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.397389163 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405102629 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390556937 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052297741 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395690573 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393966449 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39342015 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389749995 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390830161 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414744556 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389777205 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416717651 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391116848 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145409906 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394590896 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391067872 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958357924 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405363204 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.389957855 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619042449 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391659188 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389934056 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.389723556 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392201683 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149491866 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407804256 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.376075353 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421021356 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147800434 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639405947 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409746903 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417498634 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615565945 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.378032936 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392298935 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.392704197 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392775178 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413696972 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.13970097 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412226394 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.395599531 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649087024 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603683842 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391886138 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.393411433 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907708799 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42731071 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.407240005 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399308789 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619930759 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.011628749 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409606306 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392818419 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417172352 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392282268 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184629037 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402824748 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.512441187 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392722375 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697685173 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.23095621 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401568947 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461002049 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398654375 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.394183386 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399841068 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403589195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394699898 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.614779283 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421537489 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.41199902 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.393801181 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394549067 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.394041408 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407301097 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.402032929 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618745385 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403520308 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678474364 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395817073 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394897572 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393691946 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617879323 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.406223251 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.740367102 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655425651 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394666304 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398096652 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409579976 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414394257 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496408033 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41956842 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.402856061 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.653347005 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398905747 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399226849 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402615006 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404573108 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403044451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.401110234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398363789 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023518741 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377251799 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.398069319 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.286648011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.412015547 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4652646 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402844449 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626396769 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.410119681 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401371883 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.402344883 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.394526171 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622561345 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406034454 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398896839 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486835452 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.900938293 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045049829 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419094726 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.395908265 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.395404935 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.396323842 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397301436 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39716644 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398252486 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.625205396 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413601717 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420007643 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031000462 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408068634 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404805029 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.411647942 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412224733 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.406257241 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3983624 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396780139 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407722331 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408718946 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.417324757 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543888556 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.413036121 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.398966943 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916735378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407095258 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400915973 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39881246 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43629965 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407245356 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243892341 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660463721 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413200596 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684978356 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412688512 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.424437663 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.39727886 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400781975 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418813455 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.421570424 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416263488 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.411410569 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401798367 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409559434 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96656652 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168564184 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983680835 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406550366 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.402701708 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.410037342 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.145119565 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420627616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400787794 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649507216 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160050578 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421755128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911894027 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.418824691 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23954939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689032445 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.643007291 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404241507 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.405037881 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690778759 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623116821 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437575415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406068288 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409665519 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.389968756 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99438501 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423935406 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483211593 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150513478 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437250931 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40458656 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.486169085 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422368871 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838255193 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424235241 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406844524 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406647868 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412936027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255276839 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40702549 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404122682 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064587097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420793713 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.918988708 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425637998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635506357 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.417187323 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.410809801 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.413777868 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411593385 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.662672611 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690315267 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41333121 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.419262563 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002665489 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.270402353 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413728901 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404967601 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200605467 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419432131 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725804198 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.427694731 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.410561058 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407159246 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406113406 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407537455 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.405155449 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408208012 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378202695 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919758034 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.411434412 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42485877 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407951079 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328064086 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664050438 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421482396 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.041144177 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642876465 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422544316 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431367428 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.411193726 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419268109 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.396444505 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40704641 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.645589898 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40645554 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638902898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.412146514 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.397733344 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474194712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.628357835 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.408732267 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408229863 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684368703 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.407457935 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.431893534 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200024763 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443396447 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423139738 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412705926 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.416777293 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432352618 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481170369 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641764474 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.423359545 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421825033 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847007054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430049055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430840607 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425844004 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506540261 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420721357 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.433820058 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192489654 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052064273 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206262133 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055781535 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707252251 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420924007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414249964 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411092875 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56035929 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412241362 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684844047 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412544829 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.428684504 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433455543 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42450397 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413929016 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632925029 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68661936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412502258 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418261409 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421815877 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.4113028 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42287439 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.62393926 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929970484 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987321143 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413619562 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42838292 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164626349 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706168519 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413119628 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414301212 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412175352 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.438956289 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.438045304 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.418318448 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419625585 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560143751 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699602254 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111197164 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.441909156 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.441273626 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.187155764 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428577877 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677898822 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412100787 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666360157 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058298701 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190881966 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685364547 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48401484 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647205829 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.414843297 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561559688 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.427543966 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414882328 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416468721 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259711689 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.413043942 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424894111 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058668948 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687140391 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.418938275 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.428262317 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437603995 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.426185098 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639227005 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185970483 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.647102885 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.42616346 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.41514681 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415672166 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059836027 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.714168126 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426961094 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418554947 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674297628 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415977536 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443183819 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.870215581 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.41341992 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995431615 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.38859154 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438806098 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421898638 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199860335 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071979264 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.427887023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934109031 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420074859 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416814151 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701734948 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.423479759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424819555 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701742342 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.422378257 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416310056 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677250553 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.059935313 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246583598 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.4418725 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440794134 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.429510278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419164404 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505059967 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426465824 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427586912 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.873476956 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438602124 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41941021 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430478014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.417781425 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423718669 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.425502095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417711411 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.426039104 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.430427107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.427856087 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424468868 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527797008 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012247259 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443003679 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095949817 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.750348258 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67663425 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420083532 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.433504499 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.423653453 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420428758 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420059124 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420408808 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431108003 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002532551 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.428061027 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.44557557 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427860207 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.639453086 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633370358 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.424458491 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.653432466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422184317 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443570837 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.407788048 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421069427 seconds)
  done (took 991.605097659 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.463842631 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.443346075 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.447432794 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.451983631 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481552787 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.481660907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.504801699 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.452378016 seconds)
  done (took 21.061118321 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.420634559 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.431221722 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.434515258 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.432029415 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.422256148 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.920807421 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.451676607 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.431825592 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431870586 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.428167396 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.43430467 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.153464926 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.458367628 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.42918282 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.417284278 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.43222941 seconds)
  done (took 33.470582297 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.530241397 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.628804741 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.639917724 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.449657664 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.428016041 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.42629224 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.737394844 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.444675597 seconds)
  done (took 27.620158877 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.435757209 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433791894 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.434971811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.435570202 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.435622314 seconds)
  done (took 8.510356 seconds)
done (took 1259.929175865 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.42943401 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.429926874 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.429538837 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.43157322 seconds)
  done (took 7.056280695 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.410513248 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.411493427 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.412013864 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.42348528 seconds)
  done (took 9.992239187 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.193284695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.1432982 seconds)
  done (took 5.673100189 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.426056325 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.19010844 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.161862131 seconds)
  done (took 8.114071079 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.749916966 seconds)
  done (took 3.086859085 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.83557636 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.808873761 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.623073248 seconds)
  done (took 6.604615164 seconds)
done (took 41.862691496 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.435317899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.766411644 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.581496504 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.430116211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.588427065 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.580751056 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.233213898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.423853749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.43152846 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428212267 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.425374435 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.606256741 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.143916333 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.768972715 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.142131202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.673983197 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.588563675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.428760754 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.424813726 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.427300884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.23248411 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.426686844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.425925352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432646583 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.588756669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.572774661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.437156008 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.674446702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.426821186 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.441151122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.573797037 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.429966965 seconds)
  done (took 84.530902568 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.438762419 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.427812627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.448896711 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447846607 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.441236665 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.42703808 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.450130285 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.427555408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.443087877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426434255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444424229 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.434270177 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.429137628 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.426805087 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.428832675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429904686 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.434276697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.42735916 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.445302035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.426510123 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.429067517 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427689801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.439910606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.427780499 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.436477718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.42770429 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.451642778 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.42915421 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.428073383 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.434454157 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.430042687 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.446191916 seconds)
  done (took 79.254073717 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428314466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.42883275 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428901571 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428343381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444766087 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.431087177 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.428778203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.443830807 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429684511 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.42807491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444437606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.429997576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.447854915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.43767258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.429741436 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.429847374 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.430409682 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.435507945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.428105192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437885837 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431817627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.429792898 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.446830047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.428379035 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430074465 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.438047986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432630964 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.44731424 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.436949946 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.435523024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.440545047 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.430776582 seconds)
  done (took 79.240956006 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.626004874 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.438261491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.439128914 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.394171375 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439944782 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437597934 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429884063 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.635361308 seconds)
  done (took 15.183364727 seconds)
done (took 259.545739615 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.444246516 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.431845996 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.665964744 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.461187144 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.432144087 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.4784163 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.460132902 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.663949064 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.449603308 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.685676056 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.467802709 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.455887978 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.445995946 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456841266 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.72144956 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.58666149 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.346534605 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.446270098 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.784192172 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.452146604 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.713494058 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.434045936 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.739838926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.433712539 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.442730691 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.434028052 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.45125562 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.366741072 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.477140066 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.797585083 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.442639712 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.422086394 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.534547424 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.544530055 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.660460205 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.59752149 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.434444024 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.524271203 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.670579812 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.442259584 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.433011427 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.238734157 seconds)
  done (took 85.916194962 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.440958644 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.56236458 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.440975587 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.442069206 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.441477877 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.564216547 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.54102641 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.441086452 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.442804691 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.441101704 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.440977676 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.442998132 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.44230438 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.443271171 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.441867595 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.443499563 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.44209578 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.442840621 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.443972282 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.488562386 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.568395139 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.465178506 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.436703294 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.443070465 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.546901674 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.585988981 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.440927087 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.438054311 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.486858782 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.442840796 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.445093646 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.490744231 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.443700037 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.444055655 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.565792722 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.547981537 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.467717497 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.442481475 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.561207034 seconds)
  done (took 58.841015962 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444691596 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.71246081 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.887481366 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.450884482 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.445762005 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.449299857 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.528327284 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44470664 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.447496526 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.448605167 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.6200962 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.449051769 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481209997 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.917188553 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.447716794 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.446751233 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445920259 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.44614936 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.714116156 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455248734 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.549798087 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.448090159 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.531786978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.456181264 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.46918722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.448438925 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.452986146 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.039359816 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.449954038 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.618928391 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.310882848 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.535557497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.976943565 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.899721599 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.309720494 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.456685548 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447832572 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.627288189 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44950246 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.448156848 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.532168806 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.448893327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.89975266 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.154872827 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.475736788 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.450764378 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.064550929 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.625881898 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.712243202 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459289193 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.929488026 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454562698 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.449799944 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.449739121 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712161288 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455599481 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449231715 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.081632326 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.474119751 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.531848422 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.450709239 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.450333916 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.722545681 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.450970696 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.710260534 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.458399041 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.457672069 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.468158696 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.911325688 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.458437108 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.175569834 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.477967955 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448868057 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.623736186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.711782632 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.096865983 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.452568505 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.723164545 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.993942954 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.531301887 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.454040255 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.029075104 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.5359516 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453699041 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.45170108 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.455318455 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.45001204 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501299321 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.531407864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.100955122 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.19309368 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.119541814 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.552321591 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464155352 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.453097601 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.084956464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.46850223 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450974729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.910347793 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.185339333 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.478435513 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.458385361 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17715593 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.480882278 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.537529587 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456300319 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.922142152 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.460928331 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.502901339 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452327537 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.458959787 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.475805205 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.539039651 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.456145172 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452617251 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.146545224 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.661251425 seconds)
  done (took 191.512303355 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.445465476 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.446913284 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.445354171 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.44508657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.444594206 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.45541279 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.446406245 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.446490929 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.451893821 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.447226117 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.445575144 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.446462559 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.446752566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.452615741 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.475543033 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.454400152 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.446856622 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.445072216 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.44917675 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.446941417 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.446213512 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.466582384 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.450377649 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.447894868 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.450917743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.447947461 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.45364032 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.469270117 seconds)
  done (took 65.973692469 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.457235211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.058338377 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.456470872 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.599329293 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.478917053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.453771534 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.59374315 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.516975429 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.45719283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.453885944 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.454032112 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.778786147 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.456278578 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.008994657 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.662082569 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.597026502 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007726506 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.48057724 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454190942 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.455685706 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.598909363 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.470367527 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.782670461 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.063436673 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.458027837 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.090259878 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.457422736 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4610632 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.455936318 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.091142726 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.46427096 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.794832254 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.541961659 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.524472103 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.094069 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.018774371 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027860787 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.614089748 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.457069209 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.454423021 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.455387587 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.446849217 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09374554 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.468000399 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459165883 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.089437152 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.484073751 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.460167011 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.466811075 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.456524389 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.521678873 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522133016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.804867137 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.108829658 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.549056646 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.47315141 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.600300815 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.828241525 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462405094 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013824843 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.464174747 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.096379306 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.488383454 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.450401818 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.459243793 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466002369 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.620483334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.599505891 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012413183 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.476786248 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.011187895 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.635003638 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.459503277 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.459026042 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46241322 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097804774 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.023958526 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.638223881 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603765289 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.674497949 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.463178473 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461376253 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.450783276 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.543359946 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.46182864 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.100386751 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.041267298 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.478877597 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.461687963 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.461716637 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.459642613 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.653191499 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.116013755 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.55292518 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.008174874 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.822130057 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.814870334 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.471127003 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.524557426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.478301036 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.809393267 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.472072404 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522477779 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.912833316 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.806472564 seconds)
  done (took 174.47789325 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.715421816 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.473745929 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.58135394 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.614930979 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.111953663 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.07147828 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.456217061 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.596206196 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.575205852 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.731205827 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.457975729 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.561420275 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.686973808 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.552368152 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.206136408 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535442957 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.562821417 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.619991869 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.608444705 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.457301465 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.189107119 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.779574771 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.655503554 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.478557174 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.576798827 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30073917 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.065714832 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.993551466 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.653784436 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.478265654 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.005497334 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.459419932 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.465104476 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.214234934 seconds)
  done (took 67.85985436 seconds)
done (took 645.922797298 seconds)
SAVING RESULT...
DONE!
