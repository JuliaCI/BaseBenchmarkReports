cset: moving following pidspec: 9840
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.378375589 seconds)
loading group "string"... done (took 0.511183013 seconds)
loading group "linalg"... done (took 8.558484512 seconds)
loading group "parallel"... done (took 0.174307662 seconds)
loading group "find"... done (took 1.301490706 seconds)
loading group "tuple"... done (took 1.99766848 seconds)
loading group "dates"... done (took 1.394812605 seconds)
loading group "micro"... done (took 0.205014325 seconds)
loading group "io"... done (took 0.577583582 seconds)
loading group "scalar"... done (took 42.095194954 seconds)
loading group "sparse"... done (took 13.381997424 seconds)
loading group "broadcast"... done (took 1.03342598 seconds)
loading group "union"... done (took 14.455395743 seconds)
loading group "simd"... done (took 4.879350928 seconds)
loading group "random"... done (took 9.701300245 seconds)
loading group "problem"... done (took 2.067207628 seconds)
loading group "array"... done (took 23.381001598 seconds)
loading group "misc"... done (took 1.068557299 seconds)
loading group "sort"... done (took 3.508296183 seconds)
loading group "collection"... done (took 20.876372446 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.580190568 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134276784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.146208315 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.171983743 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.20534704 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135080453 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.154700939 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.459232373 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.034988453 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.20902135 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.142675624 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.521428231 seconds)
done (took 5.649831477 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.224937821 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.072572659 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125759918 seconds)
  done (took 0.903339135 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.073512558 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.171520342 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091279373 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.108485119 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.107997561 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.089897828 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.10763878 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10754741 seconds)
  done (took 1.487726364 seconds)
done (took 3.39982199 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.761640504 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.824842161 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.495161737 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.123149574 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.153668819 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.128323795 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.302046193 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.157099172 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.118336939 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.112542388 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174522385 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.36208438 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.479733267 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.937095848 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.108127479 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128160116 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.079658194 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.702330455 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077461331 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.130770523 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.490141226 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.108980463 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.114583116 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.124752031 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.213584514 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113262159 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.181969089 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.106200673 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674249208 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.102758617 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.183573183 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.09742822 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160216853 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.22388217 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.075421563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.106532824 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679458273 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.189585747 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.108562992 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.090545942 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679619856 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.077883245 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.197392886 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104983696 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.106923268 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.187869376 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114208202 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075393902 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.098071734 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084724306 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.170608508 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.463288874 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105536885 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.141411466 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092066181 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701653661 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.093183232 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155260326 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125349607 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110232237 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.094971543 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090337987 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.16946727 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096331813 seconds)
  done (took 19.583085017 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114242613 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136940482 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.091629274 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135410687 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136865028 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.0945165 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.081565736 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09182839 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.106201493 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179789826 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13374612 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142560162 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071618336 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09336687 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114924537 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.228632004 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.11717645 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.116927477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078546149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104525185 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119592153 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109501756 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105669312 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091330106 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166633403 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20407832 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.121416459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121437717 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.075470925 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111952379 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140399468 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157798254 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072882499 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091423194 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176299389 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102694427 seconds)
  done (took 5.057848135 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195509504 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.11700921 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.182493814 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.129507125 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.178788746 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14631187 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160778142 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11420064 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259529524 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.152114495 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17932854 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126000647 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.096271375 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092366858 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07861256 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091448534 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.747905931 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14166506 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.164667512 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121172832 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101115396 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081637925 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369870739 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097808782 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076151066 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10046279 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067923625 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.186242619 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083352205 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.212108216 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.09703084 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.105952707 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128139377 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191261794 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124176252 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.114739645 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100125036 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.076905235 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.210953129 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087526283 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.092230373 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.100685711 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13090726 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134633766 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095058183 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087623682 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.238827386 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079177394 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112538664 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.02510984 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198317524 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094193578 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095298409 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.334589601 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111820348 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081183675 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.094430128 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.290483539 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081994701 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132152277 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074627381 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.093812881 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080678689 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09542085 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.395183344 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100977092 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.055314828 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079799039 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154419146 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096509281 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100899209 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083261911 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098535152 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09819201 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092935172 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077399874 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092522427 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076535614 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096980289 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095386104 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097799581 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075121262 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160528891 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114489168 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098777356 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122206916 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080968222 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.093906278 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124372575 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078356777 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07849377 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.127230039 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136821643 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100815535 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095108896 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097320921 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139551855 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076911024 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.094798702 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.188820893 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07892583 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123537943 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09884418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109724952 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.11537409 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092852978 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081834353 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.093522491 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078651123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157209295 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079295616 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077161621 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099900077 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.107630043 seconds)
  done (took 23.26463739 seconds)
done (took 48.607581711 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418081548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109345116 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107832945 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107317003 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10526188 seconds)
  done (took 1.632566742 seconds)
done (took 2.38998886 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.315969847 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.192753209 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082998202 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186591617 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08419144 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173842179 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176559433 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.097560238 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204055068 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.079436787 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163290282 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097976641 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100707732 seconds)
  done (took 2.740469351 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089534301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114318333 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.078060146 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086970526 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088798336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086330393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104260557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10697023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103337782 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081854649 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088588331 seconds)
  done (took 1.78069128 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088384686 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111743545 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077925038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086704396 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089773691 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087923758 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105537562 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099226947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106958687 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082842952 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093800781 seconds)
  done (took 1.785957092 seconds)
done (took 7.056203915 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.110383678 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.555216829 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119373457 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.166921174 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.323549296 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19356194 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61236147 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.132471847 seconds)
  done (took 16.162303649 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.108421995 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095120282 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076271466 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095550615 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09249941 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099037514 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078098957 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.097219568 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076234225 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093069901 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078243237 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094366898 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078401683 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09526863 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078478299 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07541656 seconds)
  done (took 2.22745635 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112343081 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.112705862 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101117256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085370996 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.098798219 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.080139563 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100284715 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099154965 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.079151369 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097264615 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.085714052 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101746976 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.083765704 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094647853 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.083753975 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10255938 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.096090878 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.083855711 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.101454257 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.084933041 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105068393 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08244761 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102337252 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.086750786 seconds)
  done (took 3.12276732 seconds)
done (took 22.266929776 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160872136 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080734356 seconds)
  done (took 0.999018175 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09761966 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116281392 seconds)
  done (took 0.981737102 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102809583 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093345807 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133380595 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093814948 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094537091 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.076986317 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.127403588 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095525724 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.078258706 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094517296 seconds)
  done (took 1.75865688 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081208253 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.097515029 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085695881 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.115309728 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091364225 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098416871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083860086 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098674394 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084075241 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094513466 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105033247 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099095265 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102669426 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11723396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084227028 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101955181 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.08892587 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.10123455 seconds)
  done (took 2.496620614 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076868738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07920178 seconds)
  done (took 0.925628637 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.078994296 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092064307 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079415939 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095955211 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075789243 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.09423025 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077653516 seconds)
  done (took 1.362805459 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46750359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.178684392 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.321256675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.111228967 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.129626344 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.341908875 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.130437467 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.109034309 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.108532975 seconds)
  done (took 2.708481362 seconds)
done (took 11.998058427 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.087814126 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.130400661 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.47923388 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111860534 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.075017723 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.155499844 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.258045297 seconds)
done (took 2.065970473 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335446288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119989924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088144268 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.076761036 seconds)
  done (took 1.389106273 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075809172 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081877432 seconds)
  done (took 0.931136773 seconds)
done (took 3.095780875 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074557526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074840709 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090494022 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076230885 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.09177576 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074200741 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.128489724 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076408542 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.094206698 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076521003 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.076261286 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.095768021 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076241518 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093411131 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075075022 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09411886 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.197504805 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074173321 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091325858 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074248866 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093539836 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074029085 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073380936 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092428207 seconds)
  done (took 2.947670524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100615208 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.093282611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.081785956 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099298643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079994483 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100844386 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083123833 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094914239 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.100100416 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.079110291 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099014816 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.080585667 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096508877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.080666598 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096902856 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.081961021 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100075792 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077794875 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097182009 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081756436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099407484 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078684248 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098490828 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082492797 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098654599 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081301787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097229455 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.077753308 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099166415 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097956589 seconds)
  done (took 3.493058675 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080946873 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071964677 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.091518242 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.085987966 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.092246305 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079115087 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092077446 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.075116994 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.097105867 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073711992 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079934091 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091872354 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.074772258 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096400273 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079299195 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099929218 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.092761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.092815352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074438518 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.07938236 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098325375 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075422654 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095103588 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.075883803 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092754331 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0739506 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.074711881 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.092613592 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075385346 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092066218 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.080290998 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.098954384 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074710082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.107153701 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08187455 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091750705 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083273484 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074557541 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097507389 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.074766121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091899134 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075004909 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093197532 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.086032289 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077643033 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.094918683 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.075052687 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096748436 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078194882 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098794742 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073662797 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091920942 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080375661 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080215319 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098315791 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.074333728 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093413945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07492694 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097406043 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075031734 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073970327 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091719381 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082104348 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.093204173 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.098893595 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.10341339 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074722902 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097873389 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079643882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.100294819 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.080971664 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111103178 seconds)
  done (took 6.982422439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.078054223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104023116 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077012442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076318345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092724927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074787407 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100197419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075603667 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094524263 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094000058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09332967 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077091969 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094449456 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079261667 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093820033 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.076823622 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103479811 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073449732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.093001005 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078723145 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074499567 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100777653 seconds)
  done (took 2.689947155 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.216480436 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102244291 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140593287 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093697507 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11449255 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110949092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081721856 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101447994 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082571269 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104519624 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102541275 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082480613 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113919506 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103278275 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085705799 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104642678 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082424817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105138955 seconds)
  done (took 2.716479351 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088915218 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094674051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101688012 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096607826 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078685393 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098622815 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085426162 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111684489 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080380414 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096137735 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088484604 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099291123 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080185962 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095193035 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080927061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.096105612 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080343176 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096336871 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088191231 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102635831 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102530191 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088990971 seconds)
  done (took 2.818729264 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09287206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095000376 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.097854709 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.098064729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.075179348 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097135442 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086851013 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.096547128 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090739936 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098152837 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078879233 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09829634 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085680699 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096326753 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084442461 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095441922 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080227854 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.096216838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080515878 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094460414 seconds)
  done (took 2.608337749 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117052009 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.108074703 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09270033 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123839259 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110512453 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090793739 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121021612 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.091540121 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109768765 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.122844148 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091684761 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109396989 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102663214 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116297133 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109902826 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101760603 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120453897 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119975587 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091355137 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10850139 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104456101 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10876634 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119904501 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090504229 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110543212 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09141751 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111017258 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099659138 seconds)
  done (took 3.784912045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075541999 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076941117 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093506365 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075345252 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093330425 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.075348669 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07554741 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093672978 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078234807 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093318882 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077676832 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095600445 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077125978 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077978209 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095446244 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.077726473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095923035 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.075183438 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075010774 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092752204 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.077923499 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095481493 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078540793 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094059848 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075798195 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.077949885 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09397756 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075641815 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09556644 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076475274 seconds)
  done (took 3.307342772 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084260663 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105551028 seconds)
  done (took 0.984977761 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.074035919 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110432077 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074505608 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082007215 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103097841 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079006171 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108795985 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102359303 seconds)
  done (took 1.526135097 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101166465 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116905944 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084596951 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108226807 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096461174 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115938571 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16182017 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085406018 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.105222883 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080475869 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11765473 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07931141 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105384088 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084740188 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105171692 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092111888 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095893913 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088337235 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104429956 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081940176 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103840712 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096088862 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107030614 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086217231 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100308977 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090744008 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110649819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.108030304 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08437857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110323678 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086116421 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090718797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08403411 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102336769 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.07963164 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116130169 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097696927 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.103395357 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08914971 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103873919 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088749374 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095746296 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089416778 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104877299 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092090268 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103398561 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085389264 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096034039 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080577535 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.101408592 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.07811847 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101045467 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073916541 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108292922 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088961288 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116039386 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081551212 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10228543 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085290452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101337351 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08683645 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102026102 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090279054 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100810856 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090424146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.107145809 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088986895 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095922368 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073982606 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098087763 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.089366569 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122954031 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091343656 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103708417 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08617148 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098213336 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085578375 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104143521 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087226535 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.109942572 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08391222 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105405403 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090336177 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102280606 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082939527 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105572554 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.081032136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101452337 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081323362 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118833814 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081508524 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098487031 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080377881 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108357632 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08411648 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101761432 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081071549 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107687169 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073323305 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104547866 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086240414 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103903034 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092587865 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103870102 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085542466 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107881458 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091005263 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103727629 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083772426 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094981607 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086152715 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.100344457 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089017104 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091947176 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085535174 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.102256297 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.085634714 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108990135 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082370232 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102866338 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091150786 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109793778 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082014001 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094499485 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085169491 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102305524 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089853426 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.10993618 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.08256707 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.096562748 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078135267 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107170477 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084614413 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105133271 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085958159 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103751996 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.074410798 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098360897 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084963368 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10901913 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.08368348 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105176491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090158504 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10604834 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.08291981 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108212634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084054367 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.09901386 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090206042 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103529245 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078596917 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108527168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085223185 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101132195 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08558504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109124181 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085736128 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.104541446 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083319952 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104753367 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087511347 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099529121 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086312505 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081857671 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112845379 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104165975 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07813533 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076665506 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105643981 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080540847 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103715901 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080721326 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104500932 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086492165 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099923559 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083623158 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102785936 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09643378 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112616644 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086020915 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10678367 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091356209 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.104339487 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087340393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.103498217 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086681155 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104303676 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089608067 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106634747 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085852886 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104138313 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07677013 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105887869 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090040625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099064201 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081486575 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099364072 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084787719 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110771803 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085398762 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104438441 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082348035 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106518628 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090597072 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102753765 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085977518 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099465895 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.084824424 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089028643 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106396327 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08599358 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111788743 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104507064 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078859389 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10903502 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083457545 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108129098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079749394 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.081105965 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099743511 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086897164 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105639662 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084727023 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093177014 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090733944 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11097788 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.086063883 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100353154 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.086438308 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113127741 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084340664 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108216877 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085901725 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107995007 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09909482 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10096293 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085449366 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.113016152 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085102301 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094413305 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088730369 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102262214 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079689148 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102678081 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.092475281 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105739598 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087801465 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106410281 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074365418 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103491921 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084147775 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080539253 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099245562 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109985043 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086341087 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104264312 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094482688 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105715991 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086730101 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105996821 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085125283 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10573753 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087287377 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104905702 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087048563 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102581391 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082052338 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103951778 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081105248 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081292738 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103711686 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.084818396 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105120879 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086699932 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103256308 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090496449 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106019217 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086061754 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122862595 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101323209 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081160621 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105701106 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087902443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102852346 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084490129 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098094886 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091411224 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103342367 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092305707 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104103318 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077331778 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104457613 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.084902537 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105006489 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087234763 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105525669 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083780751 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084481279 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10583298 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113620433 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082404604 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111168302 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08828042 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106481785 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.085503028 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105021569 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083772833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099262496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084688543 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106115058 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.086781369 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104468708 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088200316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104909281 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084872918 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083399468 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107016008 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085913815 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10844361 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074390707 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.099992311 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081080219 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104854211 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089397935 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105524549 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083364521 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102329062 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088111504 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103359318 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077917593 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107415538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088655928 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105145621 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095660405 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100253675 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086108303 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114377038 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.074896412 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101651309 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082103934 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.100956719 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091643178 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106471406 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091334969 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104971301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081295178 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.076615087 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10799901 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.082908527 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094420667 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08192 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108084651 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083479384 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103080733 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08670825 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107402819 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087920991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108332432 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084917726 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105516533 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086782207 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097395438 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082095804 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100788065 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085690102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105584689 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080201183 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077009062 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104696279 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084856455 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104479401 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085073294 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102391148 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08932355 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102903365 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.083812251 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106846143 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072716895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.101340774 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082024061 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10200672 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.078478324 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104986545 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087025952 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106805616 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090766093 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.103657642 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088642274 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104123955 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081855696 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103377688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083386345 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102684128 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.07944594 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104042246 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089833151 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098849762 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084464456 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104384035 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081240202 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.086561885 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104923741 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.102588202 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086776588 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.083803671 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102746091 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085129214 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101899703 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084275247 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104537272 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082470646 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108432289 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.080000833 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112162061 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.103803312 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084630808 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081937123 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09855898 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082790366 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103056285 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081239605 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.108889826 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085444142 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100068645 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.08145213 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.102396419 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086579783 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110256669 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092028276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10481752 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087731614 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098665874 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.078489326 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106598939 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08245606 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.1033491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089206999 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108791395 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085812087 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102318105 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084533412 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109817401 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091170007 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106805831 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083752199 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107307541 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087729058 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105135843 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084441598 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103944921 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08789848 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.106925705 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085551995 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101853078 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095860274 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.109699006 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086725083 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102606694 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086629095 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103387192 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.077759844 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.105717213 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084681039 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107339613 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086867385 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104562351 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097237955 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100405159 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085979052 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110949404 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085719521 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.11025242 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079711858 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106244788 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088729746 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106642222 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080267808 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101877501 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083886851 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105695474 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08099852 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078984486 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115693746 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.108245739 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08357454 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101354063 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081292902 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077267689 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096785282 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.078452061 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10468253 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082277945 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.109884385 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07811262 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099126139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079915241 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104982141 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087319045 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107666673 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077943552 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098885945 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083609606 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105976816 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09281935 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10299293 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085708232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10617761 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.084989445 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.100126932 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089637696 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094779667 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.084112626 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112655916 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084776155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104831586 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086478292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108407024 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08495703 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096256894 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084953141 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102399991 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085171648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103739298 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087060748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117816378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083819695 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098160553 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081235144 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.101791455 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.080143895 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111603183 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085269626 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103493814 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.085983629 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.100335685 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085480574 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109500683 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084767295 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.102589399 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083469641 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100700774 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083048454 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099714571 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.08183697 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103873321 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084991069 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101758973 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.085200001 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.098200557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093118351 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.108596239 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.085243176 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.095437362 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.080091806 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101228198 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.077916519 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104677273 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.077304667 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.079658474 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100903584 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.080875526 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105202492 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085128456 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103244999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084146326 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101362666 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072871224 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106070439 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08422839 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104781858 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.075783089 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102880382 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084476547 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10795083 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089481664 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100188621 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.083493683 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103064669 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086607184 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097942935 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088335347 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103479963 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.083189804 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09965901 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084424901 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087326224 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10612988 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084194631 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10589804 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.083548875 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.107642784 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106836487 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.076659435 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.077970937 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108959851 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081815867 seconds)
  done (took 57.22953242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143595324 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084930941 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076384871 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098007348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124516399 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081794285 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097041282 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082016116 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.100659749 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090853642 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097132142 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077664541 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118603164 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123979685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119949487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.089203904 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094492527 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079555384 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096568782 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080328287 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117648674 seconds)
  done (took 2.919152517 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.098757237 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111805224 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110250003 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096468631 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104686716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.111780732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090448327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112462336 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115555209 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086458889 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115851916 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111417831 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.086258349 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106308222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105695558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090033237 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115154431 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083979659 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.113284728 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110877111 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089410236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111523935 seconds)
  done (took 3.118726068 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08700042 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082102655 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.108813921 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.07343449 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102866635 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.074211702 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108155549 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.076504359 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107401706 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.083651966 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.100370502 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.084084834 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110471945 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.074704757 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.080759157 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.095851813 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086928797 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101932275 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08375616 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096054984 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.122641081 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.077096222 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.076990288 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.100324953 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090525406 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104710431 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.082564384 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103286526 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.08085169 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103381787 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.076103387 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105056077 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086063771 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.099573416 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.080764739 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101652741 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082279151 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.076135215 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099558694 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08648422 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096930901 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084194909 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.109065424 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.078849823 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.095824444 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085254228 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102364606 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.074141025 seconds)
  done (took 5.227709517 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.112843969 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.150842884 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08170158 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142317553 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.117259769 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.091060374 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104296804 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141744842 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076829084 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103181232 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11958065 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.095954849 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104523286 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.087610926 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106368566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101553497 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085038091 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099518973 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090553346 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104396947 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090907948 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.110142197 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121099725 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.097347465 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111700412 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083454788 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103627152 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111663556 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096724422 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112853943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.111259925 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092606131 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120860809 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106140977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084701665 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.108621601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102383805 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106001619 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08615359 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.097832315 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.085126606 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109116986 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104684577 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.09881852 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103522168 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.082834325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104149178 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.075046566 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113561079 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105263649 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.092299615 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115907274 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106696037 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.083518955 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108031189 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.116531298 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.083320995 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100205016 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087732062 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11424003 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.076029601 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107675399 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114380741 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085318803 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112249533 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115953027 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08387943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.106586201 seconds)
  done (took 7.957776704 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111615419 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107242333 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09874173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120445982 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108002533 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.086707489 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107977945 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.107730944 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088061162 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115142614 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088363557 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.156133187 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.104847505 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094079777 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109462183 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108121702 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.089440819 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108801796 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089247852 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108223859 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.087708995 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120520425 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107394714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119812329 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100491221 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104842926 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088296959 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108691659 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119385582 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088605623 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120281958 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.10797518 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087800299 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120135593 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.121452062 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.088175365 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102228317 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088681524 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.108200159 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108079311 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.085801683 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.118601281 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088002564 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105709083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086278669 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108279102 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119610259 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120741349 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094280583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116073461 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107536528 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100523015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10814093 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.087606805 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12048421 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128566808 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11963082 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119948153 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089393737 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120096715 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.119296556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128632424 seconds)
  done (took 7.454111874 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079989572 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078729929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097189112 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077721531 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099388329 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077822918 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07866226 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101804117 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082698754 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101193059 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08109889 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101400586 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080681953 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082607545 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101335509 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080823922 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100907578 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081208888 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081895457 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100830144 seconds)
  done (took 2.623310288 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.08844873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12053372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080359064 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107645879 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.082316058 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107500016 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081438613 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103744567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080445324 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102413922 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092329015 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113525415 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099814023 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087272039 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.112075427 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107293991 seconds)
  done (took 2.426590948 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099587252 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.120781738 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124793669 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086779054 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.101940801 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.089148459 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107081629 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.077786241 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078591252 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114107265 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08844396 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111104014 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084890092 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10312673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081498066 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107146105 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075505812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104328155 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.08220053 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124895085 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.085956209 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104450201 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.082882077 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.102788494 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102499446 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.085770201 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10672364 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077845864 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.097884846 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.084134693 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102425405 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.088147886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.096108895 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084792554 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.098263635 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07747254 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.081334429 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104206733 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10495606 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083921807 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07716271 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10499279 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.081860183 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1018927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075193187 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.103983696 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075086701 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106353358 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.08121053 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102819506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.082277973 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107943935 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086743596 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.111212359 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089458395 seconds)
  done (took 6.062800368 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094641185 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103890972 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084976237 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097802681 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083665379 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107560191 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084665306 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102350139 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082980071 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097485665 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083320053 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10466344 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082904745 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103412621 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082941019 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103941925 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075505789 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081102239 seconds)
  done (took 2.520697702 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08677961 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078779467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.109334706 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078776244 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100998741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081472979 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096798242 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078620395 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098580314 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.080237876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101434923 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082474642 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098333516 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082905303 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078928893 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101787141 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.082012902 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098371926 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079758866 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096107078 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082493405 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098901343 seconds)
  done (took 2.838299651 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.097571304 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.132479071 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.095611385 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146565713 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.108323936 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.085006425 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.113884564 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.084576019 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12228242 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.084060903 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.103655967 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.08442914 seconds)
  done (took 2.120484234 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103580332 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138154103 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080721607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104097879 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093645668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106482468 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104647098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086122642 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118846947 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118266245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085718118 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119927471 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119472775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096445961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115325966 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114504752 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08450253 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106265276 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080296068 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128288385 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106262412 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120626265 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085376801 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106603096 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085048231 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116893135 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119789101 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12043987 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085672459 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118610589 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114942587 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085572864 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119241577 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119909898 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083049927 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119466109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084493651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128909023 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11494002 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117605908 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082688723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115142037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119256698 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093377744 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12020707 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10499034 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092702408 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105875252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084545911 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133543442 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115175388 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117360471 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093570243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119822012 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119232621 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134770027 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118346012 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116748256 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094024788 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119913841 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117267092 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094194653 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118046345 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118564646 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113803838 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097010246 seconds)
  done (took 7.987777665 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117925506 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103053922 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085325488 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119432505 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118304884 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105014262 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085905966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105819229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085768152 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10221406 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152042632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086106767 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117489533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117635261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085952212 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106807753 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085208092 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117989793 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102647963 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135427791 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085928548 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117316824 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117987425 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118243377 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098004353 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115383645 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105116216 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086464198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106234722 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085852561 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113277057 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084870292 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118363942 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102101806 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096115388 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106595947 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105781624 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092715263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106250489 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094454391 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118609824 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128215103 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105659351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085557427 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120068752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105411634 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085911735 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10220574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085887241 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103496237 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118840275 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098729798 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120213216 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116989504 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084184482 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107622868 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105993149 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085624294 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106167721 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093926011 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117876708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106560195 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134370224 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085714029 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106940192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118175663 seconds)
  done (took 7.816632827 seconds)
done (took 152.936526797 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.09819704 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137548794 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096520441 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167420527 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080449306 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136424391 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114079452 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117025551 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080006232 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.102455371 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.081541814 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.103828116 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.14685319 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.078981579 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102419372 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.083331467 seconds)
  done (took 2.595380058 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17696491 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.282768543 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100561564 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107900563 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086433243 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.105333248 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085253228 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10959131 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081795335 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.11406096 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.082422699 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.104679567 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.091696245 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104572532 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.081921817 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.104554684 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.112113312 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.085869833 seconds)
  done (took 2.897525456 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111912533 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145353489 seconds)
  done (took 1.138225942 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.116134926 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181096766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.527764932 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154479795 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.109692206 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125634233 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156275591 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100171455 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.219512226 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.125685726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.104347632 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.109239973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133706004 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092820277 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11161483 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087478435 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.136195892 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.088400474 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.110019402 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.087159214 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.134250311 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108602311 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092926136 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110733263 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182244444 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124216946 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.088344698 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109254744 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.089247727 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.109764038 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092445329 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122581152 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123858511 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.165025557 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.113801584 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159951342 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.115937707 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.085743949 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.10987231 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.085069473 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.113668258 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113029773 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101944275 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.107801483 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.088744378 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116900439 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087735537 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.110630262 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11571904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096223671 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116085575 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112488641 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.160885429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117128247 seconds)
  done (took 7.63466081 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784577389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.148119627 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08570757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883573053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137880802 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099353528 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.785180129 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.130514096 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233975086 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.77622174 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125343053 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128074909 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227818438 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248830365 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.140381553 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312737469 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.691199652 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100683917 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137694004 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148754566 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.092500002 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137815729 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127384307 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426284515 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.087007854 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108756925 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089884034 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122355511 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157655576 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108414028 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089583469 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.202261762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26342752 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179179737 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110747756 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084539327 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107821637 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.165553973 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266329373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193858495 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176288129 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10502686 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084994636 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122319579 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127944153 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083277257 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161643738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193895121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.172203226 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.089482858 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122837544 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11800801 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09773598 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18035624 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.085647837 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.336162567 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.340216457 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085511008 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117095064 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.104785609 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263852544 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.107454184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.201673609 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13672865 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211815641 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085374087 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775960779 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164984016 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106963578 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096889074 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.116117492 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090958747 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120543359 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164985069 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404758653 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123033256 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.091073622 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106918645 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207875607 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084559029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109033941 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161931213 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110808307 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094332215 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125310908 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121811037 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170653224 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247578766 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123828822 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093744842 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115365717 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120332973 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088326261 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211902371 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217960916 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.155809228 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23456788 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100020342 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16217245 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187251644 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097881672 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191145861 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094481725 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12705737 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120701389 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192938671 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.140765669 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.108954761 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092597595 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116274248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.142644202 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090320304 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116621056 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166613132 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457150387 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.184966538 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083431153 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.089107456 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11891865 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159860756 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117147447 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239964015 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119194397 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.165657093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117489157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082567849 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118949595 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162461274 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123938744 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09385333 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12300705 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117710162 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.248858776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221350792 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101630193 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242867907 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.180724407 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096326291 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197296471 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.094445549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189401104 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.096621964 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121084546 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086390603 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770953879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122187993 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.094240099 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115123115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185366945 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.085885173 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109820809 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085869888 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104902199 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750132923 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110749882 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084369025 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086461685 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119831178 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117001159 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0925358 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115072919 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160787759 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.233643829 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121732901 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094444194 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108434235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16034808 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.087633054 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110266514 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086364487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109001801 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.095725087 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114140767 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08757932 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193462817 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.158746004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218883428 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.587293511 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.107999884 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087153045 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230755399 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08637672 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.304710987 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116940007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203325112 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188142852 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084217387 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.336148397 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.168037701 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185361334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088152322 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193125482 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.082846786 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.115553419 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.160781933 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085389357 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117294847 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.158163016 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.127204746 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123181151 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.12159758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1098029 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227347554 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.082017898 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190870318 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087941364 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122368344 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.313208205 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086378327 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129729015 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160076138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112429061 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.087827159 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.843620495 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.109957304 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095236791 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120479226 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224228845 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163977184 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116997017 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092529459 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123038654 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161023399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231896191 seconds)
  done (took 43.553829384 seconds)
done (took 58.69093234 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306866664 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258122112 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.289010693 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193145409 seconds)
  done (took 2.022901634 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17510261 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147676511 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.119774376 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107720978 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149687841 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083500672 seconds)
  done (took 1.68442923 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.432283033 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.381433667 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.306924059 seconds)
  done (took 2.030681108 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.24737385 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.276915466 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.319266734 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.424024689 seconds)
  done (took 2.278196133 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200934202 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.099498327 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119763208 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.13578992 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.165804175 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.171445443 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.137807063 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.147361935 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103773315 seconds)
  done (took 2.236735609 seconds)
done (took 11.158811983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.257428449 seconds)
    (2/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.15241 seconds)
    (3/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10318789 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.239000283 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.254044954 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093948101 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125487552 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092300668 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.26247334 seconds)
    (10/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.17185676 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114835493 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.257677428 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.146104353 seconds)
    (14/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.226268947 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089173886 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18454859 seconds)
    (17/286) benchmarking ("sort", Float64, false)...
    done (took 0.173425096 seconds)
    (18/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.146488458 seconds)
    (19/286) benchmarking ("sort", Int64, true)...
    done (took 0.221579862 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.118917797 seconds)
    (21/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117327465 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.263133866 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.207010352 seconds)
    (24/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092074197 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.175477088 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.13745169 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134772882 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.133498062 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205058084 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140295367 seconds)
    (31/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.20489969 seconds)
    (32/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091882518 seconds)
    (33/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.122464791 seconds)
    (34/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.091881395 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.113441328 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.100480467 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.111777902 seconds)
    (38/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111135201 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.176533989 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.117541096 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18582564 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096800029 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121168763 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.090768365 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.246344568 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108651271 seconds)
    (47/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090837173 seconds)
    (48/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.157869012 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108211178 seconds)
    (50/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.174255969 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.224211907 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.188995263 seconds)
    (53/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242024478 seconds)
    (54/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.160619862 seconds)
    (55/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.098734047 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.119618386 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.158741407 seconds)
    (58/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.118442013 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.115756267 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.13138051 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162105217 seconds)
    (62/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118483328 seconds)
    (63/286) benchmarking ("sort", Float64, true)...
    done (took 0.225977922 seconds)
    (64/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.134213003 seconds)
    (65/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.169888382 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124327653 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122091376 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.110019706 seconds)
    (69/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.121786163 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 0.083329856 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 0.243844146 seconds)
    (72/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.096520653 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.205585414 seconds)
    (74/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090274266 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.120406693 seconds)
    (76/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.075102306 seconds)
    (77/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0861741 seconds)
    (78/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.178903826 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.097290289 seconds)
    (80/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086744705 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.113355064 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106330632 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.158330873 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.088838944 seconds)
    (85/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.098699728 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099917964 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.118776951 seconds)
    (88/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098085879 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138753129 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.1723003 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.06999209 seconds)
    (92/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.210172356 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.111102903 seconds)
    (94/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093355745 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120092527 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189667735 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086663765 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.10959732 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083316547 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.140255238 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.098647742 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.181224259 seconds)
    (103/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.163897463 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179386636 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163188158 seconds)
    (106/286) benchmarking ("sort", Bool, false)...
    done (took 0.204063695 seconds)
    (107/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096745413 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112129266 seconds)
    (109/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095553624 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118171694 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 0.215402669 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.089619638 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.114795967 seconds)
    (114/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.096462784 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12227113 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.191907691 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099087221 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.107472944 seconds)
    (119/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095584079 seconds)
    (120/286) benchmarking ("sort", BigInt, false)...
    done (took 0.226252298 seconds)
    (121/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113020444 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.161003261 seconds)
    (123/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.153664791 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107837912 seconds)
    (125/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185087724 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091294294 seconds)
    (127/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12125702 seconds)
    (128/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.088323362 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.13408455 seconds)
    (130/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085111218 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.14440122 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.095882242 seconds)
    (133/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095582067 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10650235 seconds)
    (135/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089598273 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.128954823 seconds)
    (137/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.100125367 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.117780631 seconds)
    (139/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191680386 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.07628473 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07454813 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151204059 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112554372 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.098638094 seconds)
    (145/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105134028 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093514871 seconds)
    (147/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.071790056 seconds)
    (148/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.123799659 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.180434654 seconds)
    (150/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.087596238 seconds)
    (151/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149522485 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.183120231 seconds)
    (153/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.079148616 seconds)
    (154/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.095977564 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.073769 seconds)
    (156/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184390248 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.106476384 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.122452332 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172204856 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.188939796 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.074092888 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07406261 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115363684 seconds)
    (164/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.089170712 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09748067 seconds)
    (166/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.073558999 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.176989466 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.114605726 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097577447 seconds)
    (170/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.103843248 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.073871742 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.140603945 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.074010447 seconds)
    (174/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114029113 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079173074 seconds)
    (176/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116080404 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190988915 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092650679 seconds)
    (179/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133910459 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 0.14880652 seconds)
    (181/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.097982291 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136052803 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.17985122 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116078447 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.191479228 seconds)
    (186/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074737842 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.07341703 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136190041 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 0.217044594 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.087519785 seconds)
    (191/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114983196 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085732253 seconds)
    (193/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.155895759 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113049006 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.107214227 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.130766344 seconds)
    (197/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190710958 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092115732 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099409218 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.08566065 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.113386438 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.153946187 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.097548006 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090785615 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.09656584 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100222277 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.119780055 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074395386 seconds)
    (209/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.102882141 seconds)
    (210/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.073399139 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074371206 seconds)
    (212/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.097519886 seconds)
    (213/286) benchmarking ("sort", Int8, false)...
    done (took 0.1913217 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098187186 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115845259 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.075539098 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.114819923 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.073423305 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110004206 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084245073 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114801844 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088979793 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116429983 seconds)
    (224/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084589457 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111634175 seconds)
    (226/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.144845993 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091824307 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.113866219 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072678665 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 0.22885747 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.151187553 seconds)
    (232/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.074504452 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.1714603 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.084852293 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.098723195 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.07229102 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074748233 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133479115 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.100590552 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.08901958 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.071733916 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123958433 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075226739 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.098421866 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075544838 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.097360934 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085350692 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.132287825 seconds)
    (249/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.080394365 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116308173 seconds)
    (251/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.080027036 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123500945 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091128465 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077939303 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09828558 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.087003381 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.114089732 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088855968 seconds)
    (259/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097116641 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15431531 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.101756734 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092261272 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.105173048 seconds)
    (264/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.080374798 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112280865 seconds)
    (266/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.072788494 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.071933186 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.114317403 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107680019 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098793205 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111578338 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.077001759 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112843206 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.089988045 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.078642586 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.111711936 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090916544 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.100266311 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090422303 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112905083 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089687356 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.110881027 seconds)
    (283/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.080338919 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.115614563 seconds)
    (285/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091640001 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.097277616 seconds)
  done (took 36.638500356 seconds)
done (took 37.555703888 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100133265 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148718999 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095341205 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139809006 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.102530212 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125942676 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116554175 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098456218 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.121514932 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.101339149 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.121818118 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.079541656 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.118961832 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.095491636 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.121025881 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113312062 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125367419 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.090392376 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.11137759 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085974009 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112818034 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086486231 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114288038 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078507128 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.11979962 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092638967 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116336223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094356914 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.114058227 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.084981653 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.111103455 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.090950088 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.11031023 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.09802685 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.114385596 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087431822 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119980529 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093095006 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.113965827 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087851093 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.11697363 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088757078 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.115245704 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.092430547 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.112450044 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.087639052 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.111034767 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099515249 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140057203 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088220597 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.116873154 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.094526918 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120142038 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.091483885 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110499727 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.088101492 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11339278 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114188106 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.112551922 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088006005 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11718616 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.091738082 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.110604387 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.087631024 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.112226909 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095266668 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119563346 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.087212497 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.119175555 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.090939611 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.107366059 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.088446203 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.110080948 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086365815 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117394697 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.096218198 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.081941478 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.113879364 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.089919599 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115350326 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085946465 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111054521 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088631631 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113543481 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085789789 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103873522 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086706944 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114180614 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.087218083 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.111811877 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.090737295 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114386728 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090046667 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.118938569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087046568 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.113146081 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088466681 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113125175 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089623805 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110192839 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084463304 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109760454 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.093028796 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084335473 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.113498091 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.121425602 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086896751 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.089634543 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111727866 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.08682775 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126329381 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117686914 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089746004 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087913863 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110005283 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.090932165 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111468028 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.085134335 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110423309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087686541 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113223917 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087732732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111069277 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.089392884 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122380856 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.083244962 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.128304714 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0862026 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112166975 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.090162104 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112471118 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086271097 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.110875347 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082917714 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109853859 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087263291 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.114659201 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087288833 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.087266809 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113449678 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.086857084 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114125342 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.088135788 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114275814 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084673174 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.106365569 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08872185 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109978536 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089614308 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112253333 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088370804 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107047126 seconds)
done (took 16.565597647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.095866411 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186362136 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146055409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.149143985 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12205315 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.130349194 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124616081 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.143278246 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.096304442 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142329916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.144522029 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.10983762 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150115784 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122672645 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.104227644 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.120316751 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117162363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.105823787 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.15370317 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.141415894 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120801084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.121421008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.141054712 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.138939639 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094575033 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.138558428 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0974614 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120082654 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.121173027 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112969927 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135021724 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.097966362 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.122440624 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.129898599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10290083 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117394584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.105177435 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.116028889 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.094092605 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.121227096 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.132355607 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105902665 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11775407 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.126042704 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096827133 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122074744 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.094215031 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118824126 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094904815 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114878161 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.099059228 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.14047476 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117033055 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097064802 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.12123211 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093670856 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122030549 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.122067648 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.096534198 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.123747848 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.094319008 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.122640735 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124424686 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.112259694 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.119891667 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120501009 seconds)
  done (took 8.86179964 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.110268356 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146154633 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.125160093 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.102475326 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.121678735 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.084148734 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.107735167 seconds)
  done (took 1.770219711 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086325715 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.138219381 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118193253 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.14340795 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137340231 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.121666574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129839628 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.085042676 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135938394 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.120836736 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.1139534 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167609669 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08579236 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12300692 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143643452 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.085391286 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145798248 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.085036003 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11898122 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14214716 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.09220907 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132063738 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.101576818 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111933391 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107444642 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112918039 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175908866 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097275936 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109707792 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090917244 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115261269 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180407599 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10773072 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.122019788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083394484 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139794216 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130348354 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091386155 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133748153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.091089667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.132071595 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091407872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11897811 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090245334 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118584823 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099666021 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12162684 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117604219 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092220546 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.137494011 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.096130858 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134594731 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.08680808 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115151997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.095342688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118397895 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099338349 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11693542 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138430222 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.093909984 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136668527 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.111552424 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132488962 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.136029265 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103199903 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.133179312 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106289848 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117028832 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092322827 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.121308637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136960092 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090614992 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.120901253 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101176626 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120343847 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113896667 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139038149 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08960633 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124557818 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088420421 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115079154 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.085240113 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.127301267 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088519316 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113962792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102952863 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.124530138 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114786131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.09073357 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.133020079 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090208911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.123523938 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096365394 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115712131 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125638192 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115219276 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.123352491 seconds)
  done (took 12.147542444 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.088589805 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.087456506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.118173222 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.087581559 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.113176768 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087681698 seconds)
  done (took 1.566401475 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117351388 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.115547616 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102720658 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.11979054 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.15510402 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110954886 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.137301344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098987927 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.133476933 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126090379 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.111695549 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.137175723 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.116632631 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119491145 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.134714396 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.095300501 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135741985 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.093222671 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126625411 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091231039 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.130583963 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.093721824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11693137 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108602658 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120986321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118979727 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.094937604 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126510872 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.101389861 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122278752 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094437122 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120668419 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.093539829 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123127378 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136636581 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095305095 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114609149 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09768276 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120582909 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.095893235 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.137767453 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.09324998 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126860866 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095573517 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.122912104 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119661987 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098011705 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.118840804 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.11116707 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12248689 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096661827 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120551919 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094302097 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122270353 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095158223 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122872548 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120715863 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.11213911 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.120650483 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094908601 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.115739621 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096035308 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123291059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094436719 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.121180067 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096368939 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.120494744 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089143683 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117084324 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.092535292 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.124577273 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.08950316 seconds)
  done (took 9.123301458 seconds)
done (took 34.431002339 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668401991 seconds)
  done (took 1.651054644 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.820654224 seconds)
  done (took 1.806278922 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.417250378 seconds)
  done (took 18.428356291 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.47131349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.57223788 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986878812 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.16241546 seconds)
  done (took 3.177490609 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.969381914 seconds)
  done (took 1.972075664 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297204447 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238995974 seconds)
  done (took 1.527263065 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.811937926 seconds)
  done (took 1.814360298 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.525350591 seconds)
  done (took 2.515783429 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34345885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.196462854 seconds)
  done (took 1.544521373 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.576387607 seconds)
  done (took 1.573526909 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.736381173 seconds)
  done (took 15.738487816 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239096737 seconds)
  done (took 1.252287088 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290587944 seconds)
  done (took 1.29215647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.595911205 seconds)
  done (took 4.596298408 seconds)
done (took 59.886212577 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097569897 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.099676441 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.126560188 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096150963 seconds)
  done (took 1.413778827 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101671253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119735393 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098745143 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11984176 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102360643 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120437664 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094502108 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.164878814 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119127024 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097367274 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119404252 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094690227 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120863748 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.095283205 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117500436 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.096424229 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122093415 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.094624734 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.121382256 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095633035 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11743255 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096427988 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123566565 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.092124384 seconds)
  done (took 3.655161064 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097851731 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091144409 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120180851 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09054654 seconds)
  done (took 1.413380204 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10184404 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132905873 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.107089238 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126264545 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.107658967 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133327505 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.114946784 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.09004815 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.091375651 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127012272 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090041496 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.136294415 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131839254 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.086408262 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127865217 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088473279 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.111681649 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107455744 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126414298 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101211951 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116576841 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.098723064 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123446626 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.103919282 seconds)
  done (took 3.697349573 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171141627 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130100028 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139234954 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09637492 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164859659 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140771098 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08894468 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141073915 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089173161 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.127965774 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.093202589 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.168930381 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.125055744 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.093109286 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116286393 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.096099754 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125654551 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.098666895 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118898688 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.131065005 seconds)
  done (took 3.4721485 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097243104 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114917692 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087274554 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.087648675 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123467299 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091988488 seconds)
  done (took 1.613792347 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.087588041 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085260099 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.112489582 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085513226 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.11494539 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.086302319 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083155667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113010587 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.085500629 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111175932 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085496367 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109373544 seconds)
  done (took 2.178308477 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.379296839 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11629836 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117491128 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.09070257 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093338814 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115335093 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127446067 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.08969781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.145169654 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088931263 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11418677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092950659 seconds)
  done (took 2.584891034 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205575489 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094880683 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260781288 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.349305119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153327316 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163798788 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.28048334 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161729694 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.181730681 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136123408 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192169817 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15461043 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150860531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176646923 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111207365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.17537878 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173368182 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199265593 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147151512 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202451905 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160713661 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165824125 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177165204 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148983178 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132836951 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156017909 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091500819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125548255 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171149057 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167461032 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172181509 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146726442 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109847638 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225815445 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210573106 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175679488 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.303427241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132384631 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.189389796 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.179031195 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251983866 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110823441 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218323289 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12588814 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128670969 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181553148 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155739668 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.179526239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129802585 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112400274 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180343759 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174293032 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.204198777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107811091 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327329108 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119937487 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.145470318 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180363627 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185239805 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188796825 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166306602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12041555 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184422516 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179968132 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178017821 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.143116285 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.164956251 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095406478 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17102738 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.21977529 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175775933 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16196338 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184147353 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133597315 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16272912 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166766045 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122265322 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176786332 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159155241 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119732122 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119835665 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135843671 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125865494 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15788115 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121058102 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20046646 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133991209 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.188899858 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201614261 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155928823 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159019963 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161199362 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16432089 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116564284 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.11796328 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143858 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15789623 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127105014 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130152687 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155413818 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141055025 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.098707367 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150226934 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093365726 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158183188 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.13393532 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164677057 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161727106 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099801304 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163711971 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148806986 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.156912187 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169559445 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183986049 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102770574 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130097176 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190858579 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159416116 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.134336293 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171707907 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183709035 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.162838607 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107974772 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167213283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189696075 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140389037 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185510981 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139071019 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130322573 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.120511766 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156787269 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153994973 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156001586 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099830741 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151200756 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213689522 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09780903 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133886819 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172076273 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097358456 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1273608 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112010273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134465074 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14019637 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145719054 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110584462 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154443354 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159039945 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151496727 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156871138 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112276765 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217581697 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103346398 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.158451584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145844566 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089841184 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.17538398 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208152405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099739186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194745515 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.165969507 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222310403 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162984865 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101864715 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174815261 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126418933 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.090172439 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164047296 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159101069 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159525747 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179413222 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219245597 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.165686266 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123376136 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147089833 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163898614 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.173073008 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156145755 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142465911 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160326419 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165397234 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.093264681 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121839443 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097785217 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140762368 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099788945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129839316 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178576398 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161729624 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213187985 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133106005 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13999647 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179501234 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124736388 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161492852 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170246021 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109584471 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180560504 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179110082 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166172859 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14119898 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171994104 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118238341 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094512782 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.131660865 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163484435 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102786776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132159464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13999978 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178395107 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172659273 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119300109 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227412219 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166132113 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189894347 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120381125 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.134878115 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166624668 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156023173 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181161882 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105424557 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156778837 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174925412 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139528177 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187481232 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160773234 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166958376 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196767078 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.155463709 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12743752 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118886998 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162889142 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138630184 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165149519 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142435187 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105415071 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150422589 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131464244 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095444878 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175830035 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142616617 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175908307 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.154532337 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170100208 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124824512 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139914514 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133030535 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144667072 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.114792508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166630742 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183631881 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142745683 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154939743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171085339 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099860167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308450763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184821595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180536516 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134053056 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140217579 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158986848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128908767 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160822726 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176243679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142264382 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177593692 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156243117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140734592 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106105831 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14503144 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147348388 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.12035861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131133833 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151444269 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140089814 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181609045 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139792609 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128809008 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163041244 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145847073 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145640993 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112459063 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197276085 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15728596 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17462741 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.153941446 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16461677 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195925013 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122917657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097919868 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126201985 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177647448 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102850254 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156477333 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183565509 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223099726 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158140338 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164762108 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107140553 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118534876 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15818874 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118711189 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2234208 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139979625 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105545236 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186366841 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.148149872 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128944592 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131172864 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311947434 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115280841 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169795898 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.115292169 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.275326551 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096222476 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129097354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156474382 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167827384 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.107792415 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180919154 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163314978 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142467116 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157347238 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107165448 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187415559 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23195331 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169403891 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171728658 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.110902945 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154200146 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160103936 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17266275 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141976598 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1425248 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131336346 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178543139 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.213546592 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.104182805 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160969046 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161500005 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158064645 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171917653 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131663499 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195774652 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100039553 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164109803 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13796955 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122648054 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155407378 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.182711792 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103759022 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17061455 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154690342 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130882924 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095002623 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14871324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156977321 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139831998 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.098254668 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17346752 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124602609 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161530851 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176361992 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10053632 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152932053 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143240788 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107048647 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140856388 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143795222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132770278 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.141391509 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176791845 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128770862 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173803152 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175601372 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162551633 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157403931 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112624313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664485645 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127070253 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179475462 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115859463 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210073103 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117518956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16456162 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160743383 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14701471 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166985935 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146153734 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.190891176 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163846736 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.157075282 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129485862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143140611 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112011522 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129886525 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148280268 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133855656 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138702037 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135489587 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155180267 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114829147 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.14153119 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136524694 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182708508 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115527959 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207451809 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176576826 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106291636 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164996258 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171500364 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130157948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158571583 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168745861 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108675616 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147908949 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131072151 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101986032 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17735783 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123178023 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158793617 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157927843 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130976866 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161209672 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132127349 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1585417 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140077176 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130352368 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128007659 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152618386 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155383307 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100917114 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126790539 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152820206 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156148056 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127959214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12538538 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.143117506 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174289177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123367954 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101964284 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.312698597 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155345104 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189436581 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.12112275 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133482032 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141521139 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15228267 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.122476123 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158591234 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127496239 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100555473 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129468956 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179992889 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.15187519 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125131192 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18135273 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15719912 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225834591 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103850325 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262097301 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136435574 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124562527 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.129056176 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127440922 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111587638 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133182693 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140801541 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187414786 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177244205 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.120622311 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.142044074 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125628428 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.096067175 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131797049 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157603185 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122794986 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156064893 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142836277 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115416097 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112349407 seconds)
  done (took 75.019588634 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.145386548 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129737951 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145866474 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191939001 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163726983 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239723663 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.203325416 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.223473551 seconds)
  done (took 2.545212738 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.098087554 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154843753 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.137862465 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.122416523 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.089403538 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.328126922 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.140918932 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120864334 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.116512379 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.158844673 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.090940975 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.531742906 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.129354902 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.12117971 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.085857709 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.113526232 seconds)
  done (took 3.632071212 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.231914763 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.543248159 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.977567064 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.241994743 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.223358941 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.149129566 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.758645569 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.156220709 seconds)
  done (took 12.384902599 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.119544472 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137831382 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132127717 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.16020961 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.116613107 seconds)
  done (took 1.772644181 seconds)
done (took 116.377934801 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.093195899 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123288097 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.094174448 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.12509545 seconds)
  done (took 1.525229638 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.105810497 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.083266812 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109303179 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077167133 seconds)
  done (took 1.470935501 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.417366548 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.108589812 seconds)
  done (took 1.663123769 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113550673 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131353091 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104604766 seconds)
  done (took 1.454517562 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100547546 seconds)
  done (took 1.209273429 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094948387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096522373 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.139534516 seconds)
  done (took 1.438531975 seconds)
done (took 9.867241883 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110423628 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.431240189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.382651415 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135677558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.691989478 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405383031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.073592112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.126023907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164470244 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117275911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105226363 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.697369127 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.99108185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.368900328 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.977351287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368709326 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67048042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119715382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094354387 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11871709 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023625788 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116717331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.08932897 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118773546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.667805867 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42073246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088538942 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.381511912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.087741206 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.122686603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374941147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116537682 seconds)
  done (took 16.859393473 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09463774 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177032324 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.096564787 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119057896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.092463068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119136849 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.09817603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.130823681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17913815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089256221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135603454 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.087005154 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123452473 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088449471 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137559202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.088197661 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.119611873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091370503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123811707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.091166007 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137032932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088339426 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118766507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091621879 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11622124 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101584732 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089087199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.129349329 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116930408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095862807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091004872 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118060636 seconds)
  done (took 4.68141281 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139621052 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186028677 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126604706 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12338442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16776331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.09032985 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200581719 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.155397747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182160789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117956801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10594118 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117472916 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123617855 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12009508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109168473 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117466457 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09145273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118963691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095218877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.119231986 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108147466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.116867888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.090228033 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.119431875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089463343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130660331 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089108204 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.130500523 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088115802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123046623 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092051411 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117211202 seconds)
  done (took 5.018210521 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095555821 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124530193 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.105815629 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.133785976 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.090564849 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124005135 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097804216 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119039244 seconds)
  done (took 2.001670724 seconds)
done (took 29.674156027 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105772806 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094182231 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131040949 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10023756 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127251507 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102040128 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116941839 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098872991 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132666922 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.097306812 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132970335 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.087543534 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089120057 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.116334906 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.101238686 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123221355 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103400134 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.12834783 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108166341 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132977509 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.089237001 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128684177 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098095157 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.138564714 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108239131 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.139221328 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.13279559 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.095120767 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088041592 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.118832661 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.102318894 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.147082266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098023295 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.139514649 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095005611 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121739326 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.088708718 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.118945751 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.103584462 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129062908 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.094326559 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.127831199 seconds)
  done (took 5.83831157 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.116041127 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.164122686 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.096148528 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.125042299 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.089641799 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.15643019 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.159199582 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.091834274 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.089396093 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.142589707 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.143262823 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.089659558 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.117856795 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.089989151 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.088976161 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.119704893 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.112836862 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.143177274 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.152330424 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.120180603 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.171282041 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.156545643 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.124537037 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.150564864 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.158635008 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.12759941 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.146598902 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.153801713 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.116596427 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.124263404 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.118854386 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.150634887 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.08933014 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.11785531 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.128990759 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.159555808 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.153403993 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157615676 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.119709937 seconds)
  done (took 6.153450203 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.097835793 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.10253724 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139560778 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.182162631 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.126310509 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.132035432 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098741207 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137843877 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.104462337 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119034172 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.090513385 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149502533 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.105632252 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127370876 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.089746576 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.13443945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.109127505 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.121067855 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092566489 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138132855 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.106329306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131900798 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100616609 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129339743 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088594612 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12764416 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.091717909 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134209079 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09333644 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.126287471 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.092441397 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122921207 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.092372182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129624862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093029599 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125819003 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.110118172 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127498102 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099687607 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.151333025 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.100340946 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123133111 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139968861 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128806373 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117859046 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096980177 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124862529 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098209977 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.087323452 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.137436407 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098714976 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119851877 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132910099 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090032015 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.087444288 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134188853 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.089653225 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121886579 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.097070605 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125521679 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108379541 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124200599 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.102898354 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119802028 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09500649 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.1181207 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089875091 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122987415 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.112098827 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122054662 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128718743 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.119219736 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094771153 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.12758775 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.09502049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127340144 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.089844516 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131538918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101055029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093507356 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128856632 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.091782061 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.123625348 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.106421194 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133265113 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125572142 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094826685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125034778 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093135857 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0902891 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132714528 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092166173 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122370535 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.104230873 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119827698 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092422081 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125710102 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093999066 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118572668 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.101665771 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124269348 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.089039841 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128702139 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090157559 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.123848938 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.098682155 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.121812078 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.090070638 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.093922588 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126105921 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088523829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122729143 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092244423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.121836158 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.101684984 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127942061 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.091709015 seconds)
  done (took 14.335570838 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236314823 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.224928362 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.190581777 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.301158623 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.141945096 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115217918 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21403871 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.16665158 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.089793802 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160471374 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174979904 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.186669708 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175543939 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187194739 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173792875 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121243981 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.108032806 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.173408175 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215795198 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.29836315 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.108248266 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135970728 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162643434 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161100167 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.108599864 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.137253686 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.145452207 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.111560809 seconds)
  done (took 5.867593932 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107097649 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157281359 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097036505 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145810067 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.146540133 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.090598133 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.125050102 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.091393378 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102489021 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134498475 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.121738188 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.097315687 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.126391336 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.099870527 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.121079997 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.099631537 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130066568 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.099127144 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123332881 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093977387 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133586337 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.107395668 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.125580387 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091992612 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137722098 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.092130904 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122544318 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141426573 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.097981105 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146162888 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086867887 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130129444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.104708301 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121236616 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093047464 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.122598242 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.093325995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.0920139 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.12216127 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.08819955 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120539337 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.081456561 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122280124 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105143252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127466502 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087504409 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.126140171 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.094192754 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.128749493 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086441514 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.091474677 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.123486775 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.094405166 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.132556725 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.092676035 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127340012 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093859282 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.123729022 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098994368 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123844936 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087285189 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122228709 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.096884094 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.123920093 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.098461625 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126957051 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092256666 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122632297 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095537278 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097184258 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.123851529 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.099144012 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118285237 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.091491691 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131944603 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097598392 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.124860295 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091642231 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123572187 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.089887363 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.078128021 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121026768 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077150789 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.124974274 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088931815 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122110126 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.093260194 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125223353 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106287039 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.13008771 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096653745 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121397575 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.092137551 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12526321 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087622539 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.124626451 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.107336057 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141002552 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088603328 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117851062 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105262624 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.122212518 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.088759313 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.081024874 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132500858 seconds)
  done (took 12.749637594 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.130770658 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.170747819 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121866486 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.110010411 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.155639472 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.161342687 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.098903169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.097348988 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.122256002 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108573067 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.124812535 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.099016897 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125032313 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104476291 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.16385063 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.129724345 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092538231 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103912204 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126069029 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.17432034 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108994206 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.159765836 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.162095373 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093017045 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127387195 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.156862905 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.135564322 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135871252 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.102358526 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.162567699 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135372194 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.135141316 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.163182973 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127844731 seconds)
  done (took 5.580476311 seconds)
done (took 51.636268424 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.232212398 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.427634322 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.206923153 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.207632073 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.261776724 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.252649229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.207457318 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.401072016 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.931599135 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.198784732 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.206823291 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.206779591 seconds)
done (took 27.881412275 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.295815052 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.368483533 seconds)
    (2/2) benchmarking "String"...
    done (took 1.538880741 seconds)
  done (took 4.04634176 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.209115195 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.209663172 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455443789 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.215509174 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.209521275 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.226615093 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.214828799 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.23141036 seconds)
  done (took 15.902233509 seconds)
done (took 25.592410473 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.273790285 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.396399867 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.471615794 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.231152537 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.208687943 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.21484875 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.212521429 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.261991446 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.22075836 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.210342596 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.2093042 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.473706504 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.240551848 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.592307757 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.211665043 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.22316016 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.225948468 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.438922717 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.226708491 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.261490163 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.196820525 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.217819697 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.215252607 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.237727368 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.219149316 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.227050194 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.249345984 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.21150871 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.399731076 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.236687679 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.258575497 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.210882287 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.244803562 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.217175487 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.321537248 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.234288655 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.391146964 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.222594797 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.207340975 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.21360131 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.400161308 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62033321 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.211628134 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.215239037 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.21735974 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.285451813 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.204412698 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.932660495 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.218948089 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.219782161 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.247290385 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.593478432 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.220863954 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.222777646 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.222798654 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.453401163 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.249328415 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.248731127 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.248833659 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.222157902 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.213790919 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.213165859 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.216281249 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.231769803 seconds)
  done (took 144.210921344 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.213171579 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.219624629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.219199639 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.241625558 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.219373934 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.220934361 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.212228126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.212856302 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.22007553 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.225507502 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.219235461 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.219926953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.220124438 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196056783 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.215864613 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.234143576 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.219727077 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.235919192 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233128466 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.215017989 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.219975778 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.219587651 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.214626807 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.214512988 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.254286915 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.308419791 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.271103855 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.222025718 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.218714365 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.214275966 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.267746769 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.244547526 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.848860505 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068941391 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.230122656 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.24545349 seconds)
  done (took 80.820917556 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.215034738 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214701875 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214544782 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.215032641 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247552734 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.216941348 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.791376999 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790749123 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.952648281 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.506610871 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.603511276 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.527894045 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.221759796 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310318351 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.227809233 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.216084633 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.231443312 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.242490549 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221727494 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.215564454 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794096244 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236376571 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.210066432 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.409164112 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.231599495 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.250312589 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.615794112 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216952871 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24863134 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553276826 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.265562185 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216823774 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.623880285 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.707912938 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336192316 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219009045 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.249558023 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216569698 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.499745649 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.217397606 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.217307946 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.220235708 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.92671151 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.223187726 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796009793 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22435639 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.203700416 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.224749839 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217754574 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.61572527 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.958588362 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.240271145 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.217053838 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219743553 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.218112173 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218396301 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.251235133 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.593040195 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.24148671 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312193445 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.220446809 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.223913296 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251602149 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219067301 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.221142982 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.235564869 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.408826146 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.296999173 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.326535885 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.80397302 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22541612 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317829178 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339900475 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219839162 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.219120515 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219864286 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.219186911 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.330893715 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.219940403 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639274302 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.397549884 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.235930987 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.617070358 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323727721 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.219970656 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630388182 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.225585287 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.220606204 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.976281684 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318640339 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220019306 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.220455404 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.711616024 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22045916 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.642877075 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805527571 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484721981 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.22604398 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.219719094 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.871120982 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.231959023 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.650567594 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.78275163 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935443814 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.22762739 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334900509 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.398298254 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.237651526 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.220689369 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.62140527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.226838971 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.276520063 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.226771639 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.621632413 seconds)
  done (took 370.133856153 seconds)
done (took 596.305116217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.925751729 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.876647668 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.010335611 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.897966332 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.870026834 seconds)
  done (took 10.730127757 seconds)
done (took 11.879831925 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.412140621 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.411964237 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282235676 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.414536986 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25474567 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431601037 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.395739712 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244414476 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.328490654 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304149203 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.326884952 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276882031 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259778528 seconds)
  done (took 18.494526095 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587466772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.225041503 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.305521575 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.567680587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263219162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.555417244 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.438621495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.241080417 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.428425401 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238564732 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.235962636 seconds)
  done (took 18.239223766 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562640666 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.224597061 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.30798047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.570503434 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265781518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.562638028 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46187504 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.243688502 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437204459 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238671127 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.239033265 seconds)
  done (took 18.26582472 seconds)
done (took 56.149704545 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.266685954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.395951609 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252462782 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.237915772 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.235142981 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.236731575 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.240217578 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.234432346 seconds)
  done (took 11.253053614 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.231188252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.232516811 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230932192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.230612983 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.233876956 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.233823439 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.234772168 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.235091081 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231938835 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230922167 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.234019098 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.231916713 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.233705092 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.233910104 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23441205 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.232653344 seconds)
  done (took 20.881111436 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.234249266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.232533804 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.231261051 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232377786 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.23300176 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.234454475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.233363311 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.232682092 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.23121024 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.232242178 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.232767578 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.232469901 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.233269236 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232542902 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.232570899 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.234537393 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.232695912 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.233188253 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.237135011 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.23385594 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.23344033 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.233369451 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.234144508 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233071079 seconds)
  done (took 30.753060859 seconds)
done (took 64.04014277 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.227061769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.23857262 seconds)
  done (took 5.621908352 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.295313204 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.295191306 seconds)
  done (took 3.746119295 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.236197115 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.235279033 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.23738335 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.236760632 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.236202939 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.236297025 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.237239167 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.237031708 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.23760357 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235786401 seconds)
  done (took 13.521984679 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.237292604 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.235967182 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.234105638 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.237864102 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.236458936 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233390036 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.236252292 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.237165589 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.237200748 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.234247626 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237166515 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.235245716 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236127341 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.234314897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.237859172 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.234736857 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234731806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.235401137 seconds)
  done (took 23.401905237 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.251231391 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.257903501 seconds)
  done (took 3.664945105 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.365038305 seconds)
    (2/7) benchmarking "second"...
    done (took 1.276900872 seconds)
    (3/7) benchmarking "month"...
    done (took 1.345512149 seconds)
    (4/7) benchmarking "year"...
    done (took 1.332495857 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.276045685 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.255328807 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.278234075 seconds)
  done (took 10.287299918 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.239066223 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.429413367 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.541754668 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.81506922 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.241053851 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.242289687 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13811442 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.24286277 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.245522845 seconds)
  done (took 14.292705145 seconds)
done (took 75.69186582 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.230664092 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.250173279 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.237773217 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.248497838 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.575372633 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.25592837 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.238229777 seconds)
done (took 16.195116005 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.22185605 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.234833252 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229164234 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.239193165 seconds)
  done (took 10.084543286 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232500854 seconds)
    (2/2) benchmarking "read"...
    done (took 1.556901098 seconds)
  done (took 4.949696915 seconds)
done (took 16.193938356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240178906 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239937107 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.237348932 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.240993088 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.238720684 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.239526578 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.240519573 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.239577483 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.236617182 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239412282 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.23983071 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.239850378 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.240171243 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236956509 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238599073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241257692 seconds)
    (17/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.240752333 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.240168759 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238466485 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238926667 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241280671 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238183032 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.239213426 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.236865448 seconds)
  done (took 30.905981324 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242595062 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238536315 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.240370769 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.242382376 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.238052708 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240868939 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.241019644 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238353944 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.241613387 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.241631541 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238824607 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.239394282 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240906819 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.239266102 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24010817 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.239197585 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.242409704 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239322804 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241155676 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.240046686 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.241261532 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238897422 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.239707474 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242349109 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.24044439 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239494192 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.242236871 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.240366078 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242069435 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239450984 seconds)
  done (took 38.373776107 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248209266 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.249650043 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.242828037 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241922624 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.243123599 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.242383102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.241889646 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.244469137 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24237277 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.242858293 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242244447 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.243495421 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242226702 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.241956862 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243111184 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.242873404 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.244406606 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.24311509 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.242892899 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.243330829 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.243944017 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243765694 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.244343682 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243180505 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.244072481 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243129995 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.243401354 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.24416231 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243756737 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.244326883 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.2444434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.245175554 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245014117 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.245960405 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.245492754 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.244390526 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.249336566 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.252196376 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245168257 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.244773246 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.244214376 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.245245662 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244032535 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.244874673 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245365543 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.245182149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.244631045 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.245025764 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245518157 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.245729823 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.245174319 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.246294082 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.246212996 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.244433623 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244630244 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.245600388 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245176566 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.245628434 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.24681572 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.246199287 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.246459823 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246032602 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.244796866 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245634179 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.245779185 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247583635 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.245817027 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24619503 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.246997086 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.24803026 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.246974401 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.247492226 seconds)
  done (took 90.796551107 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.247496466 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245506205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244163109 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24533335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244867956 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248483538 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245730652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248349191 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244474644 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247322054 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246849496 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246326933 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245738793 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248402819 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247659983 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246287516 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.249013861 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24570542 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.248016414 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248288499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249012547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.247222357 seconds)
  done (took 28.59758691 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249561676 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.250806642 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.246181568 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.249742128 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.247295344 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.251652539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248699155 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.250418469 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248746009 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245416877 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24657532 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250505443 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.246852456 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247657953 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247282881 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.247205272 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.247793873 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.248392987 seconds)
  done (took 23.638986705 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248064225 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.247181599 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249362243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246393983 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.246858732 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248956682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24554121 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248521667 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249305492 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248108626 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249704953 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248903818 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.249394529 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248063275 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250119085 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247311537 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249615985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247477232 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250370791 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247023418 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248268525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250075624 seconds)
  done (took 28.63337509 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249838145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249570772 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24878882 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.248795906 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248387571 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.249879829 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250351618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.248172975 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.251484069 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.249803825 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247817381 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251000519 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.250556586 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.248743451 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248473564 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248967146 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251352563 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249047453 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250629388 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.247884071 seconds)
  done (took 26.159494363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252709875 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.252370489 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.252279414 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25256809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.253001661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.252930371 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253965183 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252466048 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253305281 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.253505769 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253923524 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.253377351 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254722543 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.254013064 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25351713 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.25433717 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254726906 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253956796 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253968682 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255116383 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.254615547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255291618 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255530948 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255065391 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255607501 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254866616 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256088412 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255340406 seconds)
  done (took 36.284062513 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254980105 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254695538 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2518687 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253040437 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.25367021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251976228 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.251203598 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.253103398 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254254166 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.253518768 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254494862 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254331496 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.254742078 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255555411 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254380658 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.256400331 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254421315 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252742395 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252796712 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.252920466 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.255670684 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.256144246 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.255945711 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.253652678 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252636776 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256292475 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25320823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253331856 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.254924828 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253962038 seconds)
  done (took 38.795289492 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.294672576 seconds)
    (2/2) benchmarking "in"...
    done (took 1.299687862 seconds)
  done (took 3.768994085 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253018966 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255563965 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.257517128 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254484608 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25404679 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256007708 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257173281 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254733021 seconds)
  done (took 11.216456959 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.255359611 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257101432 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.257003229 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.258115015 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.256423286 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.257059649 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263026036 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.276983443 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.257101584 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.258914982 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264120788 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264395056 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258295131 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257427736 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.25627087 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258362419 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25663558 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25767263 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257311075 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258538121 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258406167 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25991328 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26033638 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255594437 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260320536 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.268707816 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.260938844 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.259013547 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.259308803 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.260680449 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258547913 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.255533627 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.258040553 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.25929276 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.26010071 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259432187 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266541902 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281436439 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.264914722 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25964427 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261060637 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256269541 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.258484321 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260249878 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261586967 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259280995 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.259605564 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257229486 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.259431097 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.262861465 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.266239124 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258335804 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.257531327 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261522434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.260626243 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266374467 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.280976432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264035172 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.26925633 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270310391 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.273530512 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284624373 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262664231 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.261827636 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272243295 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28476255 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.265940603 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.279297846 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257334554 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261322002 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.265703778 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271528736 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286098307 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.261582713 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261076379 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261142734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261222429 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260962024 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267107116 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.282438194 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.261445057 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262457219 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271109732 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283142378 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260906504 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261495632 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261953181 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.261184245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.263008385 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27063444 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.28093252 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.26271818 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260542986 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262005109 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.262360937 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262384189 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.261994914 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262210427 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259974351 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.261856188 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262264842 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266615117 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271328226 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262065806 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.265050866 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.269686584 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.263556538 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264277797 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.268358112 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.264520209 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263823341 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267304343 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.268784939 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.261990382 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265969768 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.27194739 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264196624 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264944253 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263568882 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266075024 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273894715 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.290020212 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.26507784 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.26511335 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.268655885 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275656305 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264681216 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.267833854 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.265706364 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262658307 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262175886 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265886293 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264951418 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.264478431 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265121749 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264790606 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263326979 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.265782513 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265410651 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.265840941 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266364454 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265690982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.265592639 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266528425 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.266392339 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.266686041 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270635652 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.263884567 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.265125418 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.264941094 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264102184 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266372245 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.265322102 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.265678668 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.26659129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267042028 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.267087476 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266785856 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.267887771 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267195084 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.267187465 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.267945082 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270379858 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.267001264 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270318058 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266863955 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264124071 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266478375 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267733087 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266770857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267130551 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.26520525 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.269523961 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.274992373 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267477327 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267700619 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270194082 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268218667 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26783051 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26757792 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.271442875 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.275224522 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.266916271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274572055 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.268997314 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268616836 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268976143 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268545053 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.267211244 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269638898 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.270274886 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275475119 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280214352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.294163759 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.270559636 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272290831 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.268556458 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.272366269 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271946092 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.269724855 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269506457 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269310631 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269282823 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270073469 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.270486942 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269723675 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26839604 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.269959355 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269367153 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269284592 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.270516644 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.270072382 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269651919 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.267206735 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270094332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269703583 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.270185331 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.266964515 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.26846161 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.269146171 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.269647475 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.270051756 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273747301 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267932216 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270588303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270682618 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.27137701 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.26929705 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.271493291 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272313703 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270448331 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276357789 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290948466 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.271303304 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276433614 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.291100877 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269413174 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.272505398 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.272242256 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26833179 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274205568 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.282138321 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.271268572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271970884 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272748803 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273580397 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271887243 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277610645 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270316242 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272184678 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272009264 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.272752736 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.2695704 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273604712 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.272366641 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.272523986 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273567334 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273821106 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.273376873 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274278015 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.27390603 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.273763246 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.274806375 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276297506 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.280787001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.277546812 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.273881686 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274628829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.274445055 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.277798508 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.273219162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274332043 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.273955245 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.28503536 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.300319456 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.280254621 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.294432596 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.273493362 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279233663 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.294364398 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.278027285 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.27271209 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273925822 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.274878341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.273867953 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.271534874 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275823716 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.275643735 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274566102 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275685551 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.277715905 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274661411 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.273804941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274300411 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.276007463 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276762941 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.274695897 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.274462446 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.276670286 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276981047 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.273951621 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.2747342 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281990912 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294672373 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.274439412 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275405665 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.274263062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274308016 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276164932 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275937475 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280377544 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.283946628 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.279897367 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.28447941 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275939869 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.285342053 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275357558 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280176429 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284821861 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.27414952 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.275618209 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.275985312 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.275758432 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284016625 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.297539885 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.279422397 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281222737 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276357344 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277559738 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.27751628 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.276842221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278367756 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278382237 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.28470314 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.30097452 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281684883 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27865014 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274666464 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276891635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.279010404 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276448589 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.280325783 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.278676444 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.279612471 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278590172 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.276161025 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.279346171 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.280774545 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.279009915 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275275983 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277406657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283614552 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302267105 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.283526798 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.280061219 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.285306311 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.279616657 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286694797 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29996879 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280274406 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.279337904 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.280443698 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280054514 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279445318 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279420945 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27995729 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281435987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283322343 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.281250506 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281668776 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.280297158 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280643705 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.280935896 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291152398 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.304088893 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282228799 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.28467744 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.278736945 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282581675 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.28526046 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.28190924 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279677999 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283714172 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290579692 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28968889 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.281870749 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280198875 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.28184497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28092095 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.282253338 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.281021015 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.281089222 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.282368546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281167112 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.281839343 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283945083 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281243282 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280505887 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281702847 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281995769 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290916786 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.283054164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.283179778 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282061575 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283582089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.282004941 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.282559976 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.28353519 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.282215676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282938423 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.28472364 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290408399 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289788082 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.284336788 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.2815527 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.283878027 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.282934131 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.283839241 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283804296 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.283839698 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282768594 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284711641 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.282941021 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.283342452 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.28268745 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.28317333 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.282336994 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283138535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285613381 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.291125878 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28340984 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.281201738 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.283489299 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283979503 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282590355 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.282572554 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290668042 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287150159 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.293913785 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.291710082 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.288358368 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.283803234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.287291192 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.293561244 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.284203038 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285099614 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.284368708 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.285365218 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.285460277 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288790951 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28509594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.290981934 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.2851029 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282696028 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.292175468 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.307815172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285578881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287145942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289805936 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286420953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.283094006 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.285850003 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285127211 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291839365 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.307923705 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.286774361 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286910447 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.285886432 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.288144501 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29031928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288184549 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.286437624 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.284030437 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285892087 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28718998 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.287373668 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.284275792 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.286097228 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.285608472 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.290344588 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.294084844 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285313079 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289431389 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.287519276 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.286124108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286926301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.289207591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.285338855 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.285386897 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.286827157 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.28815821 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.288734882 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.289528292 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287084479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.289264604 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290092838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.289586723 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292013146 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.298627395 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295851871 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286754928 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.287485363 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.2876349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.290672069 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288543193 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.28928735 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288844238 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.290182436 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.288694788 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287983064 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.288379082 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.292049929 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304427538 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.311601413 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289503479 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.289156201 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291945603 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288839048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.287261209 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289255666 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290226571 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.292048088 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.298593931 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.290285511 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296189064 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309269556 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291091489 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294951022 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.293350064 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.298211106 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.292046211 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289861147 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.291023715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.294885546 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.305412853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.29056266 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.300800126 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319626303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.312095188 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.290221415 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.291518926 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.290467985 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.290906464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.292723676 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.29134898 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292265099 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.291322306 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291072555 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.29271288 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.296582158 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.292101852 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.292167439 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.291787122 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.2907072 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.291853779 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.289411769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.291817115 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.292272602 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.291027684 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.292214248 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.292475638 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292153027 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.304046395 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.320715028 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.293820945 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.2930063 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.290569032 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.29552826 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.29557785 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.304539289 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301622218 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291594494 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293907731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292992424 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293443088 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.293111873 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.292705377 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.29256607 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.292980314 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291322921 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305852533 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.320545019 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298627244 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.293747291 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294371169 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294749707 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294781114 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294673258 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294546696 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295344632 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.298109693 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299060236 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296204122 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.294871263 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.29720849 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.304206601 seconds)
  done (took 762.864875528 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.292990287 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292485928 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293743915 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292325782 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293154763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292216451 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293682349 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293408738 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29235476 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292645972 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293042705 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293833433 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.293877815 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294178121 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29275695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.293753279 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293106759 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291890209 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.294090526 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294483847 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293587087 seconds)
  done (took 28.369164795 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.295415182 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.294266743 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.294338362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295274512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293030862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295925532 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.294904081 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296431676 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.295942342 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293357416 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296940035 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296877815 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.293289234 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.294405261 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294869873 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296534326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296737939 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294901116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297173988 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294489266 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.29777079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.295726566 seconds)
  done (took 29.710032117 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297960133 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.298315573 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.29727474 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.294150274 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.298564938 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.29515767 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297727156 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.29880253 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297508441 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.298042275 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.296431959 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.299331691 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.305555639 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.304530806 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.300161144 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.298728735 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.298224371 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.299474779 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.299070004 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.297408214 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30385473 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.295462691 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.295335645 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.297085277 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.298849987 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.299190777 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.298237467 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2989006 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.300158162 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.302775119 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.300045949 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297828461 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.301117554 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.297327223 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.300540326 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303611854 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300504983 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.298025582 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.29913246 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.309925449 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.320218751 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299025627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.304963327 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.320644244 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.299143369 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.302303816 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.307468728 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.298286901 seconds)
  done (took 63.635525269 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.299784397 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.300920496 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.298909956 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299909693 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.300537305 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.299966768 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300718462 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300719457 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.299235601 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.298722178 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300884283 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.298893482 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299186166 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.299704768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301310945 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.299589435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29874642 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298023636 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.298407501 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299475764 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.298488068 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300499129 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.3025516 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.298786732 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301806266 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.298798392 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.299490566 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.302679066 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299066264 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.299968741 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.302677091 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302409259 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.302206616 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.300130313 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299971015 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302364794 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303413951 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.300875534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.303124775 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300392655 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.30259198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30335915 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.303624665 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303811911 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301683456 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300591428 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.302720321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.301085655 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302737255 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.30428394 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.303042054 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.30068751 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30455541 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.30121669 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.304746857 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303914619 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301864193 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.301519798 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.305310808 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.302490471 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.303011511 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.304580087 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.303622798 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30517063 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.304728812 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.302765188 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.301987289 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.305662936 seconds)
  done (took 89.718078956 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.304871041 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.305597701 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304862792 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305151209 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306883473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.305448292 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304471969 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.30641732 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.306366075 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.305631768 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.306049078 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.305972543 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.305873973 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30722384 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.305173024 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.305375648 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306276384 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306500396 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307277455 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305340516 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.30666354 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306919997 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.307160592 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306238717 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307497126 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.306875331 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.307324323 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.306693864 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30721635 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.306919402 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.307357857 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306984722 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.306452472 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.306112422 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.307097062 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.306875807 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.30670499 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306771718 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.308419792 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308501025 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.307503818 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.307812915 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30793624 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307335023 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306834472 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306737666 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308677056 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.309190995 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.308329293 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.306946309 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.308398765 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.308742702 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.308711406 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.308160977 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.308260831 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.309004779 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.308274529 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308236708 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.308257581 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.309093118 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30869561 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.310111742 seconds)
  done (took 82.259974834 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309149221 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309268211 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.307429111 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.307333905 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.310172966 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.306591961 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308561392 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.30984297 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.31008447 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.309618615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.311423777 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308023532 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.309421649 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310021566 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308509446 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309019606 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307746778 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30752168 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310972232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30792299 seconds)
  done (took 27.401551387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.307526183 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.309831377 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307605052 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307413577 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.311201278 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.309336597 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.310218356 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310680811 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308238408 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3114618 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311078128 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310679317 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30919268 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309267711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312041518 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309451502 seconds)
  done (took 22.179364473 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.308428195 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.31174882 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.310113122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.31149152 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.309516889 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308152181 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.310697159 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.308945304 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.309438669 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.311849062 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.310473255 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.311892496 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.312413312 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.309825225 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.308804016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.31267399 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309904372 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.309142532 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311568133 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.312591199 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.3101845 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.309938368 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311851362 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311973967 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310238532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.311472702 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.310524946 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.309704784 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308477414 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.313112734 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.310242902 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.310577251 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310140012 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310393312 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.315075908 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.311440528 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.313048064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.312043867 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313422416 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.314137333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.313831062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.311491036 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.31368807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.313473658 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.3116672 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.313314981 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.310987597 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.312330073 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.311530547 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.312204476 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.313939579 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.3136637 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.314559182 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.314252363 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.313914507 seconds)
  done (took 73.358627632 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.315255604 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.313518645 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311663602 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.314061016 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.314261797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.312055432 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314886978 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.314584024 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313031864 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.315035451 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.313588606 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315616703 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.31160151 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.314717978 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.312962503 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.316391978 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.312115787 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.313281622 seconds)
  done (took 24.87713193 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313491788 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.312910484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315504639 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312910494 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311882732 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315407178 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313315183 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.315142222 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315696003 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313763167 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314146358 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.315161428 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.314507423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.316526443 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315114692 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314783679 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.316092147 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316962589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.313687821 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.313254684 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317059505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316182339 seconds)
  done (took 30.153539931 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.314781827 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.316668956 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.316095163 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.332312867 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.333962234 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.314754331 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.31509185 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.315949101 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.338977651 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.368297285 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.362096697 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335968469 seconds)
  done (took 17.195864122 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316341479 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317460586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.315341368 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318546403 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317974624 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316429381 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313825631 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315691299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317120169 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315794375 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314849514 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316852885 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318525053 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316136434 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317015929 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317473678 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314318702 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314386888 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313561348 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317546478 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314904061 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316119463 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313986099 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314212177 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313909953 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314571917 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316461775 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316445736 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314965175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3164639 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317392577 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315224249 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319213444 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316022636 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319159623 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318976055 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316359477 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318809564 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318055113 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31754015 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317895992 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319249631 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318843895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31667211 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318898388 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316718178 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31723094 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316656817 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317063208 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318064312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318160051 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317611396 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319291392 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318508206 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319335987 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320153389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317310083 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317204068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321008074 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312325259 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314351185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31589886 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314138848 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313520025 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316308194 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315639664 seconds)
  done (took 88.135676292 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31347 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313368946 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314880728 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314818826 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313675737 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313915166 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315648494 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313852715 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314181092 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314383123 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316698626 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315271876 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313810863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314308245 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315200031 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31501345 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314413974 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312503714 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315393078 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316441858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313436249 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313559738 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313164243 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312423095 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313829894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31433468 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313503433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313578576 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313966958 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315350128 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312864659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313978215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314643208 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.313729048 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313761528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313630049 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312821765 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314435201 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313613549 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316531629 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312481621 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315514681 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313102541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312843301 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313814996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314489367 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313734081 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314107286 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314118457 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314090228 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314995519 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31438041 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314724736 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315489877 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313953154 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313974726 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314710881 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313793148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314448496 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317068927 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314616862 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314540212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317533544 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314494982 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315058978 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314034363 seconds)
  done (took 87.9770551 seconds)
done (took 1786.166408623 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.479234445 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433540104 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.31648524 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.319293269 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316821215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.337904321 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.326043635 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.316898077 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.31656556 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.31775797 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.317716574 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.504700384 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.312437531 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31701861 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.317754569 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.411875568 seconds)
  done (took 26.894530523 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34761169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.323227277 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.440996714 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.341268739 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.347478169 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.517215516 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.375084085 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.323686901 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.501933386 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.364742857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.327707634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.345970125 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.32277549 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.32434906 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.342202938 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514864053 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582401094 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.313493299 seconds)
  done (took 29.191005486 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79940314 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.33254628 seconds)
  done (took 5.364934681 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.342637726 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.324221231 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.323455201 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.321919937 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.320355106 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.314068992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.321322097 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.314010894 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.313100098 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.454152967 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324027967 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.332762965 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.342840768 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.324096661 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.320080432 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359814575 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.477685601 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321786323 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319897354 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.328547282 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.324251639 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.443129523 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366183968 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.321354551 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.454800024 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.316334543 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.325546028 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33001002 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.470577553 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321843786 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322800769 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.324354368 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.325745938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24898978 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.855213867 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.316925681 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351167292 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.333641134 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.32219034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.493440998 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.326848194 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.332098126 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.316324144 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.838713116 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458399244 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.445550268 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.333814829 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.32574503 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.327214364 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.389273051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.325926329 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326729344 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.37144836 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.132512495 seconds)
  done (took 84.856531358 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.341630181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.318396325 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495256681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.340660603 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318237496 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.318018954 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.337063628 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622812741 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.334947674 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.31793568 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.604101769 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.892454201 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.342106643 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.354107601 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.240997519 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.376326556 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.332148929 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317433019 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319218631 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.322368618 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88144866 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.325529563 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.319132459 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.478937115 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358489098 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.83652539 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.318897801 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.334797574 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.322477027 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.31749632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.841345759 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.338693207 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.372864295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.318868223 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.584542038 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711651848 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672777947 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.323143149 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350970855 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319194503 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.328846835 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827001708 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68698855 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.319479707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.334238975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.829612712 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.319319838 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.31975766 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.321132779 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.566034507 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.318023578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.326912214 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.330426166 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.318538465 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.316843719 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.343949602 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384773597 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827698961 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317980761 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.319531982 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347911084 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.319112582 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.321881176 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.318739064 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.319188679 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688996662 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.446114607 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.324254302 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686776538 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.829703373 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.335761284 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918864012 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335049075 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.32603978 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.388099443 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.318446139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.338074351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.822941855 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.329769956 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.319766426 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66714272 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319576791 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.602937053 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.336925021 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.320785615 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.883640151 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.336404167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.403771217 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.318000199 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.346581831 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.317642437 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.321782804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.588859644 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.352766574 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.317339446 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.318214062 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.330357926 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317843388 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.319813522 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.318598125 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.893707402 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.336357696 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318203282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318043355 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.317656104 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.318507991 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.319770772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.318286556 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.583108505 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.317137208 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.318707651 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.320281396 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.316799594 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.335846055 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.464306325 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.321863394 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.629234529 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.320953258 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.316858765 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.318164576 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.317012769 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368341651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31739724 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326153057 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.213315803 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.590614227 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334720942 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.317591409 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.318198 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322057038 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317422929 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.31943551 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.342411327 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.321218162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.075185747 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.335031946 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.326512822 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.317934504 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.323083914 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317962091 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.323542177 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.319115886 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610881545 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.583227201 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.44758548 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320940833 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.318493481 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.065665419 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.349877435 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.498661053 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.338049077 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319756044 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.565799987 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.467594082 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.321643936 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.318971978 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.320192606 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.576632813 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.319735675 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.640475329 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.859253888 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.336538319 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.320678879 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07009771 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.025703449 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.327497809 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.320736846 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.598119523 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.338047018 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.319538694 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.319932383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.334807658 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.3260454 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.340796972 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.326871085 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.319633257 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.320587474 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.534023933 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.511825869 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.3387812 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.32939278 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.827204728 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415750856 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.319890941 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.328018093 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.323367155 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.319710241 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.376226153 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.321704322 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.328795358 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.323070882 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.325711109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.838638638 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.319604476 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.326079643 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509989228 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997189047 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.336693202 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.331374552 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.319838048 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.207823937 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841968648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351476936 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.628733163 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.328993915 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358880722 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.329282469 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.398063071 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83526079 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.322623302 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32030924 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955954497 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.335191807 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.993135808 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.319473849 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.320883344 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.904933658 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.336498022 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.32278176 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.318615939 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.318553273 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610495629 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.326646654 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.355562644 seconds)
  done (took 495.355059717 seconds)
done (took 642.891930854 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.317861424 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.319818965 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.314486157 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.326457875 seconds)
  done (took 10.51738849 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329413515 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328226768 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328487787 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327540633 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.329724009 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.32760004 seconds)
  done (took 9.211332326 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.320829803 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.322979804 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.327495954 seconds)
  done (took 8.212178605 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526591544 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.341999401 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.650121381 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.338914799 seconds)
  done (took 9.098306343 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328299547 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.328201589 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329269693 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329532268 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331527004 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.331641479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.330657673 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.331888199 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.332816965 seconds)
  done (took 13.213925913 seconds)
done (took 51.492103725 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.040803462 seconds)
    (2/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.348233932 seconds)
    (3/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.595666359 seconds)
    (4/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.339931251 seconds)
    (5/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.651760471 seconds)
    (6/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.591255246 seconds)
    (7/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.380581417 seconds)
    (8/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.348449299 seconds)
    (9/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.324968424 seconds)
    (10/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.344906544 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.782857164 seconds)
    (12/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.321746354 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.139737604 seconds)
    (14/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.323587566 seconds)
    (15/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.340894451 seconds)
    (16/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.308002828 seconds)
    (17/286) benchmarking ("sort", Float64, false)...
    done (took 2.322702113 seconds)
    (18/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.49523359 seconds)
    (19/286) benchmarking ("sort", Int64, true)...
    done (took 2.323033765 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409446929 seconds)
    (21/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.431523354 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.309682397 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.324205125 seconds)
    (24/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363054203 seconds)
    (25/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.349293654 seconds)
    (26/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.331275014 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.322455388 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.345927286 seconds)
    (29/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.315065109 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.210535446 seconds)
    (31/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.467406929 seconds)
    (32/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.38787699 seconds)
    (33/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373054104 seconds)
    (34/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.433026291 seconds)
    (35/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.204883252 seconds)
    (36/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.322808303 seconds)
    (37/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.064061635 seconds)
    (38/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.587824451 seconds)
    (39/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.448730504 seconds)
    (40/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.321751115 seconds)
    (41/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.459304217 seconds)
    (42/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.348841223 seconds)
    (43/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.322467671 seconds)
    (44/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.164059098 seconds)
    (45/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.310075478 seconds)
    (46/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.55002036 seconds)
    (47/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.367670959 seconds)
    (48/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.651164446 seconds)
    (49/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387000316 seconds)
    (50/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.31637285 seconds)
    (51/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.377016445 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.33064995 seconds)
    (53/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.325643118 seconds)
    (54/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.914590059 seconds)
    (55/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.435149451 seconds)
    (56/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.406700422 seconds)
    (57/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.455066235 seconds)
    (58/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.332475897 seconds)
    (59/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.330113082 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.14820273 seconds)
    (61/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.335076465 seconds)
    (62/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.400203828 seconds)
    (63/286) benchmarking ("sort", Float64, true)...
    done (took 2.324998002 seconds)
    (64/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353595568 seconds)
    (65/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.311069599 seconds)
    (66/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.345075034 seconds)
    (67/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.455866765 seconds)
    (68/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.151457605 seconds)
    (69/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352506873 seconds)
    (70/286) benchmarking ("sort", Int64, false)...
    done (took 2.325105311 seconds)
    (71/286) benchmarking ("sort", BigInt, true)...
    done (took 2.325077639 seconds)
    (72/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.313421501 seconds)
    (73/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.328234079 seconds)
    (74/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.339549299 seconds)
    (75/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.125402294 seconds)
    (76/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.334531107 seconds)
    (77/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.548018904 seconds)
    (78/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.327234871 seconds)
    (79/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.31621911 seconds)
    (80/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351343273 seconds)
    (81/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.16599083 seconds)
    (82/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.324647314 seconds)
    (83/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.920575571 seconds)
    (84/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.334202075 seconds)
    (85/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.323455932 seconds)
    (86/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.344728309 seconds)
    (87/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.333118657 seconds)
    (88/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.430662048 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.937770899 seconds)
    (90/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.312282271 seconds)
    (91/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.47179643 seconds)
    (92/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.325395721 seconds)
    (93/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.315093506 seconds)
    (94/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409684641 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.525848087 seconds)
    (96/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.21610563 seconds)
    (97/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.349009046 seconds)
    (98/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.445729806 seconds)
    (99/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.314861943 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717649681 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.741131104 seconds)
    (102/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.3312138 seconds)
    (103/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.325087247 seconds)
    (104/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.315192191 seconds)
    (105/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.156115604 seconds)
    (106/286) benchmarking ("sort", Bool, false)...
    done (took 1.839731286 seconds)
    (107/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.351571281 seconds)
    (108/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.435189863 seconds)
    (109/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.453581142 seconds)
    (110/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.606116532 seconds)
    (111/286) benchmarking ("sort", Int8, true)...
    done (took 2.328251108 seconds)
    (112/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.101310389 seconds)
    (113/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362147191 seconds)
    (114/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581583 seconds)
    (115/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.329131969 seconds)
    (116/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.286201269 seconds)
    (117/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.073847847 seconds)
    (118/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.795645823 seconds)
    (119/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.460168331 seconds)
    (120/286) benchmarking ("sort", BigInt, false)...
    done (took 2.328876165 seconds)
    (121/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414040844 seconds)
    (122/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.315682219 seconds)
    (123/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.337309313 seconds)
    (124/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.108314438 seconds)
    (125/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.329150466 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.356436048 seconds)
    (127/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.353628513 seconds)
    (128/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33860598 seconds)
    (129/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.328347908 seconds)
    (130/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.453089377 seconds)
    (131/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.333413415 seconds)
    (132/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.326081386 seconds)
    (133/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.351781393 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.084548217 seconds)
    (135/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.393326054 seconds)
    (136/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.345009471 seconds)
    (137/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.379179863 seconds)
    (138/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.728983027 seconds)
    (139/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.831279085 seconds)
    (140/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.322301881 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.318260146 seconds)
    (142/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.325273237 seconds)
    (143/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.889365448 seconds)
    (144/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.463096869 seconds)
    (145/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.317133769 seconds)
    (146/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.339646381 seconds)
    (147/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.319040587 seconds)
    (148/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.329165387 seconds)
    (149/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.473154494 seconds)
    (150/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.394689853 seconds)
    (151/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.313858951 seconds)
    (152/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.322436632 seconds)
    (153/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.686392226 seconds)
    (154/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.325644099 seconds)
    (155/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.824653916 seconds)
    (156/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.321882125 seconds)
    (157/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 2.331034674 seconds)
    (158/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.357616207 seconds)
    (159/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.38871478 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.221942501 seconds)
    (161/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.305976218 seconds)
    (162/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.324498462 seconds)
    (163/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.364175208 seconds)
    (164/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.331627961 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.104561333 seconds)
    (166/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.327840687 seconds)
    (167/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.5711525 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.330896697 seconds)
    (169/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.381686637 seconds)
    (170/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.325129968 seconds)
    (171/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.325323558 seconds)
    (172/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.338659361 seconds)
    (173/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.844671401 seconds)
    (174/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.396139447 seconds)
    (175/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.325109294 seconds)
    (176/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.37152447 seconds)
    (177/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.319070779 seconds)
    (178/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.359608572 seconds)
    (179/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 2.336224083 seconds)
    (180/286) benchmarking ("sort", Float32, false)...
    done (took 2.332000844 seconds)
    (181/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.319648744 seconds)
    (182/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.325269246 seconds)
    (183/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.410315895 seconds)
    (184/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.420837461 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.318342923 seconds)
    (186/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.325756748 seconds)
    (187/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.326444578 seconds)
    (188/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.374158098 seconds)
    (189/286) benchmarking ("sort", Bool, true)...
    done (took 2.331280283 seconds)
    (190/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.390509805 seconds)
    (191/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.42544701 seconds)
    (192/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.824652702 seconds)
    (193/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.319514915 seconds)
    (194/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.234445822 seconds)
    (195/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349781345 seconds)
    (196/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 2.331884345 seconds)
    (197/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.327184013 seconds)
    (198/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.343806667 seconds)
    (199/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.319400608 seconds)
    (200/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.234039159 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.334977269 seconds)
    (202/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.171805724 seconds)
    (203/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.321181238 seconds)
    (204/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.3595178 seconds)
    (205/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.319196641 seconds)
    (206/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.330955594 seconds)
    (207/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.550648939 seconds)
    (208/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.332495053 seconds)
    (209/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.077919733 seconds)
    (210/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.815932827 seconds)
    (211/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.320104534 seconds)
    (212/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.320758493 seconds)
    (213/286) benchmarking ("sort", Int8, false)...
    done (took 2.331852885 seconds)
    (214/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.420066221 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.723323135 seconds)
    (216/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.349321783 seconds)
    (217/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.343943649 seconds)
    (218/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.320282303 seconds)
    (219/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.356948395 seconds)
    (220/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.08014207 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658822607 seconds)
    (222/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.375368884 seconds)
    (223/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.341976772 seconds)
    (224/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.341137697 seconds)
    (225/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.375801913 seconds)
    (226/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.480307722 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.163594191 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.958120642 seconds)
    (229/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.167373831 seconds)
    (230/286) benchmarking ("sort", Float32, true)...
    done (took 2.334751088 seconds)
    (231/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.920210582 seconds)
    (232/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.352479541 seconds)
    (233/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.379451654 seconds)
    (234/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.457504036 seconds)
    (235/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.335596835 seconds)
    (236/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.947561672 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.330292679 seconds)
    (238/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 2.360029955 seconds)
    (239/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.322100378 seconds)
    (240/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.373782253 seconds)
    (241/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.375362316 seconds)
    (242/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.350728691 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.329355598 seconds)
    (244/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.322575254 seconds)
    (245/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.324061093 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.32284906 seconds)
    (247/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.557845579 seconds)
    (248/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 2.36078585 seconds)
    (249/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.324261281 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.362224837 seconds)
    (251/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.672111226 seconds)
    (252/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.714193217 seconds)
    (253/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46381874 seconds)
    (254/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.672362007 seconds)
    (255/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.577250156 seconds)
    (256/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.355373605 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.442074538 seconds)
    (258/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.343679528 seconds)
    (259/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.324475755 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.322617699 seconds)
    (261/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336167206 seconds)
    (262/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.42080572 seconds)
    (263/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.327141112 seconds)
    (264/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.33271857 seconds)
    (265/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.418660739 seconds)
    (266/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.67429343 seconds)
    (267/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.090845616 seconds)
    (268/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.34624783 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454790037 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.334464961 seconds)
    (271/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.401012284 seconds)
    (272/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.324218984 seconds)
    (273/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.42218444 seconds)
    (274/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.344970712 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.32880124 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.380504772 seconds)
    (277/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.362581908 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.325329364 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.663438919 seconds)
    (280/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.546420159 seconds)
    (281/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.437700957 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.360556458 seconds)
    (283/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.32726895 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.227296761 seconds)
    (285/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363971089 seconds)
    (286/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.324149238 seconds)
  done (took 565.048680525 seconds)
done (took 566.28956714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.371814341 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381470814 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.349104781 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.370351738 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.460807852 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.525894781 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.361100641 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.350855157 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.396837462 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.398651192 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.347717976 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.524220962 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.350609254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.349626261 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.350020249 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379404969 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.339362094 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.358152391 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.367691963 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359540625 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.367982783 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.348275914 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.400720601 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.52452147 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.354908476 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353145373 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.352631865 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.36945225 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.462052829 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.354907425 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.353977274 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.361632275 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.344047311 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348061913 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.346803119 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.370774817 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.361498981 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.362078531 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.355151617 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.382861355 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.342971908 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.350774256 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.354341888 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.352728831 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.353498656 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.356320783 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.35283876 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.358119868 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38212173 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.381837724 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.354558346 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.367822415 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.354958068 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.353739113 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.363683946 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.352075486 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.35556535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384984282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.371422683 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385379627 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.348106778 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.364625495 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.355525097 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.369686095 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.360966007 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.341854353 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.348985139 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357261542 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.344813478 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.35673474 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.343220794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.360465587 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.35615713 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.368103172 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.385522664 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.346984452 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.349539304 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.353422367 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.361341799 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.352407341 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.364956323 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383428264 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.360653629 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.355740404 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382989088 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.529034127 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.365255707 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.354225892 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.364058353 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.374459396 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.362658678 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36543496 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.35900049 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.350451413 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.364647555 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.359960884 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357638622 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.358149527 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.360655061 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.366273089 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.346537995 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388284364 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.354042699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.352049704 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.355051017 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.368905122 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.348197381 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.356404781 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.379356337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.404673548 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.359516053 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.35809759 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.359807334 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389322763 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.366033688 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.360011987 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.354374103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.346312935 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.353459709 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.37208542 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.360093978 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.356311946 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.391279786 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.360715597 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.354246491 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.355269359 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.360720784 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386742356 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.479170981 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36864629 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.388398469 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.356005 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.362527008 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.387532942 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390030688 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.388922516 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.361752634 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.390447896 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.373648993 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.356261715 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.366990882 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.370856185 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.360647712 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.364503721 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.353096488 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.386864535 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387327016 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388616353 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.381158428 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.478210954 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.355808608 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.345746928 seconds)
done (took 225.566353856 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.415663444 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.353931512 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.438124133 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.355398581 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.45416755 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.455101315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.353850895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353813836 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.352761593 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.736825964 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.354664696 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352398987 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.355658707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.353180476 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.437368443 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.357099772 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.353709575 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701913393 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.355867296 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.425634398 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.353523681 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.353695224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.355986388 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.743663973 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.355744097 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.352537913 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.427331545 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.357162784 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.70566411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.352203977 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.353180095 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.704339002 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.44751865 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.374317921 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.367125057 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363977429 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.458173308 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.374942105 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.438216275 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.437948415 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.441637184 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395923377 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.351959615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.355440496 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.358232268 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.357162143 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.354620248 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.385258506 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.356345445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35542593 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.703145988 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.367831756 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.365043044 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.356741735 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.355887508 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.378654547 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.356386021 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.359956679 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.449397474 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.359012724 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.421609114 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745725234 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.739758562 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.359115442 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.354956368 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3585084 seconds)
  done (took 106.003118096 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.425861113 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.437002762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.471412278 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.360871754 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.412076998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4750393 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.361390309 seconds)
  done (took 11.211160653 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.367102708 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.360353988 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.408180121 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.4096284 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.360107116 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.573418227 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.361525224 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.371284768 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.358320086 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.437294036 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.362890071 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362336591 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.367534936 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.357565119 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.410701321 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.372197937 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.476542908 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.36219177 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.361582575 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.512907231 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359648685 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.368030063 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.437592607 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.371293421 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.363286347 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.369201957 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.277592509 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.362627046 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.360954041 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.361894144 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359664447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.461223498 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.362842268 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.359573751 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.359783682 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.52123504 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.36345799 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.36052648 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.362738733 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.364476869 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.362464347 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.365017347 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.364563954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35952743 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.363492325 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.386716102 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.363149514 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.362460423 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.363987532 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.363483099 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.436804391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.364860668 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.360986406 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.360702676 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.440685448 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.370912689 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.364783157 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.362406211 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.364375874 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.360884305 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515477052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.412046432 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36262896 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.410905496 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363892461 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.36457091 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.36619063 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.362933604 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.456750269 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.365457281 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.412390576 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.361939732 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.583429424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.388046385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.367336244 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.36640838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.367740788 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365456411 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.360903663 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.370568124 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361898957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.366906837 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.372019846 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.362519338 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363150094 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.548875384 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.522212333 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.364173901 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.378250469 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.373396276 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.363047347 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.44107779 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.365843997 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361444118 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.417733834 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.480542322 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.443617814 seconds)
  done (took 140.987854173 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.372346642 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.374336005 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.370222387 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.388581259 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.367714491 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.367342439 seconds)
  done (took 9.515783136 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.369057313 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.368667618 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.365598415 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.367734395 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.366657772 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.368919017 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.368520368 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.369617766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.370697581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.368030335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.368401275 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.369478674 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.369187199 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.368226745 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.368067379 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36909856 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.367599975 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365662627 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.367550844 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368175723 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368013748 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.368921768 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.367831453 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.369379219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.373048519 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.369531059 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375910951 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.369399574 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.368466788 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376677616 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38911129 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.369310534 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.37243657 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.374795221 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.374284202 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.369782086 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.372881679 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.371861677 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367539722 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.370674141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.370644199 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370311162 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.370562079 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.371079665 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.37120489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.375453195 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.373117499 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377920918 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.369886144 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.372357169 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.372161005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.371305612 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.370806711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.370364477 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.372903627 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39119964 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.375096045 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.371916704 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.372080836 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372379095 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37359801 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.371701628 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.373433244 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.375807766 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.36891786 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.371410845 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374667869 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.376000667 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37149119 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.37202287 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.372818654 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.36935632 seconds)
  done (took 101.017979104 seconds)
done (took 370.001054124 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.796404545 seconds)
  done (took 4.074847543 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.46771958 seconds)
  done (took 3.74977076 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.363385333 seconds)
  done (took 22.650911079 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.444032099 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.40345332 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.376190266 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.3649259 seconds)
  done (took 10.868033907 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.590087067 seconds)
  done (took 3.870764185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.364042681 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.364884232 seconds)
  done (took 6.010707064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.675969002 seconds)
  done (took 3.957321018 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.789778392 seconds)
  done (took 4.077282657 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.373123815 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.380848656 seconds)
  done (took 6.042249815 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.357198943 seconds)
  done (took 3.637735184 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.461432541 seconds)
  done (took 16.744011975 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.36452476 seconds)
  done (took 3.648780576 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.390961285 seconds)
  done (took 3.672090093 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.956565304 seconds)
  done (took 6.237207045 seconds)
done (took 100.52180406 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.366570169 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.366539223 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.368468493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.364876491 seconds)
  done (took 10.74749793 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.407426374 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.408150599 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.408937533 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.418212279 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.410782985 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.407934891 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.400492673 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.400129777 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.418800701 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420211834 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.409563036 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.40874918 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.407081144 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.40035076 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.411755788 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409418624 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.418195533 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.409456554 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.401322893 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.41187673 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.375103473 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.419143078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.410438074 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.376918074 seconds)
  done (took 35.052260178 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.869938131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.447306321 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.527585135 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.426463112 seconds)
  done (took 7.554605946 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.425667683 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427984174 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.441073642 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.478292946 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505432121 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.437472129 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398740026 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.397543466 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.383405037 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.430215162 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.504411832 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.444895769 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.513394226 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.375275477 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.562638057 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.376558944 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.376675424 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.42988206 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.479650164 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.493570376 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.376906598 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.428743805 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.434427334 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.445811433 seconds)
  done (took 35.851594465 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.375573054 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.395187392 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.374721394 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.376731557 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.384235466 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.375812698 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.37685959 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.377510238 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.37686063 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.383079648 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.374042759 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.389441932 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.376415059 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.376667585 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.382530943 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.377485454 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.383331604 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.375352989 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.376430305 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.382905839 seconds)
  done (took 28.876869819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.370598318 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.370364214 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.722666537 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.627528538 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.370528876 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.37050436 seconds)
  done (took 14.118043813 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446036425 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.594768001 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.379910485 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.733272456 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.811801331 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.37917753 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.3788913 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.627006742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.946159675 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.932875902 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442711941 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.44690816 seconds)
  done (took 20.407315322 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.380247561 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379824599 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.383212048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.395524661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.433539675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.382815829 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.386272337 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.371092803 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440545997 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.437992013 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.384185769 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435634462 seconds)
  done (took 22.099127171 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461907921 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.3730005 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382030721 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38700638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374543269 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.585933952 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399778887 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.086874682 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.39696002 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648344845 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373363495 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470255304 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630661616 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381838688 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382147109 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.364345614 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607777413 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878913439 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376573884 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3811032 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408197526 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374661074 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389728889 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.598385295 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377527806 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.375233642 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.638745572 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.374715863 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66393434 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396884664 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386880483 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376084504 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651044072 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040889956 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492383912 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590048469 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379984925 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376410898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.38351595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.393573866 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390530634 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385816954 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388829772 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377157456 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.377575401 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376195021 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127739823 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40206038 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.37483947 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376089046 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645776715 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481516918 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.381496007 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.377140744 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464775418 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378440022 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.382024381 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474678239 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950752286 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38667372 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396224959 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.385762077 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378000081 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390382083 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015131207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.384148701 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.382139396 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381917231 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378942773 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390926951 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402155738 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378944198 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.403357919 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378141941 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082968684 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392544384 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388388217 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930985681 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387060705 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.385793111 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608020549 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378514169 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379607374 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.37800005 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.3788302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092132893 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395178728 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.365511672 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40777571 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.094871051 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.614973487 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400565759 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404356616 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604114921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.365511669 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381055727 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.391331789 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388470293 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403674614 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105565111 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400188111 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.385298618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637043029 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.593256279 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382081904 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.391300275 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873682305 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414704305 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.404414042 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.388389219 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.605969886 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.982813027 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.398000078 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394065153 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406623526 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.381386152 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134629142 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401484208 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.49012969 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380266191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655618269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.173969968 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389999068 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449671753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386381208 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.382123598 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394719904 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392147407 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382028274 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.590882922 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40030432 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.419412419 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.383919075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382643575 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.381053413 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394570637 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.391158508 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.607553839 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395386319 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666323907 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382820446 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385127031 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383809029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60887443 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.387456818 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.720880147 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646715004 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38425507 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420284909 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403061461 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402898957 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484641401 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406416571 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386648761 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646718483 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.388665818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.389356568 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39810375 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394005002 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392352548 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.390690944 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401017735 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979652806 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363909614 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.385845172 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275296773 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.399010948 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453166863 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391143569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602719399 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.383852339 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39013292 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.392194913 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.397540427 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616516055 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396781015 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.398137367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474922772 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.869319535 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.999369939 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39999055 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.385622404 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.384259623 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.384214221 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38650891 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386257993 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.385761294 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602015604 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401343908 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393796137 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989807195 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388659827 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397606701 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.400808615 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397687245 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.393324229 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387461589 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.38578045 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387603164 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416941085 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.406940311 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531757367 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.40157773 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386886159 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.906750683 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.394273461 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388612935 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.38799155 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422473748 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388788702 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234806599 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646693266 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396463628 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651923544 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409216113 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.413123558 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387045581 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388235669 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401064358 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.39705389 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40559614 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.398954282 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399309395 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397844486 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957363565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129637778 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937742796 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404985513 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.390563413 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395296428 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.114197843 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408529787 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38994357 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626021737 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113226237 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408997618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875781936 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.407909164 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179860299 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653706147 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626634728 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404718958 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.390614458 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671352102 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611516407 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425094351 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394074854 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398206701 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.37520088 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95569916 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409408665 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476236507 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116446257 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409668039 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400273095 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.464831951 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.390386057 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815152988 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411817482 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390988321 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394755054 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404243873 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215664743 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.392521188 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392894138 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033775193 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404844662 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885340647 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411425569 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610309459 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.404980593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.396826053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.389367782 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.388194965 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.656316353 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656448938 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401647832 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40288465 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964745034 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25602685 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.398748828 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394081003 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147397451 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405437411 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690908292 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.414358582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.404171004 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407540632 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395299381 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394852473 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.39221064 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395477007 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372177872 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890036541 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.421580566 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411665897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410300333 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246975732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.650587334 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410533549 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.990559174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.620053844 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41048755 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418632899 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.398484067 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398400246 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.390492257 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395322183 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630787904 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467156599 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618101661 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.395036742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.3898787 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.416112904 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.607462364 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395720371 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.40398756 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650785036 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.395303989 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.405614748 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13087517 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422982907 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404975389 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406505004 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406619314 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417552995 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466629236 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615991209 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.408731395 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.409130049 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815232305 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425735854 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40770689 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.411743443 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491570746 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39720082 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.413181107 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.178630643 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999835154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141089503 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006528215 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671129734 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407752663 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400589375 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397871888 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5494263 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398137843 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67356794 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397108369 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.415894275 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420884094 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403608517 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420684798 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.617464159 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.675245095 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398036638 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404652119 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40620245 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.398442328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408601758 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.609151394 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891312366 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948156753 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401457833 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398503007 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157186485 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692753401 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398428563 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397529102 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399566029 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.411028231 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.409601917 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.414108064 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412628404 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555164158 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662941225 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090810899 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.430764728 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.429037073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.173524299 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399656627 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662309073 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40474777 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628305396 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002937417 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118910017 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664382446 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471425369 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.619902951 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.40016947 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548664461 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.410788858 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409011957 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402036015 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.244905735 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.398738501 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.410974951 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013367703 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66573773 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405657025 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.409076642 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432830957 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.412327406 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.624375303 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137987766 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634734224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411520366 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409594195 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401076329 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014480396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676101588 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411194221 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.4052937 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647013625 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403360554 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.427836279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.855008783 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.400322906 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961413492 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.375951734 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42668369 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405996928 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.138682426 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015793801 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.415771074 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911390856 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405489697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416799668 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685316124 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.409334678 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405607104 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687961524 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409083637 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41384932 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634694569 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.004875368 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.188806733 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.420778468 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412440602 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.413375539 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403586927 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453865138 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404811327 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412311314 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.838122941 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424568684 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405562676 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418507395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.415904551 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41888772 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.411976716 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406693043 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412979014 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.392836677 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.426587979 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422775825 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512873909 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978877936 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42821176 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.09305098 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.737215588 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.662772577 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406138073 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.41664015 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410508843 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406369951 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40614968 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40621749 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425656389 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961815327 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.408479502 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.425436653 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.410495618 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.624645974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619241157 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42172338 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636674278 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422108548 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430106792 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.392697575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406883125 seconds)
  done (took 983.665511508 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431506258 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.438583121 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.435199802 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.426051995 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.448370776 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.454127214 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.477052007 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.432457056 seconds)
  done (took 20.862600063 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.410859928 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.424971377 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.408978249 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.424941432 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.420589529 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.89411178 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.426931512 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.416791932 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.417788609 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.41856577 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.418172667 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.093246991 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.434000572 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.422657167 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.403187333 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.416359811 seconds)
  done (took 33.180177995 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.408463253 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.569760871 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.43258895 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.468539461 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.425033608 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.409604443 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.657535956 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.425432003 seconds)
  done (took 27.117576263 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419484443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.420133352 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.421112019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419394978 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.420997553 seconds)
  done (took 8.422967448 seconds)
done (took 1249.238627378 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.413729532 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.416856098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414148449 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415696432 seconds)
  done (took 6.980919638 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.395831726 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.397114981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.397665845 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.410057298 seconds)
  done (took 9.921557711 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.123309433 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.091877541 seconds)
  done (took 5.536148937 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.411423389 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.173487647 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.149714926 seconds)
  done (took 8.057570805 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.701891974 seconds)
  done (took 3.025450542 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.848968283 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.775539223 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.605178952 seconds)
  done (took 6.55224987 seconds)
done (took 41.396098801 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.41788759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.660407534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.565683126 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411690477 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.573921288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.567859361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.217556902 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.424697333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.419526765 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.425480359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413660089 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.577625296 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.130853643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.662405849 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.130573578 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.660956573 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.574539306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.411548037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.416332842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423482121 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.220256999 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42028093 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413103606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411158611 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.599408017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.559245677 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.422468766 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.661809429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.427861569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.411935579 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.576961859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412012222 seconds)
  done (took 83.946523071 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411797457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418473302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427640804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.419167597 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422892943 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.423041132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.414171425 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.41484789 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.422529705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.41987546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.418337182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.41703168 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.41403151 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41301549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.432966507 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413321666 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.428946458 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.41310675 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.413168035 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430080275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414388744 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.41251689 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.414106377 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413100089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413554225 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428295282 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.413469453 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.430400935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429342492 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.413839563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428677502 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.414155005 seconds)
  done (took 78.741270015 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414380849 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.413048372 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.433165244 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.41482385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.414181283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435036144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416653104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.415199685 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.438446791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.418415953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.414393194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.414306595 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434344733 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.41428981 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41698969 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.414649123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.415599495 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.416053582 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42973787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.415101518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.431628992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.42208397 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.41393561 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.441644429 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415034935 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417797215 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421846937 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.416447153 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.417647098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424896338 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.417733707 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415327885 seconds)
  done (took 78.782256335 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.618735056 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424259144 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424796795 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.378695853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423918728 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423456505 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41682536 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622072707 seconds)
  done (took 15.060675856 seconds)
done (took 257.853905422 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.415139496 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.434603199 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641485676 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.445177273 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.417422259 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464155943 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.444856035 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.644965625 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.432582318 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.665627348 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.458591067 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441796288 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.417725341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461582291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.707319274 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.570815457 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.353956629 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.417610137 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.765753728 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.435464502 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71091654 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.419717554 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.698948679 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.412557301 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.452729643 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.41798607 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.418850973 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.358609401 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.462700398 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.774408724 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.429330686 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.410894568 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.51494786 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.52550485 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.638679536 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.581256869 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.420473293 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.515981322 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.643599392 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.420598835 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.42841696 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.216752898 seconds)
  done (took 85.242014646 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.425663295 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.54422912 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.428252828 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.427203571 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.427329926 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.547527214 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.520971772 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.4263287 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.42765709 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.425929435 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.42694653 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.427869773 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.428650617 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.429087337 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.428706358 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.428805891 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.426381768 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.429048659 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.430155992 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.472725805 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.551006261 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.450740873 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.421465229 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.426423343 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.532221597 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.564552435 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.427151166 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.421737159 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.472517371 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.428854671 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.430992946 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.474791162 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.429065299 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.430974933 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.549104187 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.532489557 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.431743351 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.427232613 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.545291282 seconds)
  done (took 58.211604346 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429902373 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.68269176 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.854424112 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.437185601 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.4307806 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.435024537 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.509294882 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430650478 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433653976 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433969763 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.604522923 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43414256 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.464040725 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.885250722 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434517663 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43100567 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432007785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431400819 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.691821011 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.440850741 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.529937206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431257673 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.511705451 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441784716 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.454925715 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.431476731 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.437583658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.025296554 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.434540741 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.601575394 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.246139199 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.516875976 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.961806977 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.869727787 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.242577854 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443486818 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43439416 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.60905737 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.435673662 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.434046386 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.512715307 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.435220199 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.866428224 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.114241311 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451390487 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432662771 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048218819 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.608071859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.681194335 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.442873218 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.891965673 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436233556 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.436948373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.435401648 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.684275364 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44224089 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.435206653 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.049941889 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.454872128 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.515511977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.436877722 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.436001428 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.698315347 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.435605652 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690972275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436468418 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442386613 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454108494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.87169165 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437654383 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13846667 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452340188 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436522005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.60440033 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.691898839 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.080745987 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447404803 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.707536643 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.976074702 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.513300104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.43970877 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.017367075 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517125905 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.439697083 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.439744791 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.438447713 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.436191809 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484188942 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512087704 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.076697674 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128438926 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.076150675 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.534870109 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.45034294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.43593156 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.050489994 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.454487316 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.438081799 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.868071317 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.140259528 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455276638 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.444239987 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.143606171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.45682519 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.517780173 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441840703 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.879926192 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437742222 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.483970189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.43833963 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445242662 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461292898 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.517518391 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.441891316 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.439240365 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.110064687 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.630912565 seconds)
  done (took 189.04850713 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.432451164 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.457738345 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.432207875 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.450238804 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.430954667 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438368475 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.431266426 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.43182397 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.438109685 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.432578797 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.432393608 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.432810947 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.434105698 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.43096925 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.461644907 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.439385451 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.433240014 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.431326732 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.433737952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.434031263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.432303117 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.450525288 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.432074384 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.432633286 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.433860451 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.433900423 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.456743375 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.435320643 seconds)
  done (took 65.588654954 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.440145134 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.009390032 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.44122034 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.57283921 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.462680199 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.438329853 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.571557065 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502312287 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.442423568 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.439364218 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.439942803 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.746211195 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.442834793 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973308039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.644623115 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.573739043 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.974187715 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.468856205 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.440554567 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.440659895 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.576271949 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.451887846 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.749720907 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.026339197 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451311222 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.024039832 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.441757976 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.442688269 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440394547 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.029221009 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.45081363 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.757616569 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.528685553 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.502359111 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.033113025 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.977863615 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.998594172 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.600937823 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.443872058 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.439801428 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.443552811 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.43308893 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.031595847 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.453902596 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.443845719 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.025465532 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470161297 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.445873815 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.45050419 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.442920897 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.503136928 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.503747395 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.760009173 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.044833218 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.529450305 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.456747062 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.576528715 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.825127877 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.4479454 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.975963458 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.460355483 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.034315013 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472324436 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.434739195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.442665197 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.480985441 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.595668317 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.576616374 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.966387715 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.462186813 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.963993416 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.614577861 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451728443 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.444089274 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.446710602 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.019885784 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.978825855 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.622530246 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.581003932 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.643921428 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.43741235 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444465597 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.436993956 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.522548275 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.444690298 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.022200493 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.998874813 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471917987 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446336071 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.44919075 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.448043065 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.627015609 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.037993645 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.524359679 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.974385548 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.78227937 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.756190515 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.448133979 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505101167 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.461698563 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.757630034 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447726224 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503985478 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.889295299 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.758106078 seconds)
  done (took 171.735532138 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.688562779 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.457917966 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.54933856 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.599403594 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.053616804 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.052427509 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.447008199 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.569391602 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.556320406 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.707638544 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.458272525 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547587355 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.664408703 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.526469605 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.177394842 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.512673078 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.542096919 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.606374734 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.590230878 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.442986827 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.112673366 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.745966904 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.63842573 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.466405199 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.548912103 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.229572209 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.044163509 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.968825736 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.62261909 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.444529513 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.969910762 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.445343591 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.398241157 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.120463192 seconds)
  done (took 66.857773081 seconds)
done (took 638.012567064 seconds)
SAVING RESULT...
DONE!
